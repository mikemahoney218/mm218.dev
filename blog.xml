<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Mike Mahoney</title>
<link>https://mm218.dev/blog.html</link>
<atom:link href="https://mm218.dev/blog.xml" rel="self" type="application/rss+xml"/>
<description>Technology and the Environment</description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Mon, 07 Aug 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>A long digression about the word ‘vector’</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-08-07-vector/index.html</link>
  <description><![CDATA[ 




<p>In linguistics, there’s this concept called “semantic overload” that refers to when a word has more than one distinct meaning, and the appropriate meaning needs to be inferred from context. The classic example is when someone says they’re “running to the store”: we can guess from context that the speaker isn’t going for a jog, but we’re forced to guess.</p>
<p>Software engineering loves semantic overload. An “agile team” might be a vague way to say that you’re very responsive, or it might mean you work in tightly-defined two week sprints. A “transaction” might be a customer ordering from a website, or a database writing a new row. When you’re developing software that’s tackling new types of problems, there’s often not existing language that describes exactly what your tool is trying to do, and so instead programmers use existing terms and rely upon metaphors and analogies to adapt them for a new purpose. But because the meaning of these terms changes depending on the context they’re used in, this overload can be a real barrier to learning for new users who don’t yet have the context to understand the overloaded term. For example, I’ve worked with a number of new programmers who were afraid of opening “Issues” on GitHub projects, because in other contexts announcing an issue you have with someone’s work is an aggressive action.<sup>1</sup> Lacking the shared context makes it hard to decode what these terms mean.</p>
<p>And so, the term “vector”. For a bit of context, my undergraduate degree was in ecology – forest ecosystem science specifically, a specialization chosen in order to not need to take courses in Calculus 2 or Organic Chemistry. Which meant that, coming out of my degree, I had one course in physics, a handful in GIS and spatial data, and none in computer science. So when I learned that the base unit of R data, the result of running code like:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2</code></pre>
</div>
</div>
<p>Was called a “vector”, I was frustrated. At this point, I had been told that:</p>
<ul>
<li><p>In physics, a “vector” was any line with a magnitude (“length”) and a direction.</p></li>
<li><p>In GIS, a “vector” was pretty much any type of data; points, lines, polygons, whatever.<sup>2</sup></p></li>
<li><p>In R and apparently computer science, a “vector” was quite literally any data whatsoever.</p></li>
</ul>
<p>This felt to me like another case of pointless complexity, of the word “vector” being overloaded beyond the point of usefulness – and I didn’t feel like the word “vector” was particularly useful in the first place.</p>
<p>It turns out, though, that I was just missing the context that linked these three meanings together. I wouldn’t get that context until I was in grad school, procrastinating by watching <a href="https://www.3blue1brown.com/topics/linear-algebra">3Blue1Brown’s excellent videos on the fundamentals of linear algebra</a>. I’m not nearly qualified to teach anything about linear algebra, and I don’t have the space nor the inclination to try to do so here – but I’m going to try and share the thing that gave me an “aha!” moment. To do that, I need to start off by getting really abstract.</p>
<p>First off, let’s say we’ve got some 2-dimensional plane, that looks like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-2">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We’ve got our X axis and our Y axis here, and both meet at the origin – the place where the X coordinate is 0, and the Y coordinate is 0. We’d say that the coordinates at that point are (0, 0).</p>
<p>Now let’s go back to our physics definition of a vector – any line with a known length and direction. We could draw one of those in this coordinate plane – say our line is a bit longer than 70 “units”, going from (0, 0) all the way to (50, 50):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"point"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This is how I was taught to think about vectors in those physics classes – arrows on some abstract plane. For instance, we could turn this into an acceleration vector by labeling these axes, so that our line is now charting speed over time:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Speed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"point"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>If you change the axis labels to distance over time, you have a velocity vector instead:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"point"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The meaning of the line is defined by the axis labels – by the actual coordinate plane your vector is in. Looking at our velocity vector, we can tell how far we’ve gone (position on the Y axis) for any given time (position on the X axis).</p>
<p>So if we use a different coordinate plane and relabel our axes to show “distance away from the origin”:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We get vectors in a spatial sense. Rather than showing distance at a given time, we’re now showing the position of our data – in this case, a linestring – in one direction when it’s at a given position in the other direction. Just like in physics, the actual meaning of this line depends on the coordinate plane – on the <em>coordinate reference system</em> of the data. The CRS of your data is a standardized way to define <em>where</em> your origin is, <em>what units</em> your distances are measured in, and <em>which direction</em> away from the origin you’re going.</p>
<p>And we can use spatial vector data to replace our physics vector. We just need to define a matrix containing the beginning and end coordinates of our line:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">our_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb8-2">our_matrix</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]    0    0
[2,]   50   50</code></pre>
</div>
</div>
<p>And then we can tell sf that it should understand that matrix as being a line:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">our_line <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_linestring</span>(our_matrix)</span>
<span id="cb10-2">our_line</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>LINESTRING (0 0, 50 50)</code></pre>
</div>
</div>
<p>And voila, we have a spatial vector:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb12-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> our_line</span>
<span id="cb12-6">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>At each point along this line on our X axis, our line is a single, known position on the Y axis. If we only have one measurement of XY position – say, a single GPS measurement – then our line would be of length 0. We’d have a point instead:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb13-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))</span>
<span id="cb13-6">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>That point represents a single position, which we’d understand through our coordinate reference system as being a certain distance away from a reference point.</p>
<p>Similarly, this is what vectors in R are abstracting. Imagine that, instead of using sf to make this a spatial vector, we turned our matrix into a data frame and used that with ggplot2 instead:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">our_matrix <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance away from the origin in this direction"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"segment"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Just like with sf, we’re representing vectors by the places they start and end. And because we’ve plotted this as a line, we’re able to tell the position of our data at each distance along either the X or Y axis, within this coordinate reference system.</p>
<p>Or take for instance the <code>age</code> vector inside the <code>Orange</code> data frame:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">Orange<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  118  484  664 1004 1231 1372</code></pre>
</div>
</div>
<p>According to <code>?Orange</code>, this vector represents the age of the tree, in units of days since 1968-12-31. Similarly, the <code>circumference</code> vector is the circumference of each tree in millimeters. We can plot those vectors just as easily as our physics and our spatial vectors:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(Orange, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(age, circumference, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Tree)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1700</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">225</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-08-07-vector/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This graph is using an abstract coordinate system – instead of “meters away from the origin”, one axis is “distance in time from a reference date”, and the other is “distance in length from not existing at all”. But just like our physics vectors, each of these points represents a magnitude in some direction. Our <code>age</code> vector is a set of magnitudes along a time axis; our <code>circumference</code> vector a set of magnitudes along a length axis.</p>
<p>Because I didn’t have a ton of formal math education, I never made the connection across these three types of vectors, and never entirely understood that they were all different ways of understanding and representing position along a coordinate plane, under some coordinate reference system. Recognizing that these different versions of “vectors” are all sharing an underlying meaning made it a lot easier for me to understand what “vector data” actually meant, and to understand the semantic difference between vector and raster representations of the same data. Hopefully this digression makes things a bit clearer for someone else, as well.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>This has been partially addressed by the newer Discussions feature.↩︎</p></li>
<li id="fn2"><p>Don’t worry, Mastodon commenter, I’m aware that rasters exist. The point is that my education here was incomplete.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Tutorials</category>
  <guid>https://mm218.dev/posts/2023-08-07-vector/index.html</guid>
  <pubDate>Mon, 07 Aug 2023 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2023-08-07-vector/banner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>From the inbox: How can I get fold assignments from spatialsample?</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-06-06-spatialsample_splits/index.html</link>
  <description><![CDATA[ 




<p>In my inbox,<sup>1</sup> someone asks:<sup>2</sup></p>
<blockquote class="blockquote">
<p>I’m using <code>spatial_clustering_cv()</code> from spatialsample to do cross-validation. How can I get separate data frames with each split created by this function?</p>
</blockquote>
<p>I think this question is decently common, because a lot of the spatialsample documentation is written assuming that you’re familiar with rsample already, which is often not the case for people working with spatial data. The functions to do this sort of thing live in rsample, and aren’t (<a href="https://github.com/tidymodels/spatialsample/issues/143">currently</a>) re-exported by spatialsample, so it can be hard to find the right function.</p>
<p>First and foremost, let’s assume that you’ve got some object called <code>my_folds</code> created by <code>spatial_clustering_cv()</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(spatialsample)</span>
<span id="cb1-2">my_folds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spatial_clustering_cv</span>(boston_canopy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-3">my_folds</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>#  2-fold spatial cross-validation 
# A tibble: 2 × 2
  splits            id   
  &lt;list&gt;            &lt;chr&gt;
1 &lt;split [277/405]&gt; Fold1
2 &lt;split [405/277]&gt; Fold2</code></pre>
</div>
</div>
<p>The “my_folds” object that gets created should have a “splits” column, which is a list. Each element of that list contains your analysis and assessment sets.<sup>3</sup> To get a single split, use <code>rsample::get_rsplit()</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_rsplit</span>(my_folds, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;Analysis/Assess/Total&gt;
&lt;277/405/682&gt;</code></pre>
</div>
</div>
<p>To get just the analysis data for that fold, use <code>rsample::analysis()</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_rsplit</span>(my_folds, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-2">  rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">analysis</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 277 features and 18 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 755424.9 ymin: 2935616 xmax: 812069.7 ymax: 2970073
Projected CRS: NAD83 / Massachusetts Mainland (ftUS)
# A tibble: 277 × 19
   grid_id land_area canopy_gain canopy_loss canopy_no_change canopy_area_2014
   &lt;chr&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;            &lt;dbl&gt;            &lt;dbl&gt;
 1 AB-4      795045.      15323.       3126.           53676.           56802.
 2 AO-9      270153        6187.       1184.           26930.           28114.
 3 V-7       107890.        219.       3612.             240.            3852.
 4 X-4       848558.       8275.       1760.            6872.            8632.
 5 AC-4     2069814.      82201.      50944.          240161.          291104.
 6 AC-15    1175032.      24517.      24010.          111148.          135158.
 7 U-14     2690727.      69780.      51404.          263796.          315201.
 8 AQ-15     453368.      13971.       3401.          343677.          347077.
 9 Q-10      156688.       9237.       3094.           57327.           60421.
10 T-10      215340.      13984.       3947.           59539.           63487.
# ℹ 267 more rows
# ℹ 13 more variables: canopy_area_2019 &lt;dbl&gt;, change_canopy_area &lt;dbl&gt;,
#   change_canopy_percentage &lt;dbl&gt;, canopy_percentage_2014 &lt;dbl&gt;,
#   canopy_percentage_2019 &lt;dbl&gt;, change_canopy_absolute &lt;dbl&gt;,
#   mean_temp_morning &lt;dbl&gt;, mean_temp_evening &lt;dbl&gt;, mean_temp &lt;dbl&gt;,
#   mean_heat_index_morning &lt;dbl&gt;, mean_heat_index_evening &lt;dbl&gt;,
#   mean_heat_index &lt;dbl&gt;, geometry &lt;MULTIPOLYGON [US_survey_foot]&gt;</code></pre>
</div>
</div>
<p>Similarly, to get just the assessment data for that fold, use <code>rsample::assessment()</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_rsplit</span>(my_folds, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-2">  rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assessment</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 405 features and 18 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 739826.9 ymin: 2908294 xmax: 781347.5 ymax: 2959751
Projected CRS: NAD83 / Massachusetts Mainland (ftUS)
# A tibble: 405 × 19
   grid_id land_area canopy_gain canopy_loss canopy_no_change canopy_area_2014
   &lt;chr&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;            &lt;dbl&gt;            &lt;dbl&gt;
 1 I-33      265813.       8849.      11795.           78677.           90472.
 2 H-10     2691490.      73098.      80362.          345823.          426185.
 3 Q-22     2648089.     122211.     154236.         1026632.         1180868.
 4 P-18     2690726.     110928.     113146.          915137.         1028283.
 5 J-29     2574479.      38069.      15530.         2388638.         2404168.
 6 G-28     2641525.      87024.      39246.         1202528.         1241774.
 7 M-23     2690727.      87621.     124032.          748742.          872774.
 8 M-9      2690727.      52443.      53467.          304239.          357706.
 9 S-15     2690728.      93787.     162118.          478257.          640375.
10 Q-21     2690727.      54712.     101816.         1359305.         1461121.
# ℹ 395 more rows
# ℹ 13 more variables: canopy_area_2019 &lt;dbl&gt;, change_canopy_area &lt;dbl&gt;,
#   change_canopy_percentage &lt;dbl&gt;, canopy_percentage_2014 &lt;dbl&gt;,
#   canopy_percentage_2019 &lt;dbl&gt;, change_canopy_absolute &lt;dbl&gt;,
#   mean_temp_morning &lt;dbl&gt;, mean_temp_evening &lt;dbl&gt;, mean_temp &lt;dbl&gt;,
#   mean_heat_index_morning &lt;dbl&gt;, mean_heat_index_evening &lt;dbl&gt;,
#   mean_heat_index &lt;dbl&gt;, geometry &lt;MULTIPOLYGON [US_survey_foot]&gt;</code></pre>
</div>
</div>
<p>If you’re trying to get your original data, with a column indicating which fold each row belongs to, there’s not a provided function for that. Instead, what you can do is take the assessment set from each split (which is “what fold data is assigned to”), add a new column to it with the fold name, and then combine those assessment sets into a single data frame. I do this via the function:<sup>4</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(</span>
<span id="cb9-2">  my_folds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>splits, </span>
<span id="cb9-3">  my_folds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id, </span>
<span id="cb9-4">  \(split, id) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assessment</span>(split), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fold_name =</span> id)</span>
<span id="cb9-5">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-6">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 682 features and 19 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 739826.9 ymin: 2908294 xmax: 812069.7 ymax: 2970073
Projected CRS: NAD83 / Massachusetts Mainland (ftUS)
First 10 features:
   grid_id land_area canopy_gain canopy_loss canopy_no_change canopy_area_2014
1     I-33  265813.3    8848.818    11795.11         78676.56         90471.67
2     H-10 2691489.9   73098.168    80361.85        345823.19        426185.04
3     Q-22 2648088.6  122211.269   154236.43       1026631.85       1180868.27
4     P-18 2690726.1  110927.833   113145.85        915137.00       1028282.85
5     J-29 2574478.7   38068.676    15529.73       2388638.19       2404167.92
6     G-28 2641525.3   87024.318    39246.15       1202527.94       1241774.09
7     M-23 2690727.2   87620.730   124031.79        748742.13        872773.92
8      M-9 2690726.6   52443.164    53466.56        304239.49        357706.04
9     S-15 2690727.8   93786.589   162118.16        478257.33        640375.48
10    Q-21 2690727.2   54711.827   101815.82       1359305.11       1461120.93
   canopy_area_2019 change_canopy_area change_canopy_percentage
1          87525.38          -2946.293               -3.2565923
2         418921.35          -7263.685               -1.7043502
3        1148843.12         -32025.158               -2.7120009
4        1026064.83          -2218.014               -0.2157008
5        2426706.87          22538.944                0.9374946
6        1289552.26          47778.164                3.8475730
7         836362.86         -36411.060               -4.1718776
8         356682.65          -1023.393               -0.2860988
9         572043.92         -68331.566              -10.6705469
10       1414016.94         -47103.991               -3.2238256
   canopy_percentage_2014 canopy_percentage_2019 change_canopy_absolute
1                34.03579               32.92739            -1.10840701
2                15.83454               15.56466            -0.26987600
3                44.59323               43.38386            -1.20936883
4                38.21581               38.13338            -0.08243181
5                93.38465               94.26013             0.87547604
6                47.00974               48.81847             1.80873391
7                32.43636               31.08315            -1.35320518
8                13.29403               13.25600            -0.03803406
9                23.79934               21.25982            -2.53951988
10               54.30208               52.55148            -1.75060448
   mean_temp_morning mean_temp_evening mean_temp mean_heat_index_morning
1           74.26247          83.87540  90.85933                75.63458
2           74.64432          84.96917  91.71625                75.86767
3           73.19889          82.29358  89.70302                74.47757
4           73.77269          84.29003  91.26480                75.03802
5           72.26419          79.77278  88.70229                73.65608
6           73.60919          82.80297  90.33156                74.96955
7           74.24167          83.34713  90.41143                75.66013
8           76.74740          84.69933  91.96502                77.91048
9           75.18260          84.85431  92.00132                76.39949
10          73.37669          82.38064  90.59503                74.63029
   mean_heat_index_evening mean_heat_index fold_name
1                 89.71880        96.70939     Fold1
2                 89.88733        96.19667     Fold1
3                 87.34062        95.53811     Fold1
4                 88.93811        96.43569     Fold1
5                 81.32060        95.56059     Fold1
6                 88.47864        96.82653     Fold1
7                 89.23434        96.05418     Fold1
8                 90.02009        96.14348     Fold1
9                 89.91342        96.92160     Fold1
10                86.90021        96.23439     Fold1
                         geometry
1  MULTIPOLYGON (((752945.6 29...
2  MULTIPOLYGON (((751419.1 29...
3  MULTIPOLYGON (((763631.7 29...
4  MULTIPOLYGON (((763122.9 29...
5  MULTIPOLYGON (((753963.4 29...
6  MULTIPOLYGON (((749383.6 29...
7  MULTIPOLYGON (((758543.1 29...
8  MULTIPOLYGON (((758543.1 29...
9  MULTIPOLYGON (((767702.6 29...
10 MULTIPOLYGON (((764649.4 29...</code></pre>
</div>
</div>
<p>I think it would make sense for <code>get_rsplit()</code>, <code>analysis()</code>, and <code>assessment()</code> to get ported over to spatialsample, to make it a bit easier for the folks whose first point-of-entry into tidymodels work is via spatialsample. I’ve got a <a href="https://github.com/tidymodels/spatialsample/issues/143">GitHub issue</a> to remind me to look into that before the package’s next release.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I want to mention that I include a link to <a href="https://yihui.org/en/2017/08/so-gh-email/">Yihui Xie’s excellent blog post</a> in replies to help questions sent via email. I love seeing people use my packages, and I love helping people use them, but I don’t always have the time to give 1:1 help via email. If you post a question somewhere publicly, then other people might give an even better answer; if no one answers in a day or two, then email me the link, so I can answer it publicly and have a link to send the next person with the same question as you. That’s also why I turned this into a blog post – so that I can send others with the same question a pre-written answer!↩︎</p></li>
<li id="fn2"><p>Anonymized and heavily paraphrased.↩︎</p></li>
<li id="fn3"><p>Sometimes called training and testing, respectively – rsample uses the analysis/assessment terminology to make it clear that all of this data should be in your training set, and doesn’t touch your final held-out test set.↩︎</p></li>
<li id="fn4"><p>This is how spatialsample’s <code>autoplot()</code> methods do it, for instance.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>spatialsample</category>
  <category>tidymodels</category>
  <category>R packages</category>
  <category>geospatial data</category>
  <category>Tutorials</category>
  <guid>https://mm218.dev/posts/2023-06-06-spatialsample_splits/index.html</guid>
  <pubDate>Tue, 06 Jun 2023 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2023-06-06-spatialsample_splits/map.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Counting the number of times each citation is used in a Quarto document</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-04-10-quarto_citation_use_count/index.html</link>
  <description><![CDATA[ 




<p>I’m currently editing my candidacy exam – where I wrote what was effectively a review article on a subject adjacent to, but not within, my dissertation area – down into something that might be publishable. Part of that work has been trimming down the number of citations in the paper: my original exam had 300 individual citations, which is a bit much, and the places I’m looking at sending this paper generally restrict articles to 100 total cites.</p>
<p>As such, I’ve needed to trim down the number of citations used in this paper.<sup>1</sup> To do that, I’ve been trying to figure out which sources were only cited a handful of times and could be easily removed. There’s plenty online about <a href="https://tex.stackexchange.com/questions/14158/can-i-count-the-number-of-times-each-reference-is-cited">how to do that calculation with LaTeX</a>, but I’ve been writing both my exam and this new paper in <a href="https://quarto.org/">Quarto</a> and was having a hard time getting those code snippets to work.</p>
<p>It turned out that I needed to use three fields in my document’s YAML header. Namely, I needed to set the <code>cite-method</code> of my document to <code>biblatex</code>, set the <code>biblatexoptions</code> field to <code>citecounter=true</code>, and then include a LaTeX snippet to actually <em>print</em> those citation counts to the <code>text</code> key below <code>include-before-body</code>:<sup>2</sup></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdf</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cite-method</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> biblatex</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">biblatexoptions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"citecounter=true"</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-before-body</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb1-7">          \renewcommand{\finentrypunct}{%</span>
<span id="cb1-8">            \addperiod\space</span>
<span id="cb1-9">            (Cited \arabic{citecounter}~time\ifnumequal{\value{citecounter}}{1}{}{s})%</span>
<span id="cb1-10">          }</span></code></pre></div>
<p>Now when you render your document, each citation entry will be followed by a small snippet of text reading “Cited X times”, where X is the number of times each reference was cited in your document.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>And to be clear, these are not 300 citations which are truly core to the paper’s argument. There’s a number of places in the paper where I more or less say “This line of work has been highly influential in later work”, and then cite every single article I read which cited the original study; this made a bit more sense in the context of “candidacy exam” where I was trying to demonstrate that I had comprehensively surveyed the literature, but isn’t something I’d ever do in published work.↩︎</p></li>
<li id="fn2"><p>Is that key new? I could have sworn I used to provide raw TeX to the <code>include-before-body</code> field, but apparently now that needs to be a file name.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Quarto</category>
  <category>Tutorials</category>
  <category>Data science</category>
  <guid>https://mm218.dev/posts/2023-04-10-quarto_citation_use_count/index.html</guid>
  <pubDate>Mon, 10 Apr 2023 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2023-04-10-quarto_citation_use_count/books.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Using in-line grouping to fit many models</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-04-01-fitting_models/index.html</link>
  <description><![CDATA[ 




<p>Tim Tiefenbach <a href="https://tim-tiefenbach.de/post/2023-dplyr-many-models/">has a post</a> on using dplyr and other tidymodels tools to fit many models in relatively few lines of code. Tim’s post walks through a lot of interesting functions for more complicated model fitting, which I’m not going to talk about at all. What I want to talk about is that I recently realized I don’t do much nesting in R anymore!</p>
<p>The building block in Tim’s post uses the new-ish <code>dplyr::nest_by()</code> to create a nested data frame, then fits models using the new <code>data</code> list column:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>storms <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest_by</span>(status) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mod =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(wind <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pressure, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data))</span>
<span id="cb1-5">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 9 × 3
# Rowwise:  status
  status                                data mod   
  &lt;fct&gt;                  &lt;list&lt;tibble[,12]&gt;&gt; &lt;list&gt;
1 disturbance                     [146 × 12] &lt;lm&gt;  
2 extratropical                 [2,068 × 12] &lt;lm&gt;  
3 hurricane                     [4,684 × 12] &lt;lm&gt;  
4 other low                     [1,405 × 12] &lt;lm&gt;  
5 subtropical depression          [151 × 12] &lt;lm&gt;  
6 subtropical storm               [292 × 12] &lt;lm&gt;  
7 tropical depression           [3,525 × 12] &lt;lm&gt;  
8 tropical storm                [6,684 × 12] &lt;lm&gt;  
9 tropical wave                   [111 × 12] &lt;lm&gt;  </code></pre>
</div>
</div>
<p>This is a pattern I used to use all the time<sup>1</sup> – my <a href="https://www.mm218.dev/posts/2019/03/">undergrad thesis</a> and <a href="https://www.mm218.dev/papers/mahoney_stella_2020.pdf">eventual first pub from the same</a> were built from strings of nesting and unnesting data and models. But over the years, I’ve realized that you can often get the same results using grouped data frames in the place of nested ones, and have shifted to using <code>dplyr::summarise()</code> and friends instead of nesting:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>storms <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mod =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(wind <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pressure, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pick</span>(dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>()))),</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> status</span>
<span id="cb3-5">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 9 × 2
  status                 mod   
  &lt;fct&gt;                  &lt;list&gt;
1 tropical depression    &lt;lm&gt;  
2 tropical storm         &lt;lm&gt;  
3 extratropical          &lt;lm&gt;  
4 hurricane              &lt;lm&gt;  
5 subtropical storm      &lt;lm&gt;  
6 subtropical depression &lt;lm&gt;  
7 disturbance            &lt;lm&gt;  
8 other low              &lt;lm&gt;  
9 tropical wave          &lt;lm&gt;  </code></pre>
</div>
</div>
<p>Now, the obvious downside of using a grouped data frame instead of a nested one is that future function calls no longer have access to your raw data frame. The slightly less obvious downside is that the output of <code>dplyr::nest_by()</code> is a <em>rowwise</em> data frame, which makes it easy to pass our model objects directly to other functions like <code>broom::tidy()</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>storms <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest_by</span>(status) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mod =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(wind <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pressure, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)),</span>
<span id="cb5-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(mod))</span>
<span id="cb5-6">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 9 × 4
# Rowwise:  status
  status                                data mod    res             
  &lt;fct&gt;                  &lt;list&lt;tibble[,12]&gt;&gt; &lt;list&gt; &lt;list&gt;          
1 disturbance                     [146 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
2 extratropical                 [2,068 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
3 hurricane                     [4,684 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
4 other low                     [1,405 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
5 subtropical depression          [151 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
6 subtropical storm               [292 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
7 tropical depression           [3,525 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
8 tropical storm                [6,684 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;
9 tropical wave                   [111 × 12] &lt;lm&gt;   &lt;tibble [2 × 5]&gt;</code></pre>
</div>
</div>
<p>The outputs of the grouped data frame method are <em>not</em> rowwise data frames, which means we need to use another function to iterate through each element of <code>mod</code>. I usually use <code>purrr::map()</code> for this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>storms <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb7-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mod =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(wind <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pressure, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pick</span>(dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>()))),</span>
<span id="cb7-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(mod, broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>glance),</span>
<span id="cb7-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> status</span>
<span id="cb7-6">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 9 × 3
  status                 mod    res              
  &lt;fct&gt;                  &lt;list&gt; &lt;list&gt;           
1 tropical depression    &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
2 tropical storm         &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
3 extratropical          &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
4 hurricane              &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
5 subtropical storm      &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
6 subtropical depression &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
7 disturbance            &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
8 other low              &lt;lm&gt;   &lt;tibble [1 × 12]&gt;
9 tropical wave          &lt;lm&gt;   &lt;tibble [1 × 12]&gt;</code></pre>
</div>
</div>
<p>Part of the reason I use <code>purrr</code> for this is that <code>purrr</code> provides plenty of other helper functions for working with list columns; for instance, I tend to use <code>purrr::chuck()</code> to extract model fit statistics:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>storms <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb9-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mod =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(wind <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pressure, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pick</span>(dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>()))),</span>
<span id="cb9-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(mod, broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>glance),</span>
<span id="cb9-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rsquared =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(res, purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>chuck, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r.squared"</span>),</span>
<span id="cb9-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> status</span>
<span id="cb9-7">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 9 × 4
  status                 mod    res               rsquared
  &lt;fct&gt;                  &lt;list&gt; &lt;list&gt;               &lt;dbl&gt;
1 tropical depression    &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.0369
2 tropical storm         &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.485 
3 extratropical          &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.631 
4 hurricane              &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.807 
5 subtropical storm      &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.473 
6 subtropical depression &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.214 
7 disturbance            &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.299 
8 other low              &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.332 
9 tropical wave          &lt;lm&gt;   &lt;tibble [1 × 12]&gt;   0.126 </code></pre>
</div>
</div>
<p>Anyway – there’s nothing better or worse (as far as I’m concerned) with either nesting or grouping for fitting many models; I just think it’s interesting that my personal style has shifted over time to use much more grouping, and much less nesting.</p>
<p>And as I said at the start, Tim’s post walks through a lot of interesting functions for more complicated model fitting, which I’m not going to talk about at all; <a href="https://tim-tiefenbach.de/post/2023-dplyr-many-models/">here’s the link again if you’re interested</a>.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Using <code>tidyr::nest()</code>, though.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Tutorials</category>
  <category>Data science</category>
  <guid>https://mm218.dev/posts/2023-04-01-fitting_models/index.html</guid>
  <pubDate>Sat, 01 Apr 2023 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2023-04-01-fitting_models/nests.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>waywiser is now a part of rOpenSci</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-03-21-waywiser-ropensci/index.html</link>
  <description><![CDATA[ 




<p>I’m thrilled to share that <a href="https://docs.ropensci.org/waywiser/">waywiser</a>, my R package focused on providing framework-agnostic (but tidymodels-friendly) methods for assessing models fit to spatial data,<sup>1</sup> has passed peer review and been accepted to <a href="https://ropensci.org/">rOpenSci</a>. As always, <a href="https://github.com/ropensci/software-review/issues/571">the review process</a> improved the package immensely, thanks to the thoughtful reviews of <a href="https://becarioprecario.github.io/">Virgilio Gómez-Rubio</a> and <a href="https://jakubnowosad.com/">Jakub Nowosad</a><sup>2</sup>, as well as the shepherding of <a href="https://www.r-rse.eu/">Anna Krystalli</a> and <a href="https://www.paulamoraga.com/">Paula Moraga</a> as editors.</p>
<p>As of Monday, the reviewed version has officially <a href="https://cran.r-project.org/package=waywiser">made its way to CRAN</a>. This is a <a href="https://docs.ropensci.org/waywiser/news/index.html#waywiser-030">huge update</a>, bringing in a ton of new functions and improving consistency and speed across the package, and I’m excited to have it officially released.</p>
<p>I’m also very excited to have put out a <a href="https://arxiv.org/abs/2303.11312">preprint describing the package</a>, which goes a bit deeper into the logic of why and how the package implements the features it does. This is my first solo-authored paper,<sup>3</sup> and by far and away the one with the most equations.<sup>4</sup> Despite both of those, I’m pretty pleased with how this paper turned out; I think it’s a useful addition to the package documentation for users who want a more thorough explication of the scholarly background of package features.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I use this terminology in a number of places throughout the documentation to try and emphasize that nothing about the models themselves need to be spatial. The models don’t need to incorporate spatial information at all for these methods to be useful. I’ll admit that it’s a bit clunky, though, and have a habit of lapsing back to “spatial models”.↩︎</p></li>
<li id="fn2"><p>Only a little intimidating having my package reviewed by the authors of two of the best books on using R for spatial analysis!↩︎</p></li>
<li id="fn3"><p>And frankly, I don’t intend to make it a habit. I highly appreciate working with collaborators, particularly with my current research group, and know that my work is usually better for having gone through multiple rounds of revisions before being released. I really missed that process while working on this paper!↩︎</p></li>
<li id="fn4"><p>23 numbered equations! My undergraduate degree is in ecology, where <a href="https://www.pnas.org/doi/abs/10.1073/pnas.1205259109">each additional equation per page is associated with 28% fewer citations</a>; four years ago I’d never have expected I’d be writing a paper that looks like this↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>waywiser</category>
  <category>Spatial</category>
  <category>Data science</category>
  <category>R packages</category>
  <guid>https://mm218.dev/posts/2023-03-21-waywiser-ropensci/index.html</guid>
  <pubDate>Thu, 23 Mar 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How to run R jobs across multiple (local) computers</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-03-03-parallel/index.html</link>
  <description><![CDATA[ 




<p>I’ve got a small homelab going at the moment, where in addition to my daily workstation I’ve also got a <a href="https://www.intel.com/content/www/us/en/products/details/nuc.html">NUC</a>, <a href="https://www.raspberrypi.org/">Raspberry Pi</a>, and <a href="https://www.synology.com/en-us/dsm">Synology NAS</a> running on my local network.<sup>1</sup> I primarily use these other machines as always-on servers and storage for things like <a href="../2020/05/">Telegraf, Influx and Grafana</a>, <a href="https://mealie.io/">mealie</a> and <a href="https://github.com/paperless-ngx/paperless-ngx">paperless</a>, but every so often it’s useful to run a long-running, high CPU job on the NUC, rather than tying up my main workstation. In those situations, I tend to use <a href="https://code.visualstudio.com/docs/remote/ssh">VS Code’s Remote Server</a>, at least for anything too complex for just ssh’ing into the NUC and running commands in the CLI.</p>
<p>At the moment I’m working with some <em>extremely</em> long-running jobs which will take a few weeks to complete and are blockers for my other work. As a result, I’m not really worried about tying up my main workstation, if it means the jobs will run faster – in fact, I’d like to tie up as many computers as possible, if it means the jobs execute any faster.</p>
<p>In the past, I’ve tried to manually split up jobs into smaller pieces and run them independently on the different computers. This is a pain. I’ve also shifted to using <a href="https://books.ropensci.org/targets/">targets</a> for most analysis projects these days, in order to take advantage of its automatic DAG creation and state-saving. Manual splitting-and-execution really undermines targets’ automatic orchestration abilities, so I’ve needed to find a better way to split workloads across computers.</p>
<p>It turns out that better way is extremely straightforward,<sup>2</sup> and I’m kicking myself for not finding it out earlier. Say you’ve got two machines with internal IP addresses of <code>192.168.1.001</code> and <code>192.168.1.002</code>, each with a user <code>some_user</code> who has <a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server#step-2-copying-an-ssh-public-key-to-your-server">key-based access</a> to ssh into the other machine. If you’re using <a href="https://future.futureverse.org/">future</a>, setting a <a href="https://future.futureverse.org/articles/future-1-overview.html#controlling-how-futures-are-resolved">plan</a> to work across both computers takes two function calls:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">cl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">makePSOCKcluster</span>(</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.1.001"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.1.002"</span>),</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">master =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.1.001"</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"some_user"</span></span>
<span id="cb1-5">)</span>
<span id="cb1-6">future<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(future<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cluster, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">workers =</span> cl)</span></code></pre></div>
<p>And that’s it! Any future-enabled functions you use<sup>3</sup> will be split across your machines. For my targets-based workflow, I just run <code>targets::tar_make_future(workers = 2)</code> to split the jobs up.</p>
<p>To push things further, you can also run multiple clusters on a single machine:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">cl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">makePSOCKcluster</span>(</span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.1.001"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.1.001"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.1.002"</span>),</span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">master =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"192.168.1.001"</span>,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"some_user"</span></span>
<span id="cb2-5">)</span>
<span id="cb2-6">future<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(future<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cluster, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">workers =</span> cl)</span></code></pre></div>
<p>Or set jobs to use multiple cores, either by <a href="https://future.futureverse.org/index.html#nested-futures-and-evaluation-topologies">nesting futures</a> or using other forms of parallelism; for instance, my current job is primarily using <a href="https://github.com/rspatial/terra">terra</a> for a lot of raster predictions, so by setting <code>cores = future::availableCores() - 1</code> inside of <code>terra::predict()</code> I’m able to more-or-less max out both machines I’m running on.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>With external access via <a href="https://tailscale.com/">tailscale</a>.↩︎</p></li>
<li id="fn2"><p>For a value of straightforward that includes “maintaining multiple machines with similar-enough R environments, access to shared storage if necessary, and ssh access to each other on a private subnet”.↩︎</p></li>
<li id="fn3"><p>Highly recommend either <a href="https://future.apply.futureverse.org/">future.apply</a> or <a href="https://furrr.futureverse.org/">furrr</a> for ease-of-use, by the way.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Tutorials</category>
  <category>Spatial</category>
  <category>Data science</category>
  <guid>https://mm218.dev/posts/2023-03-03-parallel/index.html</guid>
  <pubDate>Fri, 03 Mar 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Commands I Use</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-02-20-tools/index.html</link>
  <description><![CDATA[ 




<p><a href="https://third-bit.com/2023/01/24/commands-i-use/">Greg Wilson posted this</a> and then <a href="https://www.cs.uni.edu/~wallingf/blog/archives/monthly/2023-02.html#e2023-02-20T10_18_38.htm">Eugene Wallingford posted this</a> and it seemed like fun: what are the most common shell commands I use?</p>
<p>Counting command usage is pretty straightforward:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> history <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">awk</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{print $2}'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uniq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-nr</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 50</span></code></pre></div>
<p>And my list winds up looking like this:</p>
<pre><code>git # Though of course, this is a bunch of different commands
cd # Did you know you don't need to use cd in zsh? 
# You can just type the directory. I learned this last week, evidently.
sudo
ls
find
quarto # I don't think this includes rendering from RStudio! 
grep
rm
gdalwarp # -multi -co NUM_THREADS=ALL_CPUS -co COMPRESS=DEFLATE \ 
# -co PREDICTOR=3 -co BIGTIFF=YES
ra # My alias for radian -- https://github.com/randy3k/radian
nano # Possibly from teaching Software Carpentry lessons
cat
docker # I always teach using https://hub.docker.com/r/rocker/rstudio
rsync
cargo
htop
xkill # No, *you're* cheating at Crusader Kings
pip
ssh
R # Interesting to me that I have three separate R calls here
Rscript
curl
mkdir
labrador # Alias to SSH into another computer
convert # Have done a _lot_ of image processing work for the PhD
tmux # Highly, highly recommend https://github.com/tmux/tmux
qvm # The _only_ way to use Quarto https://github.com/dpastoor/qvm
ping # I break my local network more than I care to admit
gdal_calc.py 
killall # "Whoops, accidentally used all threads for that job again"
echo
co # Alias to SSH into another computer
cp
ogr2ogr # Called a lot, but called _correctly_ very rarely
mv
python # More often called from inside an IDE
ogrinfo
history
which
touch
wc
source
gdalinfo
du # Doing spatial modeling on local compute resources is... rough
sshpi # Alias to SSH into another computer
sed
gdal_translate
ffmpeg # Surprisingly useful for conference talks
wget
scp</code></pre>
<p>I’m surprised by how much more I use gdalwarp than the rest of the suite! But otherwise, this all makes pretty intuitive sense to me.</p>



 ]]></description>
  <category>shell</category>
  <guid>https://mm218.dev/posts/2023-02-20-tools/index.html</guid>
  <pubDate>Mon, 20 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>spatialsample 0.3.0 is now on CRAN</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2023-01-17-spatialsample/index.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2023-01-17-spatialsample/map.jpg" class="img-fluid figure-img" alt="A pretty map picture. It has no relevance to the article."></p>
<figcaption class="figure-caption">Photo by <a href="https://unsplash.com/@tjump">Nik Shuliahin 💛💙</a> on <a href="https://unsplash.com/photos/rkFIIE9PxH0">Unsplash</a></figcaption>
</figure>
</div>
<p>A new release of <a href="https://spatialsample.tidymodels.org/">spatialsample</a> – an R package extending the <a href="https://rsample.tidymodels.org/">rsample</a> framework to handle spatial resampling and cross-validation – just landed on CRAN. This post will describe the new breaking changes to the <code>spatial_clustering_cv()</code> function, as well as improvements made to how spatialsample handles repeated cross-validation, as well as improvements made to how spatialsample handles repeated cross-validation; for a full list of changes, check out <a href="https://spatialsample.tidymodels.org/news/index.html">this release’s NEWS entry</a></p>
<p>You can install the package from CRAN via:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spatialsample"</span>)</span></code></pre></div>
<section id="breaking-changes-to-spatial_clustering_cv" class="level2">
<h2 class="anchored" data-anchor-id="breaking-changes-to-spatial_clustering_cv">Breaking changes to <code>spatial_clustering_cv()</code></h2>
<p>The only (intentional!) breaking changes in this version are to the function <code>spatial_clustering_cv()</code>. This function is the oldest part of the package, and as such didn’t quite work like any of the other parts of the package: distance calculations sometimes used <code>dist()</code> instead of <code>sf::st_distance()</code>, distances used centroids instead of polygon edges, and trying to adapt this function to work with both <code>sf</code> and non-spatial data had made the internals a bit hairy.</p>
<p>As of <a href="https://rsample.tidymodels.org/news/index.html#rsample-111">rsample 1.1.1</a>, all of those non-spatial elements have been outsourced to <code>rsample::clustering_cv()</code>. If you’ve been using <code>spatial_clustering_cv()</code> for non-spatial data, this function is pretty close to a drop-in replacement, and you should migrate code over.</p>
<p>For spatial point data, <code>spatial_clustering_cv()</code> should work identically to past versions. For other geometry types however, note that distance calculations have now changed to use edge-to-edge distance between geometries, rather than centroids as in past versions. This means this function now uses distances in a way that’s more consistent with the rest of the package, and more consistent with what I personally view as best practice; two polygons sharing a lot of perimeter but with centroids separated by a decent margin are still likely to be highly similar.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(spatialsample)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spatial_clustering_cv</span>(boston_canopy, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>#  2-fold spatial cross-validation 
# A tibble: 2 × 2
  splits            id   
  &lt;list&gt;            &lt;chr&gt;
1 &lt;split [277/405]&gt; Fold1
2 &lt;split [405/277]&gt; Fold2</code></pre>
</div>
</div>
</section>
<section id="repetition-repetition-repetition" class="level2">
<h2 class="anchored" data-anchor-id="repetition-repetition-repetition">Repetition, repetition, repetition<sup>1</sup></h2>
<p>I think the most exciting part of this release is that all spatialsample functions can now handle cross-validation with repeats. Simply pass your desired number of repeats to the <code>repeats</code> argument of any function.<sup>2</sup> The <code>autoplot()</code> function will now also automatically detect when you’ve used repeated cross-validation, and facet plots accordingly:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">boston_canopy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spatial_block_cv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repeats =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2023-01-17-spatialsample/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="and-more" class="level2">
<h2 class="anchored" data-anchor-id="and-more">…and more!</h2>
<p>This is just scratching the surface of the new features and improvements in this release of spatialsample. You can see a full list in <a href="https://spatialsample.tidymodels.org/news/index.html">this release’s NEWS entry</a>.</p>
</section>
<section id="repetition" class="level2">
<h2 class="anchored" data-anchor-id="repetition">Repetition!</h2>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>This joke I keep making is stolen from <a href="https://www.youtube.com/watch?v=g4GRYQHccLo">an old Kurt Braunohler video</a>. Or potentially, <a href="https://www.youtube.com/watch?v=Lvd6MBsiDBo">this other Kurt Braunohler video</a>. Or potentially, <a href="https://www.youtube.com/watch?v=g4GRYQHccLo">that first Kurt Braunohler video</a>.↩︎</p></li>
<li id="fn2"><p>Though note that spatialsample should error if repeats would return the same exact folds, such as when using <code>spatial_leave_location_out_cv()</code> with <code>v = NULL</code>. This behavior might change in the future if anyone complains, but for the modeling projects I’ve worked on, you’d only repeat identical CV folds by accident.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>spatialsample</category>
  <category>tidymodels</category>
  <category>R packages</category>
  <category>geospatial data</category>
  <guid>https://mm218.dev/posts/2023-01-17-spatialsample/index.html</guid>
  <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2023-01-17-spatialsample/map.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Classification and mapping of low-statured shrubland cover types in post-agricultural landscapes of the US Northeast</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-12-21-shrubland/index.html</link>
  <description><![CDATA[ 




<p>I have a new paper, “Classification and mapping of low-statured shrubland cover types in post-agricultural landscapes of the US Northeast”, out today in the International Journal of Remote Sensing! This project was a fantastic collaboration with with Lucas Johnson, Abigail Guinan, and Colin Beier, and I’m thrilled to see it in print.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-12-21-shrubland/map.jpg" class="img-fluid figure-img" alt="A map of predicted shrubland probabilities for all of New York State."></p>
<figcaption class="figure-caption">Predicted probability of shrubland for 2019 across all mapped areas within New York State, from the logistic ensemble model. Pixels in non-vegetated LCPRI land cover classes (developed, water, ice/snow, and barren) or above 1067 meters in elevation were not mapped and are shown in white.</figcaption>
</figure>
</div>
<p>Shrublands – which we roughly define as “vegetation that’s too tall to be a grassland, but too short to be a forest” – are a pretty rare land cover class in the northeastern United States. In part, that’s because our forests out here are generally pretty stable, and don’t get completely wiped out in the same way as forests in the western US, which means there’s just not a ton of land reforesting after some major disturbance. But also, most forests in the Northeast got their start by taking over abandoned farmland, which was generally left unplowed following major bank runs in the late 1800s and early 1900s.<sup>1</sup> Because the first trees to establish on a field all grow up at more or less the same rate,<sup>2</sup> that means that older forests are taller forests. With most of our forests pushing 100,<sup>3</sup> we don’t have a ton of low-statured vegetation to go around in the region.</p>
<p>And this is a problem! A ton of wildlife species really prefer shrublands, and depend on denser understories and lower branches than 100 year-old forests really provide; a turkey isn’t going to be able to hide from predators in a stately grove of 80 foot tall pines. New York is <a href="https://www.dec.ny.gov/outdoor/104218.html">intentionally managing its public lands</a> to try and increase the prevalence of shrublands for this reason. Shrublands also are promising targets for conservation efforts designed to increase carbon sequestration in the landscape, as they represent potentially unproductive (from a carbon sequestation standpoint) lands returning to forest. While there’s a lot of ink spilled about the sequestration potentials of young forests versus older forests, everyone is generally agreed that we want <em>more</em> protected forestlands to improve carbon sequestration, and being able to identify and preserve current shrublands would likely mean increasing the amount of forestlands in the future.</p>
<p>And as such, there’s a lot of interest in being able to map shrubland prevalence in the Northeast. Unfortunately, that’s easier said than done. Because shrublands are so rare in this region, they’re generally not well-represented in most land cover mapping projects; shrublands make up about 2% of the landscape, and so a model can be wrong about shrublands 100% of the time and still be 98% accurate if it nails everything else. Shrublands also look different in the Northeast than they do elsewhere in the country; whereas much of the western United States has semi-permanent shrubland biomes with different species and structure than forestlands, in the Northeast shrublands are generally composed of the same species as forests, just shorter. Add to this the fact that from space northeastern shrublands look more or less just like forests – it’s hard to gauge the height of vegetation based on the satellite images usually used to train land cover models – and it makes sense that shrublands are usually one of, if not <em>the</em> worst-represented class in land cover models.</p>
<p>So, we set out to try and improve our ability to identify shrublands across New York State. We took the same basic approach as <a href="2022-11-07-agb/">our AGB mapping project</a>, used LiDAR data and national land cover maps to identify areas that were <em>probably</em><sup>4</sup> shrublands, and trained models against satellite imagery to try and ID shrublands in areas and years where we don’t have LiDAR data to work with. I think it’s a pretty cool project, and I’m excited to see where Abigail takes this line of work in years to come – as I understand it, she’s currently using the map to help her pick field sites, to try and investigate the dynamics of invasive species in shrublands across the state.</p>
<p>I’m also incredibly proud of the tech stack backing this project, which does <em>not</em> make it into the paper but really enabled this project from start to finish. In summer 2021, my lab invested heavily in standing up data-sharing infrastructure to make it easy to access pretty much any data that anyone in the lab had ever cared about, be it relatively raw remote sensing data, heavily-engineered predictor suites, or the outputs from past models.<sup>5</sup> The original gains from this data platform were pretty incremental; we were already pretty deep in the weeds on our AGB work, so while it was <em>nice</em> that Lucas and I could easily send each other new data<sup>6</sup>, it just didn’t come up that often.</p>
<p>This shrubland project was then the first time we had a new, greenfield project that could take advantage of the data platform. And thanks to our internal infrastructure<sup>7</sup> obviating out a lot of the rote busywork involved with collecting, processing, and generally marshaling spatial data from disparate sources, we were able to stand up the first proof-of-concept models <em>much</em> faster than with our past AGB modeling work.</p>
<p>This project wound up being quite the hairy beast by the time it actually went to print – the total archive contains ~640GB of data, uncompressed, plus a mix of R, Python, and shell scripts to actually process it all. I learned a lot from pulling this all together, and I’m very excited to see it out in print!</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Including obviously the Great Depression, but also a great number of other panics such as the <a href="https://en.wikipedia.org/wiki/Panic_of_1857">Panic of 1857</a>. An interesting thing about living in the East is that practically all land in the region was, at one point or another, in private ownership; almost all state or federal lands were either purchased back from private owners or, more often, reclaimed when the owner defaulted on their taxes. A fun activity, for a certain value of fun, is looking up the date your local park was established, and then looking up the closest bank panic to guess if the two are related.↩︎</p></li>
<li id="fn2"><p>This is one of those things that <em>feels</em> like it should be made up, but if you think about it makes sense: trees more-or-less attempt to maximize sunlight intake, and can only get more sun by being taller than their neighbors, and, crucially, by <em>not being shorter</em> and therefore shaded out by competitors. As such, less competitive individuals from ruderal species will grow <em>out</em> more slowly than their neighbors, but either grow <em>up</em> with the rest of the neighborhood or get killed off altogether.↩︎</p></li>
<li id="fn3"><p>Which is not <em>old</em> for a forest by any extent, but is certainly <em>older</em> than most shrublands.↩︎</p></li>
<li id="fn4"><p>But not definitely, and we talk about this as a limitation! Maybe LCMAP thinks 5-foot tall wood post fences look like shrublands; if so, we’d be labeling our training data incorrectly. But our validation against 2019 imagery more or less agreed with our validation against the LiDAR-labeled map, which suggests this wasn’t that big of a problem in the end.↩︎</p></li>
<li id="fn5"><p>This infrastructure is one of my favorite projects I’ve been a part of in my PhD; I need to write about it publicly at some point.↩︎</p></li>
<li id="fn6"><p>Or, if I’m being honest, that Lucas could send <em>me</em>; if memory serves, while I wrote a lot of the code for how people could get data <em>from</em> the platform, it took over a year for me to learn how to send data <em>to</em> the platform for others.↩︎</p></li>
<li id="fn7"><p>The data platform and other internal model tools, though the data platform is <em>much</em> better than our internal model tooling. Part of that is because we don’t feel the need to <em>keep</em> a lot of our model tooling internal; we can open-source tools for dealing with common modeling problems much more easily than tools for dealing with our particular approach to cloud data storage. Speaking of which, <a href="https://github.com/mikemahoney218/waywiser/">go star waywiser on GitHub.</a>↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>ecology</category>
  <category>papers</category>
  <category>remote sensing</category>
  <category>machine learning</category>
  <category>earth science</category>
  <category>environmental science</category>
  <category>shrubland</category>
  <guid>https://mm218.dev/posts/2022-12-21-shrubland/index.html</guid>
  <pubDate>Wed, 21 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-12-21-shrubland/map.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Legibility and seats at the table</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-12-16-femc/index.html</link>
  <description><![CDATA[ 




<section id="waldsterben" class="level2">
<h2 class="anchored" data-anchor-id="waldsterben">Waldsterben</h2>
<p>There’s a bit of forestry lore that’s become really well-known in political science, popularized by James C Scott’s “<a href="https://en.wikipedia.org/wiki/Seeing_Like_a_State">Seeing Like a State</a>”, but is as best as I can tell mostly unknown in English-speaking forest science.<sup>1</sup> It goes a little something like this:</p>
<p>Prussia in the 1800s was an industrializing nation in extreme demand for more of every resource they could get their hands on. As part of the industrialization process, the Prussians found themselves needing to approach their natural resources in a more standardized and predictable way; if a factory was expected to make a standard number of chairs each day, it required a standard amount of wood to work with. The normal rhythm of growing seasons and the boom-and-bust cycles of natural systems were antithetical to the increasingly regimented and systematized industry the government was aiming to encourage.</p>
<p>And as such, the government sought to systematize their forests. The 1800s were the beginnings of forest science as a discipline, of allometrics and quantification and active management planning on scales which had not been attempted – or feasible – to earlier societies. The objective of the state was not just increasing productivity – although that was <em>an</em> objective – but to standardize it, to move towards a wood products industry that could support the demands of manufacturing irrespective of forest conditions. Measurements were standardized, growth tables developed, tools and techniques invented, all in the name of progress. And in the name of standardization and control, the state encouraged active management to enforce even-aged monocultural stands which could be easily accounted for, whose expected outputs and timing could be predicted and planned upon in order to ensure the engine of industry stayed alive.<sup>2</sup></p>
<p>But of course, standardizing a landscape causes quite a disturbance, and a forest is made up of more than trees. Removing undesirable vegetation removes the habitat that game and other animals require, upsetting historical hunting patterns as well as pollination and seed distribution; clearing the understory and removing slash removes soil nutrients and prevents non-assisted regeneration. The start of systematization saw wood product production peak at never-before-seen heights; a century later, production was down 30% from the pre-standardized baseline. In some situations, management had made it so no trees would regenerate at all. The Prussians introduced one more innovation, a word to describe such places: Waldsterben. Forest death.</p>
<p>Scott tells this story as part of a bigger pattern, of states attempting to standardize complex systems in order to make them “legible” and manageable by remote administrators, at the cost of localized expertise and nuance. No matter how good your measurements and allometrics, there’s really no better way of knowing a forest than a walk in the woods.</p>
</section>
<section id="eye-in-the-sky" class="level2">
<h2 class="anchored" data-anchor-id="eye-in-the-sky">Eye in the sky</h2>
<p>I was lucky enough to be in Burlington, Vermont for this year’s <a href="https://www.uvm.edu/femc/cooperative/conference/2022/">Forest Ecosystem Monitoring Cooperative (FEMC) conference</a>. It’s among my favorite conferences, not least because Burlington is a beautiful town, but also because the audience is largely made up of land managers from governments and industry. These are people who are in the business of solving problems, and are interested in your work to the extent that it helps them solve problems. It’s a nice curative to some of the tail-chasing tendencies of academia.</p>
<p><a href="https://mldesrochers.com/">Madeleine Desrochers</a> gave an absolutely fantastic talk about her work, using <a href="https://doi.org/10.1093/jofore/fvab075">models trained on satellite imagery to detect harvests in the Adirondack forest</a>. In particular, Madeleine was focusing on how we can assess the accuracy of these models, especially working as we do in an area where most harvests <em>aren’t</em> clearcuts and as such can be a bit hard to see from space. The work is fascinating, and the presentation was great, but my particularly favorite bit was when Madeleine spoke about the motivations behind her work.</p>
<p>To paraphrase: this stuff is terrifying. We are not, as a society, used to every action we make on the surface of this Earth being watched by a silent observer in space, or picked up by a model run on a laptop in Syracuse. We are, by and large, neither expecting nor accepting that our actions will be so legible to anyone who cares to look.</p>
<p>But, one way or another, this stuff is the future. There are VC-backed startups promising change detection algorithms to any government agency who will give them the time of day, and these firms do not operate with particularly high standards for accuracy or validation. And it’s a bad outcome for everyone if spotty models are used to help the state make decisions, to identify people violating tax codes or taking more trees than they’re entitled to.</p>
<p>The best case scenario is that we publicly investigate these algorithms to figure out how, when, where, and why they work. And even more importantly, we need domain experts at the table when these algorithms <em>are</em> being considered, to help inform decisions about what it will <em>mean</em> for these things to become legible, who will be helped and who will be harmed, and how foresters and forests will react in years to come. The engineers are going to be implementing these tools no matter what; our best way through it is to make sure that domain experts, that local knowledge are well-represented as they do so, to make outcomes better for us all.</p>
</section>
<section id="the-data-sciencification-of-everything" class="level2">
<h2 class="anchored" data-anchor-id="the-data-sciencification-of-everything">The data sciencification of everything</h2>
<p>Also at FEMC, <a href="https://www.uvm.edu/rsenr/profiles/jarlath_oneil_dunne">Jarlath O’Neil-Dunne</a> spoke on a panel about his fear that we’re watching the “data scienceification of everything.”<sup>3</sup> As noted by others on the panel, forest science has moved from a period of bespoke tooling – clinometers, densiometers, biltmore sticks, D-tapes and the rest of their 19th century companions – towards a place where we’re adapting the tooling of other disciplines for forest problems. This is perhaps not a new pattern, given the amount of farming equipment running on any forest operation, but the rapid shift in the field to a focus on complex models, remote sensing, and “big data” has created something of a gap between leading research and the problems that folks in the field actually need solved.<sup>4</sup></p>
<p>Part of the problem is that, as we add more and more programming and data management skills to ecology and forestry curricula, we’re possibly not paying enough attention to what gets cut. Now, I think this problem is typically overstated – there was more than a bit of overlap in my undergrad ecology, natural resources ecology, wetlands ecology and management, forest ecology, forest ecology and management, and natural resources silviculture courses – but it’s not <em>wrong</em>. Learning to code takes time, and that’s time not spent on a walk in the woods, building the sort of domain knowledge that’s essential to understanding how these complex systems actually work.</p>
<p>But we can’t just <em>not</em> teach students how to code. Not only is that educational malpractice – as Richard Hamming put it, <a href="https://www.mm218.dev/quotes/#HammingThe2">teachers should prepare the student for the student’s future, not for the teacher’s past</a> – but also, these tools and techniques aren’t going away, and the world isn’t slowing down. We can’t simply cede this ground to <a href="https://xkcd.com/793/">engineers and data scientists</a>; being able to apply knowledge of the underlying system to the problem at hand remains essential for producing not only accurate models but also actionable insights into the world at large. If we want forest science to benefit from recent gains in processing power, in the ability for humans to think about, understand, and manage large-scale complex systems, then we need forest science to have a seat at the table when deciding how these tools are used for our field. We need folks in forest science to have a say in <em>how</em> our world is made legible, before those decisions are made for us.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I personally heard this the first time via <a href="https://acoup.blog/2021/04/30/collections-teaching-paradox-europa-univeralis-iv-part-i-state-of-play/">Bret Devereaux’s ACOUP</a>, a blog which has both made me smarter and also turned me on to Paradox games, at the cost of hundreds of hours of my life.↩︎</p></li>
<li id="fn2"><p>In a very real way, a lot of our forest management is still in this paradigm, though plenty of folks are making valiant efforts to push for more modern management methodologies. Scott makes the point that Pinchot was trained at a school following “a German-style curriculum”; the foundations of forestry as a science are fundamentally German.↩︎</p></li>
<li id="fn3"><p>I think I’m mischaracterizing his comments here, for what it’s worth; Jarlath was talking about the importance of other ways of knowing, beyond simple raw processing of quantitative information. The themes here were part of the panel discussion overall, though.↩︎</p></li>
<li id="fn4"><p>My personal bugbear here: most global models of ecological attributes – say, biomass – are pointless. Global models trade accuracy for scope, which makes them practically useless for informing decisonmaking at a regional level. Given that most organizations which <em>produce</em> global models aren’t making decisions at a global level, and don’t typically have the ear of those who do, their stakeholders would be better served by a smaller geographic focus and in turn a higher accuracy. That said, if you’re in the business of <em>selling</em> models, it is much more appealing to your P&amp;L if you only need to make <em>one</em> model which you’ll sell to anyone who will buy it; the incentives here put the modeler in direct conflict with stakeholder interests. There are also <a href="https://www.nature.com/articles/s41467-022-29838-9">so, so many other problems with global models</a>, but there’s been a trend recently of papers claiming such issues are surpassable; I think the incentives problem is somewhat more fundamental.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Data science</category>
  <category>ecology</category>
  <category>earth science</category>
  <guid>https://mm218.dev/posts/2022-12-16-femc/index.html</guid>
  <pubDate>Fri, 16 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-12-16-femc/forest.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>The tools I loved this year</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-12-12-tools/index.html</link>
  <description><![CDATA[ 




<p>One of the problems with open source development is that it’s the engineering equivalent of yelling into the void. Once your code is released, it’s really, really hard to know if anyone actually <em>uses</em> your tool. You might be able to track download numbers,<sup>1</sup> but there’s almost no way to tell how many of those downloads are actual users, and how many are from automated webscrapers, unofficial mirrors, or people who will try to use your software once before giving up and moving on to something else.<sup>2</sup> The best information about how many people use your software is, basically, how much you hear people talking about your software.</p>
<p>The problem is that, for the majority of open source projects, you’ll only hear people talk about your software when it’s pissing someone off. People don’t generally open issues on GitHub to tell you they love your work,<sup>3</sup> but rather to tell you that your work messed up in a big enough way that they’re going to spend time writing you letters about it. On my more meditative days, I’m able to look at issues as “someone cares enough about this project to spend their time telling me what they think would improve it”; on my more human ones, it can feel like someone sharing a public list of my mistakes.<sup>4</sup></p>
<p>So, with all this in mind and full up on the holiday spirit, I’m putting here a non-exhaustive list of the open-source tools that I loved this year, in no particular order, with a bent towards independent developers and smaller projects. These are <em>primarily</em> R projects, with a few other tools thrown in. Apologies to anyone I’ve forgotten; please know that you would not know I had ever used your software if I didn’t love it.</p>
<section id="workflow" class="level2">
<h2 class="anchored" data-anchor-id="workflow">Workflow</h2>
<section id="targets-by-will-landau" class="level3">
<h3 class="anchored" data-anchor-id="targets-by-will-landau"><a href="https://books.ropensci.org/targets/">targets</a> by Will Landau</h3>
<p>Every so often you stumble across a project that makes it obviously, blindingly clear that you’ve been doing things wrong this whole time. Sometimes this means finding out that your efforts have been <em>wrong</em>, and you’ve been doing things <em>incorrectly</em> up until now; more exciting are the times you realize you haven’t been doing anything <em>wrong</em> per se, but could be doing things so much <em>better</em>.</p>
<p>The targets package is a peak example of the latter. The ways analyses are usually structured – cells of a single notebook, shell scripts that run a smattering of individual files, cludgy Make files – are <em>fine</em>, and serve a purpose, and there’s nothing <em>wrong</em> with them. There’s just a better way. And targets is that better way.</p>
<p>Rather than making you define the dependencies between your analysis steps yourself, targets will automatically calculate your project’s DAG and run your scripts in the order they need to be executed. If you change a script, or files change on disk, targets will invalidate only the steps that <em>need</em> to be re-run under the new conditions, and will run only those steps on your next go. This alone is incredible.</p>
<p>But targets does <em>so much more</em> than that. My personal needs have meant I’ve spent a lot of time with targets’ dynamic branching mechanism, where you can tell targets to execute a script against various combinations of input parameters, massively reducing the amount of actual code you need to write. There’s plenty of additional bells and whistles attached for dealing with distributed computing and cloud data environments. Plus, there’s tons of metrics and instrumentation available to watch your DAG as it executes, and the visuals produced by the package are <em>beautiful</em>:</p>
<p><img src="https://mm218.dev/posts/2022-12-12-tools/dag.png" class="img-fluid" alt="The targets graph for my most recent project. Functions and objects are connected by lines, diagramming the relationships between the steps in the project."></p>
<p>Part of the joy of targets is just how well-documented the package is. There’s a <a href="https://docs.ropensci.org/targets/">website</a>. There’s <a href="https://books.ropensci.org/targets/">an entire book</a>. Will has set an incredibly high bar for the rest of us.</p>
</section>
<section id="paperless-ng-by-jonas-winkler" class="level3">
<h3 class="anchored" data-anchor-id="paperless-ng-by-jonas-winkler"><a href="https://github.com/jonaswinkler/paperless-ng">Paperless-ng</a> by Jonas Winkler</h3>
<p>A docker container runs on a small server in my living room,<sup>5</sup> running my instance of Paperless-ng. When I save a new article to its “input” folder, the container OCR’s the document and moves it to a safe storage location, giving it the appropriate “tags” and making it accessible with the rest of the papers I’ve ever shown an interest in.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-12-12-tools/paperless.png" class="img-fluid figure-img" alt="A screenshot of the Paperless-ng user interface. A search for 'virtual environments' returned 174 results, shown as individual tiles with names and text previews."></p>
<figcaption class="figure-caption">I swear I’ve read (most of) these, I just am not <em>great</em> at updating my tags.</figcaption>
</figure>
</div>
<p>Paired with a VPN<sup>6</sup>, this means I can access my entire reference library from anywhere I go, from any device I own, with access to full-text search and any notes I’ve taken. This is one of the outright best hacks I have ever found for literature searches; I have access to a personally-curated Google Scholar filled with the sources that <em>I</em> have found relevant in the past, which makes finding the proper citation or reference document a breeze. If you’re a certain breed of nerdy academic, I can’t recommend it enough.</p>
</section>
<section id="future-and-progressr-by-henrik-bengtsson" class="level3">
<h3 class="anchored" data-anchor-id="future-and-progressr-by-henrik-bengtsson"><a href="https://future.futureverse.org/">future</a> and <a href="https://progressr.futureverse.org/">progressr</a> by Henrik Bengtsson</h3>
<p>My research group is split across folks who use Windows, MacOs, and Linux, and we need to share code a <em>lot</em>. That makes relying on system features, like multi-core processing via <code>mclapply()</code> in the parallel package, rather fraught.</p>
<p>Our solution to that problem is the future package, which provides functions for parallel computing which function across OSes. That alone merits a spot on this list. But even more than that, I’m a huge fan of the philosophy behind the future package.</p>
<p>Say for instance you’re developing a package – or writing a script for a coworker, or generally writing code that you will not be executing yourself. Your code looks something like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">intense_function <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...) {</span>
<span id="cb1-2">  list_to_iterate_over <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(...)</span>
<span id="cb1-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(</span>
<span id="cb1-4">    list_to_iterate_over,</span>
<span id="cb1-5">    some_intensive_processing_function</span>
<span id="cb1-6">  )</span>
<span id="cb1-7">}</span></code></pre></div>
</div>
<p>You have no idea what else your user will be doing when you execute this. Maybe they’re busy running a more important job that needs most of their RAM, or maybe your script can safely use all their computing resources; while writing your function, you can’t know. For that reason, you don’t want to enable parallelism by default.</p>
<p>So what do you do? Let the user decide how parallel they want your code to be. If you write your code using packages from the future family, your users can use the <code>plan()</code> function to specify how much parallelism they’re comfortable with your script using. And gaining that amount of flexibility requires a one-line change:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">intense_function <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(...) {</span>
<span id="cb2-2">  list_to_iterate_over <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(...)</span>
<span id="cb2-3">  future.apply<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">future_lapply</span>(</span>
<span id="cb2-4">    list_to_iterate_over,</span>
<span id="cb2-5">    some_intensive_processing_function</span>
<span id="cb2-6">  )</span>
<span id="cb2-7">}</span></code></pre></div>
</div>
<p>You don’t need to write any logic around parallelization; all of that work gets outsourced to future.</p>
<p>For similar reasons, I really like the progressr package that’s part of the future ecosystem. Adding progress bars is as simple as specifying how many iterations you’re expecting to do, and when the bar should update:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">iteration_function <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) {</span>
<span id="cb3-2">  p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> progressr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">progressor</span>(n)</span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(</span>
<span id="cb3-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(n),</span>
<span id="cb3-5">    \(x) {</span>
<span id="cb3-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">message =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"On iteration %f"</span>, x))</span>
<span id="cb3-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.sleep</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb3-8">    }</span>
<span id="cb3-9">  )</span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invisible</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb3-11">}</span></code></pre></div>
</div>
<p>And then all the rest is left to the user. They can use whatever sort of progress bar they find useful, or none at all – you don’t need to be a part of that decision whatsoever:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">progressr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">handlers</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"txtprogressbar"</span>)</span>
<span id="cb4-2">progressr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_progress</span>(</span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">iteration_function</span>()</span>
<span id="cb4-4">)</span></code></pre></div>
</div>
</section>
<section id="units-by-edzer-pebesma" class="level3">
<h3 class="anchored" data-anchor-id="units-by-edzer-pebesma"><a href="https://github.com/r-quantities/units">units</a> by Edzer Pebesma</h3>
<p>I’m gonna be honest, this is a weird one for the workflow section. But at the same time, the units package has become something I load in almost every project I work on. If you’re doing anything that <em>might</em> have unit conversions, this package can be a lifesaver.</p>
<p>For instance, let’s take an actual example from a project I worked on last week. Say you’ve run some samples through an <a href="https://en.wikipedia.org/wiki/Inductively_coupled_plasma_mass_spectrometry">ICP</a> machine, and need to calculate how much of a given analyte<sup>7</sup> is in your sample.</p>
<p>To do that, you’ve got three numbers: the concentration of the analyte in the solution you ran through the ICP in units of milligrams per liter, the amount of solution you used in units of milliliters, and the amount of sample in the solution in grams. Your target is the amount of analyte per amount of sample, in units of milligrams per gram. This is simple dimensional analysis<sup>8</sup>, and you set up your equations like so:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">concentration_mg_per_L <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span></span>
<span id="cb5-2">sample_weight_g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.29</span></span>
<span id="cb5-3">solution_volume_mL <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">53.54</span></span>
<span id="cb5-4"></span>
<span id="cb5-5">solution_volume_L <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> solution_volume_mL <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb5-6">concentration_mg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> concentration_mg_per_L <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> solution_volume_L</span>
<span id="cb5-7">concentration_mg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sample_weight_g</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 108.2014</code></pre>
</div>
</div>
<p>See the bug?</p>
<p>This is the sort of thing that can kill an analysis; silent logic bugs that <em>execute</em> fine but invalidate all of your results. If we tag our measurements with the units they represent, however, it’s a little bit easier to see what went wrong here:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">concentration_mg_per_L <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mg / L"</span>)</span>
<span id="cb7-2">sample_weight_g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.29</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g"</span>)</span>
<span id="cb7-3">solution_volume_mL <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">53.54</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mL"</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5">concentration_mg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> concentration_mg_per_L <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> solution_volume_mL</span>
<span id="cb7-6">concentration_mg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sample_weight_g</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.0001082014 [1/L/mL]</code></pre>
</div>
</div>
<p>The units package automatically converts between units, which means we can get rid of the manual conversion from milliliters of solution into liters. The package also tells us what units our results are in following calculation. Here we can see that our results aren’t in the units we’re after – we want a concentration (amount of analyte per unit of sample), not something measured in “1 per liter per milliliter”.</p>
<p>This tips us off that we made a mistake in our conversions somewhere, and indeed we flipped an operand – rather than <em>dividing</em> our concentration by the amount of solution, we need to multiply it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">concentration_mg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> concentration_mg_per_L <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> solution_volume_mL</span>
<span id="cb9-2">concentration_mg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sample_weight_g</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.0003101628 [1]</code></pre>
</div>
</div>
<p>That gives us our desired concentration: the number of grams of analyte per gram of sample. We can easily convert that to other forms using the units package; for instance, we tend to work with concentrations in units of milligram of analyte per gram of sample:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">(concentration_mg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sample_weight_g) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mg / g"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.3101628 [mg/g]</code></pre>
</div>
</div>
<p>But we can be even more explicit than that. The units package lets us install our own units, which lets us tag what these numbers are a gram <em>of</em>. That means that we can automatically see that our results are natively a ratio of total analyte per unit of sample:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_unit</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"analyte"</span>)</span>
<span id="cb13-2">units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_unit</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sample"</span>)</span>
<span id="cb13-3">units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_unit</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution"</span>)</span>
<span id="cb13-4"></span>
<span id="cb13-5">concentration_mg_per_L <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(mg * analyte) / (L * solution)"</span>)</span>
<span id="cb13-6">sample_weight_g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.29</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g * sample"</span>)</span>
<span id="cb13-7">solution_volume_mL <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">53.54</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mL * solution"</span>)</span>
<span id="cb13-8"></span>
<span id="cb13-9">concentration_mg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> concentration_mg_per_L <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> solution_volume_mL</span>
<span id="cb13-10"></span>
<span id="cb13-11">(concentration_mg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sample_weight_g)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.0003101628 [analyte/sample]</code></pre>
</div>
</div>
<p>And we can purposefully convert that to units of miligrams of analyte per grams of sample, in a very explicit way:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">(concentration_mg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sample_weight_g) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb15-2">  units<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_units</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(mg * analyte) / (g * sample)"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.3101628 [analyte*mg/g/sample]</code></pre>
</div>
</div>
<p>This erases an entire category of bugs, and has been <em>big</em> for me this year. The <a href="https://www.auckland.ac.nz/en/news/2017/12/05/problem-solving-pits-of-success.html">tidyverse</a> team <a href="https://twitter.com/alice_data/status/748200882043396096">talks a lot</a> about the idea of trying to help people fall into a <a href="https://blog.codinghorror.com/falling-into-the-pit-of-success/">“pit of success”</a> – that tools should make it very easy to do things right, and very hard to do things wrong. The units package feels like a fantastic example of the concept.<sup>9</sup></p>
</section>
</section>
<section id="visualization" class="level2">
<h2 class="anchored" data-anchor-id="visualization">Visualization</h2>
<section id="ggdist-by-matthew-kay" class="level3">
<h3 class="anchored" data-anchor-id="ggdist-by-matthew-kay"><a href="https://mjskay.github.io/ggdist/">ggdist</a> by Matthew Kay</h3>
<p>I think I am extremely, extremely late to the ggdist party. But that’s okay, because ggdist is extremely, extremely good; there’s plenty to party about.</p>
<p>I really feel like the best advertisement for this package is the <a href="https://mjskay.github.io/ggdist/">package website</a>; the basic demonstration graphs on that page are <em>beautiful</em>. The toy example plots look better than some<sup>10</sup> of my published figures.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>starwars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-2">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(films) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-3">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb17-4">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> height, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> films, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> films)</span>
<span id="cb17-5">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-6">  ggdist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_slab</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-7">  ggdist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_dotsinterval</span>(</span>
<span id="cb17-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>, </span>
<span id="cb17-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, </span>
<span id="cb17-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval_alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb17-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point_alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb17-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slab_size =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb17-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-14">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set2"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-15">  ggdist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_ggdist</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2022-12-12-tools/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>ggdist is a late addition to my arsenal; I used it to make graphs while revising a manuscript and was immediately hooked. The toolkit ggdist provides is incredibly flexible, enabling both dozens of radically different representations of the same data as well as the infinite infinitesimal tweaks that we all obsess over to get our graphs <em>just right</em>. I’m a huge fan so far.</p>
</section>
<section id="kableextra-by-hao-zhu" class="level3">
<h3 class="anchored" data-anchor-id="kableextra-by-hao-zhu"><a href="https://haozhu233.github.io/kableExtra/">kableExtra</a> by Hao Zhu</h3>
<p>A confession: every two months<sup>11</sup> I try a new package for making tables,<sup>12</sup> use it for a week, and immediately go back to kableExtra. There’s just really nothing like it for consistent, professional, beautiful, and <em>controllable</em> tables, particularly for PDF documents.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">mtcars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-3">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kbl</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-4">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>(</span>
<span id="cb18-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bootstrap_options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"striped"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hover"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"condensed"</span>),</span>
<span id="cb18-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed_thead =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb18-7">  )</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-striped table-hover table-condensed table-sm small" data-quarto-postprocess="true">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th" style="text-align: left; position: sticky; top: 0; background-color: #FFFFFF;"></th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">mpg</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">cyl</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">disp</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">hp</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">drat</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">wt</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">qsec</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">vs</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">am</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">gear</th>
<th data-quarto-table-cell-role="th" style="text-align: right; position: sticky; top: 0; background-color: #FFFFFF;">carb</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Mazda RX4</td>
<td style="text-align: right;">21.0</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">160</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">3.90</td>
<td style="text-align: right;">2.620</td>
<td style="text-align: right;">16.46</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mazda RX4 Wag</td>
<td style="text-align: right;">21.0</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">160</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">3.90</td>
<td style="text-align: right;">2.875</td>
<td style="text-align: right;">17.02</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Datsun 710</td>
<td style="text-align: right;">22.8</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">108</td>
<td style="text-align: right;">93</td>
<td style="text-align: right;">3.85</td>
<td style="text-align: right;">2.320</td>
<td style="text-align: right;">18.61</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Hornet 4 Drive</td>
<td style="text-align: right;">21.4</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">258</td>
<td style="text-align: right;">110</td>
<td style="text-align: right;">3.08</td>
<td style="text-align: right;">3.215</td>
<td style="text-align: right;">19.44</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Hornet Sportabout</td>
<td style="text-align: right;">18.7</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">360</td>
<td style="text-align: right;">175</td>
<td style="text-align: right;">3.15</td>
<td style="text-align: right;">3.440</td>
<td style="text-align: right;">17.02</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">2</td>
</tr>
<tr class="even">
<td style="text-align: left;">Valiant</td>
<td style="text-align: right;">18.1</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">225</td>
<td style="text-align: right;">105</td>
<td style="text-align: right;">2.76</td>
<td style="text-align: right;">3.460</td>
<td style="text-align: right;">20.22</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">1</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Column widths! Consistent APIs to control header rows, grouping rows, data rows! Consistent APIs to control columns! Consistent APIs to control individual cells! kableExtra is a well-designed package. Plus, kableExtra ships with <a href="https://haozhu233.github.io/kableExtra/"><em>incredible</em> documentation</a>, which is extremely easy to search; my experience is that this package is written the way that you intuitively <em>want</em> a table-making package to be written. Every table in every paper I’ve written<sup>13</sup> has been run through kableExtra, and I’m expecting that trend to continue going forward.</p>
</section>
<section id="ggsflabel-by-hiroaki-yutani" class="level3">
<h3 class="anchored" data-anchor-id="ggsflabel-by-hiroaki-yutani"><a href="https://github.com/yutannihilation/ggsflabel">ggsflabel</a> by Hiroaki Yutani</h3>
<p><a href="https://twitter.com/TheMapAddict/status/1514056934407774216">Putting labels</a> on <a href="https://twitter.com/MatthewHMalone/status/1524369593632014336">maps</a> is a <a href="https://twitter.com/MatthewHMalone/status/1529170399640133633">recurring meme</a> among <a href="https://twitter.com/pokateo_/status/1526885811651612672">GIS users</a>. This is one of those things that feels like it should not be that hard, and turns out to actually be impossible.</p>
<p>But somehow, ggsflabel gets it… right? Almost every time? It’s magic. There’s literally no other explanation than magic. You could sell this to any university with an ArcMap subscription for thousands of dollars, but instead I installed it for free from GitHub.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">nc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_sf</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shape/nc.shp"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>))</span>
<span id="cb19-2"></span>
<span id="cb19-3">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(nc) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-4">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-5">  ggsflabel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf_label_repel</span>(ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> NAME), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2022-12-12-tools/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="ggspatial-by-dewey-dunnington" class="level3">
<h3 class="anchored" data-anchor-id="ggspatial-by-dewey-dunnington"><a href="https://github.com/paleolimbot/ggspatial">ggspatial</a> by Dewey Dunnington</h3>
<p>Just like label placement, every other part of making a map is surprisingly hard. Making coordinate reference systems play nicely with plotting libraries is hard, adding directionally-aware elements to a map is hard, adding scale bars and other distance-aware elements to a map is hard.</p>
<p>The ggspatial package makes it easier. My research group uses it extensively for our north arrows and scale bars, but the entire package is a gem. It solves a problem and does it well.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">nc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_sf</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shape/nc.shp"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>))</span>
<span id="cb20-2"></span>
<span id="cb20-3">ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(nc) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-4">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-5">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_north_arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"br"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-6">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_scale</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2022-12-12-tools/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="patchwork-by-thomas-lin-pedersen" class="level3">
<h3 class="anchored" data-anchor-id="patchwork-by-thomas-lin-pedersen"><a href="https://patchwork.data-imaginist.com/">patchwork</a> by Thomas Lin Pedersen</h3>
<p>For the longest time, it was surprisingly tricky to create multi-panel plots in R. The implementations that did exist required you to think a <em>little</em> bit too much about how R thinks about drawing graphics, which has never been a strong suit of mine. Dealing with legends and other annotations was also often a pain.</p>
<p>Enter patchwork, which makes combining plot objects together an absolute breeze:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb21-2"></span>
<span id="cb21-3">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(Orange, ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(age, circumference, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Tree)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-4">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()</span>
<span id="cb21-5"></span>
<span id="cb21-6">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mtcars, ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(wt, drat)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-7">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb21-8"></span>
<span id="cb21-9">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_annotation</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tag_levels =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> </span>
<span id="cb21-11">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.tag =</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2022-12-12-tools/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Just about all of my multi-panel figures are made with patchwork these days, because I find it to be exactly as flexible as I need for my visuals. Perhaps the best compliment I can give patchwork is that I barely ever need to think about it – when I need to create multi-panel graphs, I load patchwork and then things Just Work from there.</p>
</section>
</section>
<section id="spatial" class="level2">
<h2 class="anchored" data-anchor-id="spatial">Spatial</h2>
<section id="terra-by-robert-hijmans" class="level3">
<h3 class="anchored" data-anchor-id="terra-by-robert-hijmans"><a href="https://github.com/rspatial/terra">terra</a> by Robert Hijmans</h3>
<p>I’m not going to lie: I was dreading <a href="https://r-spatial.org//r/2022/04/12/evolution.html">the R spatial migration</a>. I have <em>so many</em> legacy projects relying on raster and friends,<sup>14</sup> and was expecting the transition to be an incredible headache without bringing any real benefits to my work.</p>
<p>I could not have been more wrong. Switching workloads to terra has been a <em>fantastic</em> investment across our research group. The terra package is faster than raster, and benefits from over a decade<sup>15</sup> of lessons learned from the raster package. The breadth of operations implemented is incredible as well; a weekly conversation in my lab involves someone<sup>16</sup> asking “how do I do X?”, where X is some complex calculation that would be incredibly difficult to implement, and someone<sup>17</sup> answering “oh, use this one-liner from terra.”</p>
<p>The terra package implements the functions you <em>expect</em> for a raster toolkit, with the names you <em>expect</em> for a raster toolkit, which work in the way you <em>expect</em> for a raster toolkit. For a relatively new package (the first CRAN release was in 2020), terra <em>feels</em> incredibly mature, and is an absolute joy to work with.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">loi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tmaptools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geocode_OSM</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hyampom California"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coords</span>
<span id="cb22-2">loi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> loi[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> loi[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>]])</span>
<span id="cb22-3">loi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(loi, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>)</span>
<span id="cb22-4">loi_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>()</span>
<span id="cb22-5">output_tiles <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> terrainr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_tiles</span>(</span>
<span id="cb22-6">  terrainr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_bbox_side_length</span>(loi, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>),</span>
<span id="cb22-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,</span>
<span id="cb22-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output_prefix =</span> loi_file</span>
<span id="cb22-9">)</span>
<span id="cb22-10"></span>
<span id="cb22-11">terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>(output_tiles<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>elevation) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-12">  terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2022-12-12-tools/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="gdal-by-frank-warmerdam-even-rouault-and-others" class="level3">
<h3 class="anchored" data-anchor-id="gdal-by-frank-warmerdam-even-rouault-and-others"><a href="https://gdal.org/">GDAL</a> by Frank Warmerdam, Even Rouault, and others</h3>
<p>For me, 2022 was the year of CLI GDAL commands. I have now written two papers entirely on the back of shell scripts calling <code>gdal_calc</code> and <code>gdalwarp</code>.</p>
<p>For those with normal hobbies, GDAL is a software library that describes itself as a “translator library” between raster and vector formats. In practice, however, GDAL is a full-featured raster toolkit with pretty decent vector support; a huge amount of common raster operations can be run by chaining together GDAL commands. And that’s huge, because GDAL is <em>fast</em> and can handle much, much larger data than R can.</p>
<p>Recommending GDAL to people who work with spatial data is a little bit like recommending breathing air,<sup>18</sup> given its dominant position in the spatial software ecosystem. But still, this year in particular, I found myself really, really appreciating having this tool at my disposal.</p>
</section>
<section id="sf-by-edzer-pebesma" class="level3">
<h3 class="anchored" data-anchor-id="sf-by-edzer-pebesma"><a href="https://r-spatial.github.io/sf/">sf</a> by Edzer Pebesma</h3>
<p>Perhaps unsurprisingly, the sf package continues to be an absolute delight. sf is the 14th most popular package when counting CRAN downloads; if you work with spatial data, you know about sf. Heck, odds are, if you don’t work with spatial data, you probably also know about sf. I used it in the last three code examples, because it is that core to how I think about doing spatial data analysis in R.</p>
<p>sf is another package that has, with shocking regularity, already implemented the thing you’re trying to do. The dplyr integration is fantastic; the ggplot2 integration is fantastic; the ability to call directly to GDAL is fantastic. I remain a huge fan.</p>
</section>
<section id="landscapemetrics-by-maximilian-hesselbarth-et-al." class="level3">
<h3 class="anchored" data-anchor-id="landscapemetrics-by-maximilian-hesselbarth-et-al."><a href="https://r-spatialecology.github.io/landscapemetrics/">landscapemetrics</a> by Maximilian Hesselbarth et al.</h3>
<p>Imagine, if you will, that everyone – quite literally every single person – in your field uses tool X. X is mostly focused on calculating statistics, and because of its dominance most of those statistics are known primarily as “the X set of statistics”. Most people in your field don’t know how to calculate the statistics without X and aren’t particularly interested in trying; a “correct” statistic is one that agrees with tool X.</p>
<p>Now, imagine tool X is closed-source, only runs on Windows, and was first released in 1995, so doesn’t exactly integrate with other software. In order to address those drawbacks, a team of scientists develop an R package that calculates the same statistics as X. This is already incredibly impressive; I cannot stress enough that <em>everyone</em> uses X and expects your results to match it <em>exactly</em>, and sometimes you just can’t figure out how to precisely match the closed-source Windows-only software. This was a big job.</p>
<p>Now imagine that two years later, the person who wrote tool X retires and every trace of tool X is erased from the internet. This suddenly becomes a <em>much bigger job</em>.</p>
<p>That’s, as best as I can tell from the outside, what happened to the team behind landscapemetrics. FRAGSTATS existed and was <em>the</em> standard reference for a whole boat of statistics;<sup>19</sup> landscapemetrics provided an open-source implementation; FRAGSTATS suddenly no longer existed. I don’t want to sound like I’m criticizing FRAGSTATS here – for a very long time, that software provided an incredible service for free to a huge number of researchers, and I don’t think releasing something on the Internet creates an infinite obligation to make sure the download links never expire.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">landscapemetrics<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calculate_lsm</span>(landscapemetrics<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>landscape, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patch"</span>)</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["layer"],"name":[1],"type":["int"],"align":["right"]},{"label":["level"],"name":[2],"type":["chr"],"align":["left"]},{"label":["class"],"name":[3],"type":["int"],"align":["right"]},{"label":["id"],"name":[4],"type":["int"],"align":["right"]},{"label":["metric"],"name":[5],"type":["chr"],"align":["left"]},{"label":["value"],"name":[6],"type":["dbl"],"align":["right"]}],"data":[{"1":"1","2":"patch","3":"1","4":"1","5":"area","6":"0.00010000"},{"1":"1","2":"patch","3":"1","4":"2","5":"area","6":"0.00050000"},{"1":"1","2":"patch","3":"1","4":"3","5":"area","6":"0.01480000"},{"1":"1","2":"patch","3":"1","4":"4","5":"area","6":"0.00010000"},{"1":"1","2":"patch","3":"1","4":"5","5":"area","6":"0.00010000"},{"1":"1","2":"patch","3":"1","4":"6","5":"area","6":"0.00140000"},{"1":"1","2":"patch","3":"1","4":"7","5":"area","6":"0.00030000"},{"1":"1","2":"patch","3":"1","4":"8","5":"area","6":"0.00050000"},{"1":"1","2":"patch","3":"1","4":"9","5":"area","6":"0.00010000"},{"1":"1","2":"patch","3":"2","4":"10","5":"area","6":"0.00350000"},{"1":"1","2":"patch","3":"2","4":"11","5":"area","6":"0.00020000"},{"1":"1","2":"patch","3":"2","4":"12","5":"area","6":"0.00020000"},{"1":"1","2":"patch","3":"2","4":"13","5":"area","6":"0.00980000"},{"1":"1","2":"patch","3":"2","4":"14","5":"area","6":"0.00020000"},{"1":"1","2":"patch","3":"2","4":"15","5":"area","6":"0.00010000"},{"1":"1","2":"patch","3":"2","4":"16","5":"area","6":"0.00240000"},{"1":"1","2":"patch","3":"2","4":"17","5":"area","6":"0.00010000"},{"1":"1","2":"patch","3":"2","4":"18","5":"area","6":"0.00030000"},{"1":"1","2":"patch","3":"2","4":"19","5":"area","6":"0.00030000"},{"1":"1","2":"patch","3":"2","4":"20","5":"area","6":"0.00570000"},{"1":"1","2":"patch","3":"2","4":"21","5":"area","6":"0.00040000"},{"1":"1","2":"patch","3":"2","4":"22","5":"area","6":"0.00070000"},{"1":"1","2":"patch","3":"2","4":"23","5":"area","6":"0.00030000"},{"1":"1","2":"patch","3":"3","4":"24","5":"area","6":"0.04570000"},{"1":"1","2":"patch","3":"3","4":"25","5":"area","6":"0.00090000"},{"1":"1","2":"patch","3":"3","4":"26","5":"area","6":"0.00030000"},{"1":"1","2":"patch","3":"3","4":"27","5":"area","6":"0.00100000"},{"1":"1","2":"patch","3":"1","4":"1","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"3","5":"cai","6":"47.97297297"},{"1":"1","2":"patch","3":"1","4":"4","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"cai","6":"14.28571429"},{"1":"1","2":"patch","3":"1","4":"7","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"8","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"9","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"cai","6":"31.42857143"},{"1":"1","2":"patch","3":"2","4":"11","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"12","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"13","5":"cai","6":"44.89795918"},{"1":"1","2":"patch","3":"2","4":"14","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"cai","6":"16.66666667"},{"1":"1","2":"patch","3":"2","4":"17","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"19","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"20","5":"cai","6":"49.12280702"},{"1":"1","2":"patch","3":"2","4":"21","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"cai","6":"14.28571429"},{"1":"1","2":"patch","3":"2","4":"23","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"24","5":"cai","6":"49.23413567"},{"1":"1","2":"patch","3":"3","4":"25","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"26","5":"cai","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"27","5":"cai","6":"10.00000000"},{"1":"1","2":"patch","3":"1","4":"1","5":"circle","6":"0.36338023"},{"1":"1","2":"patch","3":"1","4":"2","5":"circle","6":"0.62551778"},{"1":"1","2":"patch","3":"1","4":"3","5":"circle","6":"0.78050151"},{"1":"1","2":"patch","3":"1","4":"4","5":"circle","6":"0.36338023"},{"1":"1","2":"patch","3":"1","4":"5","5":"circle","6":"0.36338023"},{"1":"1","2":"patch","3":"1","4":"6","5":"circle","6":"0.55436616"},{"1":"1","2":"patch","3":"1","4":"7","5":"circle","6":"0.61802814"},{"1":"1","2":"patch","3":"1","4":"8","5":"circle","6":"0.51029248"},{"1":"1","2":"patch","3":"1","4":"9","5":"circle","6":"0.36338023"},{"1":"1","2":"patch","3":"2","4":"10","5":"circle","6":"0.57959072"},{"1":"1","2":"patch","3":"2","4":"11","5":"circle","6":"0.49070418"},{"1":"1","2":"patch","3":"2","4":"12","5":"circle","6":"0.68169011"},{"1":"1","2":"patch","3":"2","4":"13","5":"circle","6":"0.81122924"},{"1":"1","2":"patch","3":"2","4":"14","5":"circle","6":"0.49070418"},{"1":"1","2":"patch","3":"2","4":"15","5":"circle","6":"0.36338023"},{"1":"1","2":"patch","3":"2","4":"16","5":"circle","6":"0.68497166"},{"1":"1","2":"patch","3":"2","4":"17","5":"circle","6":"0.36338023"},{"1":"1","2":"patch","3":"2","4":"18","5":"circle","6":"0.52253517"},{"1":"1","2":"patch","3":"2","4":"19","5":"circle","6":"0.52253517"},{"1":"1","2":"patch","3":"2","4":"20","5":"circle","6":"0.53165556"},{"1":"1","2":"patch","3":"2","4":"21","5":"circle","6":"0.36338023"},{"1":"1","2":"patch","3":"2","4":"22","5":"circle","6":"0.38296853"},{"1":"1","2":"patch","3":"2","4":"23","5":"circle","6":"0.61802814"},{"1":"1","2":"patch","3":"3","4":"24","5":"circle","6":"0.66587975"},{"1":"1","2":"patch","3":"3","4":"25","5":"circle","6":"0.56859648"},{"1":"1","2":"patch","3":"3","4":"26","5":"circle","6":"0.61802814"},{"1":"1","2":"patch","3":"3","4":"27","5":"circle","6":"0.49370004"},{"1":"1","2":"patch","3":"1","4":"1","5":"contig","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"contig","6":"0.33333333"},{"1":"1","2":"patch","3":"1","4":"3","5":"contig","6":"0.76126126"},{"1":"1","2":"patch","3":"1","4":"4","5":"contig","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"contig","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"contig","6":"0.59523810"},{"1":"1","2":"patch","3":"1","4":"7","5":"contig","6":"0.22222222"},{"1":"1","2":"patch","3":"1","4":"8","5":"contig","6":"0.43333333"},{"1":"1","2":"patch","3":"1","4":"9","5":"contig","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"contig","6":"0.69047619"},{"1":"1","2":"patch","3":"2","4":"11","5":"contig","6":"0.16666667"},{"1":"1","2":"patch","3":"2","4":"12","5":"contig","6":"0.08333333"},{"1":"1","2":"patch","3":"2","4":"13","5":"contig","6":"0.76190476"},{"1":"1","2":"patch","3":"2","4":"14","5":"contig","6":"0.16666667"},{"1":"1","2":"patch","3":"2","4":"15","5":"contig","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"contig","6":"0.62500000"},{"1":"1","2":"patch","3":"2","4":"17","5":"contig","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"contig","6":"0.27777778"},{"1":"1","2":"patch","3":"2","4":"19","5":"contig","6":"0.27777778"},{"1":"1","2":"patch","3":"2","4":"20","5":"contig","6":"0.79239766"},{"1":"1","2":"patch","3":"2","4":"21","5":"contig","6":"0.41666667"},{"1":"1","2":"patch","3":"2","4":"22","5":"contig","6":"0.52380952"},{"1":"1","2":"patch","3":"2","4":"23","5":"contig","6":"0.22222222"},{"1":"1","2":"patch","3":"3","4":"24","5":"contig","6":"0.78482859"},{"1":"1","2":"patch","3":"3","4":"25","5":"contig","6":"0.50000000"},{"1":"1","2":"patch","3":"3","4":"26","5":"contig","6":"0.22222222"},{"1":"1","2":"patch","3":"3","4":"27","5":"contig","6":"0.55000000"},{"1":"1","2":"patch","3":"1","4":"1","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"3","5":"core","6":"0.00710000"},{"1":"1","2":"patch","3":"1","4":"4","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"core","6":"0.00020000"},{"1":"1","2":"patch","3":"1","4":"7","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"8","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"9","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"core","6":"0.00110000"},{"1":"1","2":"patch","3":"2","4":"11","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"12","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"13","5":"core","6":"0.00440000"},{"1":"1","2":"patch","3":"2","4":"14","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"core","6":"0.00040000"},{"1":"1","2":"patch","3":"2","4":"17","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"19","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"20","5":"core","6":"0.00280000"},{"1":"1","2":"patch","3":"2","4":"21","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"core","6":"0.00010000"},{"1":"1","2":"patch","3":"2","4":"23","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"24","5":"core","6":"0.02250000"},{"1":"1","2":"patch","3":"3","4":"25","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"26","5":"core","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"27","5":"core","6":"0.00010000"},{"1":"1","2":"patch","3":"1","4":"1","5":"enn","6":"7.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"enn","6":"4.00000000"},{"1":"1","2":"patch","3":"1","4":"3","5":"enn","6":"2.82842712"},{"1":"1","2":"patch","3":"1","4":"4","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"enn","6":"2.82842712"},{"1":"1","2":"patch","3":"1","4":"7","5":"enn","6":"4.12310563"},{"1":"1","2":"patch","3":"1","4":"8","5":"enn","6":"4.12310563"},{"1":"1","2":"patch","3":"1","4":"9","5":"enn","6":"4.24264069"},{"1":"1","2":"patch","3":"2","4":"10","5":"enn","6":"4.47213595"},{"1":"1","2":"patch","3":"2","4":"11","5":"enn","6":"4.47213595"},{"1":"1","2":"patch","3":"2","4":"12","5":"enn","6":"3.16227766"},{"1":"1","2":"patch","3":"2","4":"13","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"2","4":"14","5":"enn","6":"3.00000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"enn","6":"3.00000000"},{"1":"1","2":"patch","3":"2","4":"17","5":"enn","6":"3.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"enn","6":"3.00000000"},{"1":"1","2":"patch","3":"2","4":"19","5":"enn","6":"2.82842712"},{"1":"1","2":"patch","3":"2","4":"20","5":"enn","6":"5.83095189"},{"1":"1","2":"patch","3":"2","4":"21","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"enn","6":"2.82842712"},{"1":"1","2":"patch","3":"2","4":"23","5":"enn","6":"3.16227766"},{"1":"1","2":"patch","3":"3","4":"24","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"3","4":"25","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"3","4":"26","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"3","4":"27","5":"enn","6":"2.00000000"},{"1":"1","2":"patch","3":"1","4":"1","5":"frac","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"frac","6":"1.36521239"},{"1":"1","2":"patch","3":"1","4":"3","5":"frac","6":"1.39327285"},{"1":"1","2":"patch","3":"1","4":"4","5":"frac","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"frac","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"frac","6":"1.21970667"},{"1":"1","2":"patch","3":"1","4":"7","5":"frac","6":"1.26185951"},{"1":"1","2":"patch","3":"1","4":"8","5":"frac","6":"1.13864688"},{"1":"1","2":"patch","3":"1","4":"9","5":"frac","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"frac","6":"1.26642554"},{"1":"1","2":"patch","3":"2","4":"11","5":"frac","6":"1.16992500"},{"1":"1","2":"patch","3":"2","4":"12","5":"frac","6":"2.00000000"},{"1":"1","2":"patch","3":"2","4":"13","5":"frac","6":"1.31753383"},{"1":"1","2":"patch","3":"2","4":"14","5":"frac","6":"1.16992500"},{"1":"1","2":"patch","3":"2","4":"15","5":"frac","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"frac","6":"1.30862575"},{"1":"1","2":"patch","3":"2","4":"17","5":"frac","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"frac","6":"1.26185951"},{"1":"1","2":"patch","3":"2","4":"19","5":"frac","6":"1.26185951"},{"1":"1","2":"patch","3":"2","4":"20","5":"frac","6":"1.13903334"},{"1":"1","2":"patch","3":"2","4":"21","5":"frac","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"frac","6":"1.12915007"},{"1":"1","2":"patch","3":"2","4":"23","5":"frac","6":"1.26185951"},{"1":"1","2":"patch","3":"3","4":"24","5":"frac","6":"1.45833110"},{"1":"1","2":"patch","3":"3","4":"25","5":"frac","6":"1.26185951"},{"1":"1","2":"patch","3":"3","4":"26","5":"frac","6":"1.26185951"},{"1":"1","2":"patch","3":"3","4":"27","5":"frac","6":"1.20411998"},{"1":"1","2":"patch","3":"1","4":"1","5":"gyrate","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"gyrate","6":"1.00015229"},{"1":"1","2":"patch","3":"1","4":"3","5":"gyrate","6":"8.55192604"},{"1":"1","2":"patch","3":"1","4":"4","5":"gyrate","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"gyrate","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"gyrate","6":"1.63148582"},{"1":"1","2":"patch","3":"1","4":"7","5":"gyrate","6":"0.66666667"},{"1":"1","2":"patch","3":"1","4":"8","5":"gyrate","6":"0.84780148"},{"1":"1","2":"patch","3":"1","4":"9","5":"gyrate","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"gyrate","6":"2.49548945"},{"1":"1","2":"patch","3":"2","4":"11","5":"gyrate","6":"0.50000000"},{"1":"1","2":"patch","3":"2","4":"12","5":"gyrate","6":"0.70710678"},{"1":"1","2":"patch","3":"2","4":"13","5":"gyrate","6":"6.36373298"},{"1":"1","2":"patch","3":"2","4":"14","5":"gyrate","6":"0.50000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"gyrate","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"gyrate","6":"2.51028194"},{"1":"1","2":"patch","3":"2","4":"17","5":"gyrate","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"gyrate","6":"0.65403884"},{"1":"1","2":"patch","3":"2","4":"19","5":"gyrate","6":"0.65403884"},{"1":"1","2":"patch","3":"2","4":"20","5":"gyrate","6":"3.17066816"},{"1":"1","2":"patch","3":"2","4":"21","5":"gyrate","6":"0.70710678"},{"1":"1","2":"patch","3":"2","4":"22","5":"gyrate","6":"0.97479327"},{"1":"1","2":"patch","3":"2","4":"23","5":"gyrate","6":"0.66666667"},{"1":"1","2":"patch","3":"3","4":"24","5":"gyrate","6":"11.23638380"},{"1":"1","2":"patch","3":"3","4":"25","5":"gyrate","6":"1.23682432"},{"1":"1","2":"patch","3":"3","4":"26","5":"gyrate","6":"0.66666667"},{"1":"1","2":"patch","3":"3","4":"27","5":"gyrate","6":"1.24202906"},{"1":"1","2":"patch","3":"1","4":"1","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"3","5":"ncore","6":"3.00000000"},{"1":"1","2":"patch","3":"1","4":"4","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"ncore","6":"2.00000000"},{"1":"1","2":"patch","3":"1","4":"7","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"8","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"1","4":"9","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"ncore","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"11","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"12","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"13","5":"ncore","6":"2.00000000"},{"1":"1","2":"patch","3":"2","4":"14","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"ncore","6":"3.00000000"},{"1":"1","2":"patch","3":"2","4":"17","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"19","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"20","5":"ncore","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"21","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"ncore","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"23","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"24","5":"ncore","6":"11.00000000"},{"1":"1","2":"patch","3":"3","4":"25","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"26","5":"ncore","6":"0.00000000"},{"1":"1","2":"patch","3":"3","4":"27","5":"ncore","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"1","5":"para","6":"4.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"para","6":"2.40000000"},{"1":"1","2":"patch","3":"1","4":"3","5":"para","6":"0.87837838"},{"1":"1","2":"patch","3":"1","4":"4","5":"para","6":"4.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"para","6":"4.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"para","6":"1.42857143"},{"1":"1","2":"patch","3":"1","4":"7","5":"para","6":"2.66666667"},{"1":"1","2":"patch","3":"1","4":"8","5":"para","6":"2.00000000"},{"1":"1","2":"patch","3":"1","4":"9","5":"para","6":"4.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"para","6":"1.08571429"},{"1":"1","2":"patch","3":"2","4":"11","5":"para","6":"3.00000000"},{"1":"1","2":"patch","3":"2","4":"12","5":"para","6":"4.00000000"},{"1":"1","2":"patch","3":"2","4":"13","5":"para","6":"0.83673469"},{"1":"1","2":"patch","3":"2","4":"14","5":"para","6":"3.00000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"para","6":"4.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"para","6":"1.33333333"},{"1":"1","2":"patch","3":"2","4":"17","5":"para","6":"4.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"para","6":"2.66666667"},{"1":"1","2":"patch","3":"2","4":"19","5":"para","6":"2.66666667"},{"1":"1","2":"patch","3":"2","4":"20","5":"para","6":"0.70175439"},{"1":"1","2":"patch","3":"2","4":"21","5":"para","6":"2.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"para","6":"1.71428571"},{"1":"1","2":"patch","3":"2","4":"23","5":"para","6":"2.66666667"},{"1":"1","2":"patch","3":"3","4":"24","5":"para","6":"0.76148796"},{"1":"1","2":"patch","3":"3","4":"25","5":"para","6":"1.77777778"},{"1":"1","2":"patch","3":"3","4":"26","5":"para","6":"2.66666667"},{"1":"1","2":"patch","3":"3","4":"27","5":"para","6":"1.60000000"},{"1":"1","2":"patch","3":"1","4":"1","5":"perim","6":"4.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"perim","6":"12.00000000"},{"1":"1","2":"patch","3":"1","4":"3","5":"perim","6":"130.00000000"},{"1":"1","2":"patch","3":"1","4":"4","5":"perim","6":"4.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"perim","6":"4.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"perim","6":"20.00000000"},{"1":"1","2":"patch","3":"1","4":"7","5":"perim","6":"8.00000000"},{"1":"1","2":"patch","3":"1","4":"8","5":"perim","6":"10.00000000"},{"1":"1","2":"patch","3":"1","4":"9","5":"perim","6":"4.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"perim","6":"38.00000000"},{"1":"1","2":"patch","3":"2","4":"11","5":"perim","6":"6.00000000"},{"1":"1","2":"patch","3":"2","4":"12","5":"perim","6":"8.00000000"},{"1":"1","2":"patch","3":"2","4":"13","5":"perim","6":"82.00000000"},{"1":"1","2":"patch","3":"2","4":"14","5":"perim","6":"6.00000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"perim","6":"4.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"perim","6":"32.00000000"},{"1":"1","2":"patch","3":"2","4":"17","5":"perim","6":"4.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"perim","6":"8.00000000"},{"1":"1","2":"patch","3":"2","4":"19","5":"perim","6":"8.00000000"},{"1":"1","2":"patch","3":"2","4":"20","5":"perim","6":"40.00000000"},{"1":"1","2":"patch","3":"2","4":"21","5":"perim","6":"8.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"perim","6":"12.00000000"},{"1":"1","2":"patch","3":"2","4":"23","5":"perim","6":"8.00000000"},{"1":"1","2":"patch","3":"3","4":"24","5":"perim","6":"348.00000000"},{"1":"1","2":"patch","3":"3","4":"25","5":"perim","6":"16.00000000"},{"1":"1","2":"patch","3":"3","4":"26","5":"perim","6":"8.00000000"},{"1":"1","2":"patch","3":"3","4":"27","5":"perim","6":"16.00000000"},{"1":"1","2":"patch","3":"1","4":"1","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"2","5":"shape","6":"1.20000000"},{"1":"1","2":"patch","3":"1","4":"3","5":"shape","6":"2.60000000"},{"1":"1","2":"patch","3":"1","4":"4","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"5","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"6","5":"shape","6":"1.25000000"},{"1":"1","2":"patch","3":"1","4":"7","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"8","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"1","4":"9","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"10","5":"shape","6":"1.58333333"},{"1":"1","2":"patch","3":"2","4":"11","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"12","5":"shape","6":"1.33333333"},{"1":"1","2":"patch","3":"2","4":"13","5":"shape","6":"2.05000000"},{"1":"1","2":"patch","3":"2","4":"14","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"15","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"16","5":"shape","6":"1.60000000"},{"1":"1","2":"patch","3":"2","4":"17","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"18","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"19","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"20","5":"shape","6":"1.25000000"},{"1":"1","2":"patch","3":"2","4":"21","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"22","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"2","4":"23","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"3","4":"24","5":"shape","6":"4.04651163"},{"1":"1","2":"patch","3":"3","4":"25","5":"shape","6":"1.33333333"},{"1":"1","2":"patch","3":"3","4":"26","5":"shape","6":"1.00000000"},{"1":"1","2":"patch","3":"3","4":"27","5":"shape","6":"1.14285714"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>But it still creates big shoes for landscapemetrics to fill – and landscapemetrics fills them admirably. This package was the engine behind <a href="../2022-08-10-ground-filtering">the landscape structure section of my ground filtering paper this year</a>, and is so user-friendly. I’m very grateful that this tool exists <em>at all</em> now that FRAGSTATS is no longer with us; that the package is <em>good</em> is more than we deserve.</p>
</section>
</section>
<section id="devops" class="level2">
<h2 class="anchored" data-anchor-id="devops">DevOps</h2>
<section id="pi-hole" class="level3">
<h3 class="anchored" data-anchor-id="pi-hole"><a href="https://pi-hole.net/">Pi-hole</a></h3>
<p>If you’re nerdy enough to have a sever kicking around, you owe it to yourself to set up a Pi-hole. A <em>comical</em> amount of the total payload size for any website is made up of advertisements and tracking code that is annoying at best and actively malicious at worst; letting that unwanted data into your network and onto your machine is a real security risk. You should use an ad blocker in your browser for this reason (I personally use <a href="https://adnauseam.io/">Ad Nauseum</a>), but adding an extra layer of security to your network is also a great idea.</p>
<p>Pi-holes are relatively easy to set up (in comparison to, let’s say, Python), will help your websites load faster, and will help prevent malicious code from affecting your machines. I can’t recommend them enough.</p>
</section>
<section id="plumber-by-barret-schloerke-pool-by-joe-cheng-and-memoise-by-hadley-wickham-and-jim-hester-among-others" class="level3">
<h3 class="anchored" data-anchor-id="plumber-by-barret-schloerke-pool-by-joe-cheng-and-memoise-by-hadley-wickham-and-jim-hester-among-others"><a href="https://www.rplumber.io/">plumber</a> by Barret Schloerke, <a href="https://rstudio.github.io/pool/index.html">pool</a> by Joe Cheng, and <a href="https://memoise.r-lib.org/index.html">memoise</a> by Hadley Wickham and Jim Hester (among others)</h3>
<p>I’m cheating, because technically these next three packages belong in the next section, but also a <em>huge</em> amount of my work this year has been helped by having these packages around. The plumber package makes it comically easy to set up a REST API using R, and we lean on it to run the data delivery infrastructure for our research group. I don’t know how they did it, but the team behind plumber managed to make it so writing API code <em>feels</em> like writing analysis or processing code, even though it’s a completely different problem space. It’s fantastic.</p>
<p>This year in particular we’ve been focused on speeding up our API. For that purpose, we’ve turned to pool and memoise: the pool package caches database connections so that you don’t need to spend the time re-establishing connections for each new request that comes through; the memoise package caches function calls, so that you don’t need to spend the time re-calculating the results of a function that you recently executed. By making our data retrieval API lean heavily on these two packages, we were able to cut our average download times in <em>half</em> – not the server time, not the individual function calls we altered, but time from user making a request to having all of the data they required. And the changes required were painless – we were already using DBI, so using pool took roughly no work; using memoise took maybe an hour of my time. These packages make working with APIs a treat, even in a “statistical computing and graphics” language.</p>
</section>
<section id="openmetrics-by-aaron-jacobs-and-logger-by-gergely-daróczi" class="level3">
<h3 class="anchored" data-anchor-id="openmetrics-by-aaron-jacobs-and-logger-by-gergely-daróczi"><a href="https://github.com/atheriel/openmetrics/">openmetrics</a> by Aaron Jacobs and <a href="https://daroczig.github.io/logger/">logger</a> by Gergely Daróczi</h3>
<p>Speaking of APIs, these two packages have been absolute workhorses for us over the past year. The openmetrics package writes metrics about your API to a format that’s understandable by <a href="https://prometheus.io/">Prometheus</a>, which in turn is easily queried via <a href="https://grafana.com/">Grafana</a>; combined, these tools have formed our main observability stack for our data retrieval API ever since we stood it up. The logger package, meanwhile, does exactly what you’d expect: it emits logs, of various levels, to wherever you direct it. Having good tooling for monitoring and logging has been incredibly helpful as we need to debug and otherwise alter our production API, and I’ve been extremely happy with our setup.</p>
</section>
</section>
<section id="the-posit-empire" class="level2">
<h2 class="anchored" data-anchor-id="the-posit-empire">The Posit Empire</h2>
<p>Last, but certainly not least, there’s a huge suite of tools I use nearly every day from <a href="https://posit.co/">Posit, PBC</a> (née RStudio). Because this post is rather long, and I wanted to focus on smaller projects, I’m going to write a bit less about each; that is not because I like them any less.</p>
<p><img src="https://mm218.dev/posts/2022-12-12-tools/favorites.jpg" class="img-fluid" alt="An image of a book cover, with three bears holding hands; the book is called 'You're All My Favorites'"></p>
<section id="quarto" class="level3">
<h3 class="anchored" data-anchor-id="quarto"><a href="https://quarto.org/">Quarto</a></h3>
<p>I’ve been a huge Quarto booster since it was released; heck, I went to (I think) the first public Quarto talk at the Boston RUG meetup. This site is written in Quarto; my last three papers have been written in Quarto; the talk I’m giving Wednesday is written in Quarto. I’ve written <a href="https://github.com/mikemahoney218/quarto-arxiv">three</a> <a href="https://github.com/mikemahoney218/quarto-tandf">Quarto</a> <a href="https://github.com/mikemahoney218/quarto-agu">formats</a>. A huge amount of my job is “writing” – writing code, papers, talks, and so on – and being able to treat each form of writing in the same way, without needing to switch my tooling up is a <em>huge</em> help when I need to switch across tasks.</p>
</section>
<section id="recipes" class="level3">
<h3 class="anchored" data-anchor-id="recipes"><a href="https://recipes.tidymodels.org/">recipes</a></h3>
<p>I think I need to write a longer post about recipes at some point, because this package is <em>great</em>. In isolation, recipes makes it extremely easy to do feature engineering in a clean, ergonomic way; I teach with it even when I’m not teaching with tidymodels. But when combined with the rest of the tidymodels ecosystem, recipes really shines, helping you avoid data leakage and keeping your data preprocessing pipelines consistent across iterations.</p>
</section>
<section id="yardstick" class="level3">
<h3 class="anchored" data-anchor-id="yardstick"><a href="https://yardstick.tidymodels.org/">yardstick</a></h3>
<p>Want to calculate RMSE of two numeric columns in a data frame?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rmse</span>(Orange, age, circumference)</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[".metric"],"name":[1],"type":["chr"],"align":["left"]},{"label":[".estimator"],"name":[2],"type":["chr"],"align":["left"]},{"label":[".estimate"],"name":[3],"type":["dbl"],"align":["right"]}],"data":[{"1":"rmse","2":"standard","3":"915.4996"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Decide you want to calculate MAE instead?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mae</span>(Orange, age, circumference)</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[".metric"],"name":[1],"type":["chr"],"align":["left"]},{"label":[".estimator"],"name":[2],"type":["chr"],"align":["left"]},{"label":[".estimate"],"name":[3],"type":["dbl"],"align":["right"]}],"data":[{"1":"mae","2":"standard","3":"806.2857"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Want to calculate a <em>ton</em> of metrics all at once?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metric_set</span>(</span>
<span id="cb26-2">  yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>rmse, </span>
<span id="cb26-3">  yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mae,</span>
<span id="cb26-4">  yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>rsq,</span>
<span id="cb26-5">  yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>mape,</span>
<span id="cb26-6">  yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>msd</span>
<span id="cb26-7">)(Orange, age, circumference)</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[".metric"],"name":[1],"type":["chr"],"align":["left"]},{"label":[".estimator"],"name":[2],"type":["chr"],"align":["left"]},{"label":[".estimate"],"name":[3],"type":["dbl"],"align":["right"]}],"data":[{"1":"rmse","2":"standard","3":"915.4996138"},{"1":"mae","2":"standard","3":"806.2857143"},{"1":"rsq","2":"standard","3":"0.8345167"},{"1":"mape","2":"standard","3":"85.5436006"},{"1":"msd","2":"standard","3":"806.2857143"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>yardstick is consistent in inputs and outputs, extremely clean, and a joy to work with. I’ve been extending it recently in <a href="https://github.com/mikemahoney218/waywiser/">waywiser</a> and enjoying the process a lot. Plus, just like with recipes, it integrates beautifully with the rest of tidymodels. Fantastic.</p>
</section>
<section id="ggplot2" class="level3">
<h3 class="anchored" data-anchor-id="ggplot2"><a href="https://ggplot2.tidyverse.org/">ggplot2</a></h3>
<p>I mean, come on.</p>
</section>
<section id="dplyr" class="level3">
<h3 class="anchored" data-anchor-id="dplyr"><a href="https://dplyr.tidyverse.org/">dplyr</a></h3>
<p>I mean, come <em>on</em>.</p>
</section>
<section id="tidyr" class="level3">
<h3 class="anchored" data-anchor-id="tidyr">tidyr</h3>
<p>I fell in love with tidyr back in 2017,<sup>20</sup> because it let me do things like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">Orange <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb27-2">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Tree) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb27-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb27-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(circumference <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> age, x)),</span>
<span id="cb27-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rsq =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(model, \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(x)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>r.squared)</span>
<span id="cb27-6">  )</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["Tree"],"name":[1],"type":["ord"],"align":["right"]},{"label":["data"],"name":[2],"type":["list"],"align":["right"]},{"label":["model"],"name":[3],"type":["list"],"align":["right"]},{"label":["rsq"],"name":[4],"type":["dbl"],"align":["right"]}],"data":[{"1":"1","2":"<nfnGrpdD[,2]>","3":"<S3: lm>","4":"0.9711463"},{"1":"2","2":"<nfnGrpdD[,2]>","3":"<S3: lm>","4":"0.9748846"},{"1":"3","2":"<nfnGrpdD[,2]>","3":"<S3: lm>","4":"0.9764930"},{"1":"4","2":"<nfnGrpdD[,2]>","3":"<S3: lm>","4":"0.9691634"},{"1":"5","2":"<nfnGrpdD[,2]>","3":"<S3: lm>","4":"0.9756256"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>I don’t know if dplyr has changed since then or if I’ve just gotten more familiar with it, but I’ve since realized I can use dplyr for this sort of thing instead:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">Orange <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb28-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Tree) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb28-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb28-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(circumference <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> age, dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cur_data</span>())),</span>
<span id="cb28-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rsq =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(model, \(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(x)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>r.squared)</span>
<span id="cb28-6">  )</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["Tree"],"name":[1],"type":["ord"],"align":["right"]},{"label":["model"],"name":[2],"type":["list"],"align":["right"]},{"label":["rsq"],"name":[3],"type":["dbl"],"align":["right"]}],"data":[{"1":"3","2":"<S3: lm>","3":"0.9764930"},{"1":"1","2":"<S3: lm>","3":"0.9711463"},{"1":"5","2":"<S3: lm>","3":"0.9756256"},{"1":"2","2":"<S3: lm>","3":"0.9748846"},{"1":"4","2":"<S3: lm>","3":"0.9691634"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>But for my more complicated split-apply-combine workflows, tidyr still reigns supreme.</p>
</section>
<section id="devtools-testthat-pkgdown" class="level3">
<h3 class="anchored" data-anchor-id="devtools-testthat-pkgdown">devtools, testthat, pkgdown</h3>
<p>Last but not least, the tools I probably use more than any other package. It is <em>incredible</em> how effectively devtools and testthat speed up package development; it’s hard to imagine any other tools being a greater force multiplier than these. I can count the number of times I have run <code>R CMD check</code> on one hand, and the number of times I’ve run <code>devtools::check()</code> on the atoms of the universe.</p>
<p>Similarly, pkgdown is an <em>incredible</em> tool for the entire community. The fact that it is now easy – I mean, <em>trivial</em> – to have a nice-looking HTML documentation website for any package, so long as it has a README and man pages, is incredible. It makes the software we write more accessible to users, and incentivizes writing <em>good</em> documentation by turning man pages and vignettes into marketing material and a public-facing homepage.</p>


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>And that’s a big “might”. For the R packages I maintain, I’m able to track the number of downloads I get each day from the RStudio CRAN mirror. As I write this, this site is one of 103 mirrors, and while I <em>suspect</em> it’s the most popular one, I’m pretty confident that no one but CRAN actually <em>knows</em> – and to make matters worse, the people using the other 102 mirrors directly rather than the RStudio redirect are <em>most certainly</em> not a random sample. That means I’m only capturing some % of total downloads, but just about no one knows what % that might be, and it’s probably a different number for different packages. I can also track the number of clones each of my repos gets, but this is even less useful; <a href="https://github.com/tidymodels/spatialsample">spatialsample’s repo</a> was cloned 28 times yesterday, by a total of 4 people. Who are you people? Why are you cloning this repo so much?↩︎</p></li>
<li id="fn2"><p>To again use the RStudio download numbers as an example, a fun game is to check how many downloads even the least popular packages get each day. I have never, using <a href="https://hadley.shinyapps.io/cran-downloads/">Hadley’s app</a>, found a package with an average lower than ~5 downloads per day (see for instance my <a href="https://github.com/mikemahoney218/heddlr/">heddlr</a> package as a benchmark). Of course, if you have a stable userbase your users presumably <em>won’t</em> need to download your packages unless they get a new computer, a new version of R, or you release an update – which often causes spikes in the download numbers – so “number of downloads” is a pretty bad metric, even before we get into all the downloads from non-users or all the ways this number can be gamed.↩︎</p></li>
<li id="fn3"><p>And frankly, I don’t think most maintainers would actually like this; issues on a bug tracker are meant to be individual tasks to be tackled, and so positive feedback sent through this channel is probably the right message in the wrong place.↩︎</p></li>
<li id="fn4"><p>Which, don’t get me wrong, is still very appreciated. Even at my least meditative, I’d rather <em>stop</em> making the mistake :)↩︎</p></li>
<li id="fn5"><p>A <a href="https://www.intel.com/content/www/us/en/products/details/nuc.html">NUC</a> running Ubuntu, which is really the perfect machine for “an inexpensive always-on computer that won’t deafen me with fans or beep really loudly when I’m asleep”.↩︎</p></li>
<li id="fn6"><p>I use <a href="https://tailscale.com/">tailscale</a>, which is <em>not</em> open source but would otherwise make this list.↩︎</p></li>
<li id="fn7"><p>“Element”; in this case, we’re measuring how much phosphorous is in each gram of a wood sample.↩︎</p></li>
<li id="fn8"><p>There is no such thing.↩︎</p></li>
<li id="fn9"><p>One example here: units objects are not numeric vectors, in the normal sense. You can’t do, for instance, <code>units::set_units(2, "m") + 1</code>; without knowing what units <code>1</code> is in, it’s impossible to say what the return value would be. A whole class of bugs, eliminated by <em>not</em> letting you do something.↩︎</p></li>
<li id="fn10"><p>(most)↩︎</p></li>
<li id="fn11"><p>Read: “Whenever I see people posting about a new package on Twitter”↩︎</p></li>
<li id="fn12"><p>Mostly in LaTeX. Another confession: I don’t entirely <em>understand</em> the point of HTML tables. This is probably because I do not write statistical analyses for the internet. For the types of content I consume via HTML, I want you to either give me a graph of the important message of your data, or to give me a CSV so I can go figure out the message for myself. The sorts of things I consume via PDF, or write for PDF formats, usually have a higher evidence bar.↩︎</p></li>
<li id="fn13"><p>Minus <a href="https://www.mm218.dev/papers/mahoney_stella_2020.pdf">Mahoney and Stella 2020</a>, which was written in Word; the horrors of formatting tables for that paper in Word is actually what got me into R Markdown in the first place.↩︎</p></li>
<li id="fn14"><p>I didn’t use rgeos or rgdal directly, other than as part of functions in the raster package; I’m also new enough to the space that I’ve <em>always</em> used sf, and never really touched sp or maptools.↩︎</p></li>
<li id="fn15"><p>The first version of raster hit CRAN in 2010. That we should all be so long-lasting and so useful!↩︎</p></li>
<li id="fn16"><p>Pretty often, though not always, me.↩︎</p></li>
<li id="fn17"><p>Pretty often, though not always, <a href="https://www.lucaskjohnson.com/">Lucas</a>.↩︎</p></li>
<li id="fn18"><p>The original draft, written very late at night, said “a little bit like recommending not being on fire” here. I changed that, because it did not make any sense, but I also found it really funny, hence this note.↩︎</p></li>
<li id="fn19"><p>As in, “I had more than one college course that was, in no small part, <em>on</em> FRAGSTATS”.↩︎</p></li>
<li id="fn20"><p>Which means yes, I do sometimes still use <code>gather()</code>, though weirdly never <code>spread()</code>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Spatial</category>
  <category>Data science</category>
  <guid>https://mm218.dev/posts/2022-12-12-tools/index.html</guid>
  <pubDate>Mon, 12 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-12-12-tools/favorites.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How to include sf data in R packages</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-12-01-sf-in-packages/index.html</link>
  <description><![CDATA[ 




<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">tl;dr</h2>
<p>Store your sf objects as <a href="https://r-pkgs.org/data.html#sec-data-sysdata">internal data</a>. Add a <code>.R</code> file to <code>data/</code> (probably named <code>your_data.R</code>) containing the following:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">delayedAssign</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_data"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local</span>({</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-3">  your_package<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span>your_data</span>
<span id="cb1-4">}))</span></code></pre></div>
<p><a href="https://r-pkgs.org/data.html#sec-documenting-data">Document your data as usual</a>.</p>
<p>See the update at the bottom of this post for a bit more information.</p>
</section>
<section id="the-problem" class="level2">
<h2 class="anchored" data-anchor-id="the-problem">The Problem</h2>
<p>If you work with spatial data in R, you’re familiar with <a href="https://r-spatial.github.io/sf/">the sf package</a>. If you write spatially-oriented packages for R, there’s a good chance you think a lot about how to handle and work with sf objects. I think that’s a good thing; sf makes data analysis with spatial data <em>miles</em> easier, and I rely on it throughout my packages.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-12-01-sf-in-packages/sf.jpg" class="img-fluid figure-img" alt="Three cute fuzzy monsters adding spatial geometries to an existing table of attributes using glue and tape, while one cuts out the spatial polygons. Title text reads &quot;sf: spatial data…simplified.&quot; and a caption at the bottom reads &quot;sticky geometries: for people who love their maps and sanity.&quot;"></p>
<figcaption class="figure-caption">CC-BY 4.0 Artwork by Allison Horst.</figcaption>
</figure>
</div>
<p>If you write spatially-oriented packages, there’s a good chance your examples or tests could benefit from your package including some sf objects as demonstration data. But there’s a few weird edge cases that crop up when including sf objects in package data.</p>
<p>For instance, let’s look at the <code>guerry</code> data from the <a href="https://spatialanalysis.github.io/geodaData/">geodaData</a> package. On its own, this object seems to load and print perfectly fine:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">geodaData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>guerry <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  CODE_DE COUNT AVE_ID_ dept Region Dprtmnt Crm_prs Crm_prp Litercy Donatns
1      01     1      49    1      E     Ain   28870   15890      37    5098
  Infants Suicids MainCty Wealth Commerc Clergy Crm_prn Infntcd Dntn_cl Lottery
1   33120   35039       2     73      58     11      71      60      69      41
  Desertn Instrct Prsttts Distanc Area Pop1831
1      55      46      13 218.372 5762  346.03
geometry
1 801150, 800669, 800688, 800780, 800589, 800333, 799095, 799136, 799690, 799329, 797715, 797655, 797410, 797149, 796755, 796738, 796612, 795234, 794905, 794547, 791555, 791465, 791935, 791835, 791670, 790205, 790035, 789304, 788617, 788005, 787670, 786705, 786350, 785720, 785562, 786670, 786930, 787055, 787208, 787367, 786900, 786795, 786830, 786811, 786384, 786550, 786560, 786465, 785956, 787211, 787415, 787600, 787536, 787137, 786610, 786457, 787138, 787365, 787545, 787880, 788198, 788225, 789130, 789370, 789790, 789995, 790445, 790237, 789585, 788993, 788830, 788650, 788638, 788673, 789501, 789510, 789596, 789680, 789845, 790050, 790594, 790750, 790740, 790739, 791139, 791749, 791860, 792199, 792285, 792880, 793615, 793737, 793650, 793618, 793480, 794012, 794347, 794535, 794686, 795135, 796115, 796193, 796250, 796311, 796335, 796324, 796316, 796385, 796495, 797830, 797970, 797959, 797910, 797905, 798850, 798930, 798980, 799122, 799255, 799340, 800295, 800326, 800757, 801505, 802043, 802820, 804846, 805165, 805338, 805485, 808352, 808655, 809605, 809930, 811710, 813076, 814292, 814670, 815189, 816978, 817045, 818290, 819798, 819990, 819753, 820496, 820305, 820810, 821023, 821020, 821753, 822453, 822690, 823263, 823585, 824250, 825284, 825600, 828440, 829372, 828470, 828705, 828395, 827745, 828485, 830445, 831525, 832747, 833030, 833286, 833885, 833687, 832940, 832830, 833866, 833825, 833752, 833675, 835995, 835930, 836194, 836185, 836190, 836405, 836690, 837059, 837545, 838628, 838735, 840056, 840530, 840855, 841371, 841670, 841591, 841093, 840525, 840483, 841576, 841898, 843750, 843973, 844372, 844675, 846805, 848292, 848440, 848651, 850029, 850390, 851184, 851650, 851857, 851710, 852195, 853883, 854050, 854684, 854950, 855010, 854706, 856495, 857425, 857675, 857795, 860115, 860522, 860356, 860868, 861160, 861499, 861800, 863931, 864270, 867954, 868320, 868625, 868940, 870819, 871569, 872099, 872230, 873891, 874080, 875215, 875688, 875836, 876350, 877249, 877575, 877751, 879950, 880577, 882757, 884049, 885600, 886165, 886435, 889069, 889778, 890867, 893000, 894101, 894575, 894622, 893375, 892712, 892540, 891600, 891281, 891245, 891340, 890292, 890080, 890987, 891235, 891560, 891794, 891337, 890413, 889185, 888822, 887853, 887180, 886092, 885735, 885432, 884760, 883760, 883455, 882749, 882058, 881989, 880591, 880422, 879890, 879855, 882197, 882019, 881408, 880810, 880202, 880177, 879600, 879351, 878142, 877449, 876853, 875845, 875089, 874800, 874322, 874925, 874725, 872900, 872100, 871837, 870648, 869972, 869296, 869435, 868710, 868663, 868525, 868760, 868985, 868525, 868617, 868760, 868864, 869034, 868545, 868661, 868975, 868911, 869020, 869215, 870970, 870979, 870925, 871130, 870721, 870455, 870800, 870344, 870311, 870897, 870710, 870615, 869975, 869465, 869314, 869040, 868989, 868710, 868050, 867940, 867995, 867975, 867825, 867736, 867995, 867979, 867788, 868170, 867935, 867643, 867110, 867246, 867588, 866723, 866013, 865294, 864275, 864000, 863659, 861885, 861845, 862185, 862398, 862694, 862533, 860925, 860842, 861160, 861300, 861210, 860973, 860337, 858511, 858205, 858072, 857453, 857320, 857265, 856650, 856355, 856182, 855610, 854744, 854474, 852864, 852620, 852647, 851685, 851354, 850753, 850470, 850320, 850069, 850023, 850741, 851509, 852157, 852073, 850451, 850375, 850111, 849805, 848375, 848150, 847545, 847281, 845980, 845694, 844840, 842895, 842098, 841825, 841604, 841170, 840895, 839825, 839769, 840798, 840745, 840580, 840305, 839320, 839165, 839016, 838200, 836342, 836100, 835840, 834252, 833175, 833017, 832785, 832719, 832433, 831189, 830330, 829565, 829550, 829422, 828638, 827810, 827523, 826955, 826653, 825785, 825487, 824587, 822700, 822339, 821748, 821660, 821459, 820815, 820470, 819281, 818215, 817851, 816405, 815735, 815844, 815501, 814830, 814502, 814175, 813785, 811510, 811202, 810503, 809935, 808612, 808305, 807965, 807085, 806759, 806450, 805480, 804700, 804426, 803230, 802864, 801150, 2092615, 2093190, 2095430, 2095795, 2096112, 2097190, 2098505, 2098838, 2100360, 2100395, 2100950, 2101330, 2102850, 2102788, 2102425, 2102785, 2103487, 2103892, 2104515, 2104359, 2102570, 2102760, 2104075, 2105023, 2105295, 2105555, 2105875, 2107116, 2107148, 2106760, 2106708, 2106990, 2107029, 2107335, 2108399, 2109486, 2109775, 2110010, 2110344, 2111056, 2113550, 2114260, 2114370, 2114751, 2116197, 2116940, 2117563, 2117860, 2119206, 2120474, 2120775, 2121475, 2121809, 2122743, 2123110, 2124100, 2124890, 2125160, 2125377, 2125830, 2126745, 2127075, 2128290, 2128585, 2129209, 2129525, 2131460, 2131793, 2132230, 2132742, 2133100, 2133655, 2134028, 2135142, 2136382, 2137110, 2138174, 2138520, 2139015, 2139590, 2140547, 2142011, 2142380, 2142716, 2143599, 2144456, 2144790, 2147049, 2147420, 2148815, 2150425, 2150782, 2152285, 2152660, 2153400, 2155103, 2155696, 2155980, 2156241, 2157025, 2159030, 2160314, 2160635, 2161408, 2161795, 2162102, 2163021, 2163470, 2163785, 2165380, 2165700, 2167362, 2167695, 2167835, 2169845, 2170117, 2170395, 2171035, 2171335, 2171435, 2171593, 2170924, 2170498, 2170754, 2171611, 2171760, 2171217, 2171380, 2170485, 2170210, 2168729, 2168520, 2168719, 2168735, 2170150, 2169640, 2170568, 2170640, 2171442, 2171075, 2172530, 2171719, 2171534, 2171205, 2170948, 2169812, 2169145, 2168648, 2167568, 2167190, 2167185, 2166355, 2166075, 2166394, 2166285, 2165476, 2165330, 2165160, 2165065, 2163119, 2162490, 2161655, 2161531, 2161519, 2161005, 2159908, 2159915, 2158958, 2158780, 2158494, 2158105, 2157807, 2157040, 2156696, 2155806, 2155445, 2155097, 2154750, 2153047, 2152675, 2151171, 2150780, 2150680, 2150149, 2150070, 2153840, 2154400, 2151187, 2150820, 2151192, 2151708, 2151840, 2151081, 2150965, 2150606, 2148479, 2148155, 2146631, 2145603, 2145394, 2145800, 2146033, 2145523, 2145410, 2146002, 2147688, 2148035, 2148733, 2148841, 2148775, 2149407, 2150710, 2150922, 2151180, 2152638, 2153465, 2153815, 2154550, 2153948, 2153605, 2152546, 2152522, 2151954, 2151680, 2151135, 2150917, 2149401, 2147845, 2145955, 2145690, 2145842, 2146060, 2146529, 2146675, 2146311, 2146245, 2146162, 2146145, 2146227, 2147047, 2147009, 2146655, 2148801, 2149145, 2148900, 2149908, 2151749, 2152270, 2151866, 2151825, 2152160, 2156500, 2157904, 2159490, 2160898, 2163565, 2164270, 2164140, 2163415, 2162493, 2162099, 2160395, 2160083, 2159465, 2158743, 2156340, 2155944, 2155185, 2153375, 2152677, 2152295, 2150917, 2149984, 2149695, 2147869, 2147615, 2147405, 2146272, 2145258, 2144570, 2145445, 2145356, 2144792, 2145110, 2143618, 2143730, 2143963, 2143997, 2143495, 2143280, 2142419, 2142149, 2141782, 2141448, 2140052, 2139555, 2139435, 2138192, 2137078, 2136753, 2134940, 2133632, 2132631, 2132205, 2132001, 2131755, 2131650, 2131962, 2130970, 2130628, 2130520, 2129464, 2128114, 2126982, 2126720, 2126810, 2127080, 2128513, 2128829, 2128495, 2127050, 2125650, 2125275, 2123780, 2123569, 2123070, 2121885, 2121591, 2120685, 2120349, 2119679, 2118760, 2118458, 2117935, 2117610, 2116295, 2115554, 2114005, 2113621, 2112855, 2111817, 2110485, 2110250, 2110165, 2109573, 2108843, 2107500, 2106390, 2106018, 2103410, 2101545, 2101232, 2099875, 2099512, 2098080, 2097320, 2096964, 2094425, 2094056, 2092595, 2092277, 2091670, 2091277, 2090131, 2088645, 2088380, 2088330, 2088110, 2087753, 2086334, 2085607, 2084278, 2084187, 2084575, 2084465, 2084328, 2084450, 2084109, 2083150, 2082820, 2082092, 2081333, 2079632, 2078870, 2078155, 2077808, 2077080, 2076787, 2076386, 2076155, 2075110, 2074811, 2074591, 2073960, 2073584, 2073221, 2073460, 2073797, 2074780, 2075941, 2077758, 2078730, 2079020, 2079386, 2079920, 2080021, 2079717, 2079917, 2080840, 2081131, 2082613, 2082507, 2081230, 2081554, 2082291, 2083206, 2083940, 2084174, 2084350, 2084500, 2084810, 2086215, 2086449, 2087620, 2087856, 2088564, 2091270, 2091898, 2092105, 2092424, 2093065, 2093318, 2094355, 2096198, 2096536, 2096910, 2097185, 2097470, 2098117, 2098880, 2099191, 2099825, 2100899, 2101165, 2101453, 2102554, 2102260, 2102031, 2101525, 2101162, 2100482, 2099710, 2098550, 2095140, 2094745, 2094389, 2093577, 2091920, 2091724, 2091325, 2091135, 2090510, 2090257, 2089517, 2089735, 2089692, 2090044, 2090765, 2091109, 2092110, 2092273, 2093148, 2093260, 2093406, 2093980, 2093715, 2092629, 2092497, 2094120, 2094025, 2093925, 2093907, 2093620, 2093793, 2093796, 2093390, 2093210, 2093030, 2092976, 2093490, 2093370, 2093210, 2092960, 2093105, 2093280, 2093210, 2093269, 2092615</code></pre>
</div>
</div>
<p>But if we cast this object to a <a href="https://tibble.tidyverse.org/">tibble</a>, we get an error:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">try</span>(tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(geodaData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>guerry))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Error : All columns in a tibble must be vectors.
✖ Column `geometry` is a `sfc_MULTIPOLYGON/sfc` object.</code></pre>
</div>
</div>
<p>This is <a href="https://github.com/r-lib/pillar/issues/552">a known bug</a> that packages need to work around themselves, and can be a bit of a pain to figure out solutions for. It tends to crop up when data.frame objects are implicitly casted to tibbles, for instance by <a href="https://dplyr.tidyverse.org/">dplyr</a> functions:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">try</span>(dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(geodaData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>guerry, CODE_DE))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Error : All columns in a tibble must be vectors.
✖ Column `geometry` is a `sfc_MULTIPOLYGON/sfc` object.</code></pre>
</div>
</div>
<p>But it can happen without casting to tibbles as well, for instance when trying to use <code>dplyr::arrange()</code>:<sup>1</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">try</span>(dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(geodaData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>guerry))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Error in vec_size() : 
  `x` must be a vector, not a &lt;sfc_MULTIPOLYGON/sfc&gt; object.</code></pre>
</div>
</div>
<p>Any code that calls <code>vctrs::vec_size()</code> will wind up erroring in this situation, which includes a good amount of tidyverse code.</p>
<p>A final challenge with including sf objects in R packages is that some projected CRS include non-ASCII characters in their WKT, <a href="https://github.com/r-spatial/sf/issues/1341">causing an aggravating warning</a> in R CMD check: <code>Warning: found non-ASCII string</code>. Your package won’t be accepted to CRAN with that warning, and as such, this needs to be fixed.<sup>2</sup></p>
<p>All three of these problems can be solved by the same approach, which I think is the best way to include sf objects in packages.</p>
</section>
<section id="the-solution" class="level2">
<h2 class="anchored" data-anchor-id="the-solution">The Solution</h2>
<p>Rather than including sf objects directly as package data in the normal manner, you should store the sf object as internal data and then load it via <code>delayedAssign</code>. This is an approach inspired by <a href="https://allisonhorst.github.io/palmerpenguins/">palmerpenguins</a> (<a href="https://github.com/allisonhorst/palmerpenguins/pull/36">here’s the relevant PR</a>), now in use in the <a href="spatialsample.tidymodels.org/">spatialsample</a> and <a href="https://mikemahoney218.github.io/waywiser/">waywiser</a> packages I maintain.</p>
<p>To store <a href="https://r-pkgs.org/data.html#sec-data-sysdata">your sf objects as internal data</a>, save them into a file named <code>R/sysdata.rda</code>. If you use <code>usethis::use_data()</code>, set the argument <code>internal = TRUE</code> to make this happen automatically. This solves the third problem for us; something about not exporting the sf object directly means that R CMD check no longer checks the CRS for non-ASCII characters, and the warning is no longer triggered.</p>
<p>You now need to somehow export this data, in order to let users actually use your newly-internal sf object. To do so, we’re going to write a file in the <code>data/</code> folder, named something like <code>your_data.R</code>, taking advantage of the <code>delayedAssign()</code> function like so:<sup>3</sup></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">delayedAssign</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_data"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local</span>({</span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sf"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-3">  your_package<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span>your_data</span>
<span id="cb10-4">}))</span></code></pre></div>
<p>This function makes it so that, whenever a user calls your data object for the first time in a session, you quietly load the sf package before assigning your internal data to the exported object. <a href="https://adv-r.hadley.nz/environments.html#search-path">This doesn’t <em>attach</em> the sf package</a>, meaning that your users won’t accidentally have the entire sf package dumped into their search path. Loading the sf package, however, is enough to fix both problems 1 and 2; your data will now play happily with tibbles, dplyr functions, and the broader R ecosystem.</p>
<p>You then need to <a href="https://r-pkgs.org/data.html#sec-documenting-data">document your data</a> in a file under <code>R/</code> the same way you always would.</p>
<p>And that’s it! Your package will now be more user-friendly and CRAN-acceptable. I’ve been using this approach for months with no side effects<sup>4</sup> and am planning to keep using it going forward.</p>
</section>
<section id="update" class="level2">
<h2 class="anchored" data-anchor-id="update">Update</h2>
<p><a href="https://fosstodon.org/@edzer@mastodon.social/109439029871771876">Edzer points out on Mastodon</a> that, in order to <a href="https://www.tidyverse.org/blog/2022/09/playing-on-the-same-team-as-your-dependecy/">play nicely with potential changes in sf</a>, you can <a href="https://r-pkgs.org/data.html#sec-data-extdata">include your data as an external file</a> instead. The steps here are broadly similar: save your sf object to a file in <code>inst/extdata</code>, and write a file in <code>R/</code> that looks something like this:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">delayedAssign</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_data"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">local</span>({</span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">try</span>(</span>
<span id="cb11-3">    sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_sf</span>(</span>
<span id="cb11-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"extdata/your_data.gpkg"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_package"</span>)</span>
<span id="cb11-5">    ),</span>
<span id="cb11-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">silent =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-7">  )</span>
<span id="cb11-8">}))</span></code></pre></div>
<p>We need to wrap the call in <code>try()</code> in order to make this approach work with tooling like <code>devtools::document()</code>, which will otherwise complain about trying to read a file that isn’t there.</p>
<p>In my tests, this was enough to fix issues 1 and 2; calling <code>sf::read_sf()</code> will load the sf package and should fix any interoperability issues. However, this approach doesn’t necessarily fix the non-ASCII character WARNING given off by R CMD check.</p>
<p>Of course, you can also include external files in <code>inst/</code> and then have your users read it themselves using <code>system.file()</code>, like <a href="https://r-spatial.github.io/sf/articles/sf1.html">the sf vignettes do themselves</a>!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>This section was edited on 2022-12-01; thanks to <a href="https://fosstodon.org/@geospacedman@mastodon.social/109439358830660533">Barry Rowlingson</a> for pointing out a mistake in the original draft.↩︎</p></li>
<li id="fn2"><p>Theoretically this <em>should</em> be fixed by setting <code>Encoding: UTF8</code> in your package DESCRIPTION, but <a href="https://github.com/r-spatial/sf/issues/1341#issuecomment-609645514">that rarely seems to help</a>.↩︎</p></li>
<li id="fn3"><p>Just in case it’s not clear: make sure to change <code>your_data</code> and <code>your_package</code> below to, well, the name of your data and the name of your package.↩︎</p></li>
<li id="fn4"><p>Knock on wood for me, I’ve tempted the gods.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Tutorials</category>
  <category>Spatial</category>
  <category>Data science</category>
  <guid>https://mm218.dev/posts/2022-12-01-sf-in-packages/index.html</guid>
  <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-12-01-sf-in-packages/sf.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Fine-resolution landscape-scale biomass mapping using a spatiotemporal patchwork of LiDAR coverages</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-11-07-agb/index.html</link>
  <description><![CDATA[ 




<p>I’m part of the team behind a new open-access article, “<a href="https://doi.org/10.1016/j.jag.2022.103059">Fine-resolution landscape-scale biomass mapping using a spatiotemporal patchwork of LiDAR coverages</a>”, newly out in International Journal of Applied Earth Observation and Geoinformation.<sup>1</sup> The paper was lead by my incredible coworker <a href="https://www.lucaskjohnson.com/">Lucas Johnson</a>, and is his first first-author paper – and what a powerful way to enter the field!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-11-07-agb/map.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">A map, showing the AGB prediction surfaces reflecting a temporal patchwork of conditions across the 17 component LiDAR coverages in the GPO-LiDAR area with New York State.</figcaption>
</figure>
</div>
<p>This paper is, plain and simple, the first public documentation we’ve released about how we’re helping New York State track how much carbon is stored in its forests statewide. Using a patchwork of LiDAR collections and FIA field measurements, we use a stacked ensemble (a linear regression combining a random forest, LightGBM-based gradient boosting machine, and support vector machine) to estimate forest aboveground biomass (all the woody non-root bits of a tree, which<sup>2</sup> are made out of carbon pulled out of the atmosphere) at a 30 meter resolution across New York State. This data is already being used to identify high-priority areas across the state where the most carbon is currently stored and where a- and re-forestation might have the greatest impacts in the future.</p>
<p>This is very exciting in and of itself, but I’m also extremely proud of the effort we put into validating our predictions, to make sure we’re speaking only with exactly as much confidence as we deserve. We use the <a href="https://doi.org/10.1111/2041-210X.13650">area of applicability from Meyer and Pebesma (2021)</a> to mask out areas where LiDAR data is too “different” from what our models were trained with, in order to make sure we aren’t accidentally extrapolating into areas our models aren’t prepared to handle. We implement the <a href="https://doi.org/10.1016/j.rse.2010.05.010">Riemann et al.&nbsp;(2010) multi-scale assessment procedure</a> to make sure our predictions are useful when aggregated to other scales. We look at our error spatially and as a function of FIA-measured AGB to try and fully characterize where our models succeed and where they need a bit more work. The goal is for our maps to be useful, and not just <a href="https://doi.org/10.1016/j.rse.2010.10.013">“pretty pictures”</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-11-07-agb/validation.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Plot-to-pixel residuals summarized at units spaced 50 km apart. Hexagons with only one reference plot were removed. (a) RMSE Mg ha−1; (b) MAE Mg ha−1; (c) ME Mg ha−1; (d) Mean FIA AGB value Mg ha−1; (e) Hex-level % RMSE as a function of mean reference value; (f) Hex-level % MAE as a function of mean reference value; (g) Hex-level ME as a function of mean reference value. 1 observation excluded from (e) and (f) where 0 FIA AGB makes % RMSE impossible to compute. Trend lines in (e) and (f) produced using logarithmic regression. Trend line in g produced using least-squares regression.</figcaption>
</figure>
</div>
<p>In addition to <a href="https://www.lucaskjohnson.com/">Lucas</a> (who, I cannot stress enough, did a <em>fantastic</em> job leading this paper), I was lucky enough to get to work with <a href="https://www.esf.edu/faculty/bevilacqua/">Eddie Bevilacqua</a>, <a href="https://www.esf.edu/faculty/stehman/">Steve Stehman</a>, <a href="https://www.fs.usda.gov/research/about/people/gmdomke">Grant Domke</a>, and <a href="https://www.esf.edu/faculty/beier/">Colin Beier</a> on this one. It’s a great team and a great project, and I’m very excited for the things we’ve got coming down the pipeline next.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I’ve needed to google this journal name every time I go to post about the article. I’ve read papers from this journal before and generally like their output, but for some reason the acronym IJAEOG just refuses to stick in my mind.↩︎</p></li>
<li id="fn2"><p>To simplify quite a bit.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>ecology</category>
  <category>papers</category>
  <category>remote sensing</category>
  <category>machine learning</category>
  <category>earth science</category>
  <category>AGB</category>
  <guid>https://mm218.dev/posts/2022-11-07-agb/index.html</guid>
  <pubDate>Mon, 07 Nov 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-11-07-agb/map.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How rsample keeps memory usage low</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-10-04-rsample/index.html</link>
  <description><![CDATA[ 




<p>A few months back, I wrote two comments on <a href="https://github.com/tidymodels/rsample/issues/335">a GitHub issue</a> explaining a bit of how <a href="https://rsample.tidymodels.org/">rsample</a> works under the hood. Specifically, a user asked how rsample keeps the total amount of memory that its resamples use relatively low. I’ve sent this GitHub issue to a few people since then, so it felt like it might be useful enough to turn the issue into a blog.<sup>1</sup></p>
<section id="whats-an-rsample" class="level2">
<h2 class="anchored" data-anchor-id="whats-an-rsample">What’s an rsample?</h2>
<p>In case you’ve never used it, <a href="https://rsample.tidymodels.org/">rsample</a> is an R package for data resampling – if you need bootstrap resampling, V-fold cross-validation, permutation sampling, and more, rsample is meant for you.<sup>2</sup> The majority of these rsample functions return <code>rset</code> objects, which are just jazzed-up tibbles:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rsample)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(mlbench)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(LetterRecognition)</span>
<span id="cb1-5"></span>
<span id="cb1-6">boots <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstraps</span>(LetterRecognition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-7">boots</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># Bootstrap sampling 
# A tibble: 2 × 2
  splits               id        
  &lt;list&gt;               &lt;chr&gt;     
1 &lt;split [20000/7403]&gt; Bootstrap1
2 &lt;split [20000/7375]&gt; Bootstrap2</code></pre>
</div>
</div>
<p>Each of our individual resamples is stored as an <code>rsplit</code> object, each of which takes up a row in the <code>splits</code> column. Printing these objects tells us how many rows are in our analysis and assessment sets,<sup>3</sup> but hides most of the actual structure of the <code>rsplit</code> object. If we use <code>str()</code> instead, we can see that there are three named elements in each <code>rsplit</code>: <code>data</code>, our original data frame; <code>in_id</code>, which has the indices for which observations are going to be held “in” our analysis set, and <code>out_id</code>, which sometimes<sup>4</sup> has the indices for which observations are going to be held “out” to make up our assessment set, but here is <code>NA</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">boots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>splits[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;Analysis/Assess/Total&gt;
&lt;20000/7403/20000&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(</span>
<span id="cb5-2">  boots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>splits[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb5-3">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 4
 $ data  :'data.frame': 20000 obs. of  17 variables:
  ..$ lettr: Factor w/ 26 levels "A","B","C","D",..: 20 9 4 14 7 19 2 1 10 13 ...
  ..$ x.box: num [1:20000] 2 5 4 7 2 4 4 1 2 11 ...
  ..$ y.box: num [1:20000] 8 12 11 11 1 11 2 1 2 15 ...
  ..$ width: num [1:20000] 3 3 6 6 3 5 5 3 4 13 ...
  ..$ high : num [1:20000] 5 7 8 6 1 8 4 2 4 9 ...
  ..$ onpix: num [1:20000] 1 2 6 3 1 3 4 1 2 7 ...
  ..$ x.bar: num [1:20000] 8 10 10 5 8 8 8 8 10 13 ...
  ..$ y.bar: num [1:20000] 13 5 6 9 6 8 7 2 6 2 ...
  ..$ x2bar: num [1:20000] 0 5 2 4 6 6 6 2 2 6 ...
  ..$ y2bar: num [1:20000] 6 4 6 6 6 9 6 2 6 2 ...
  ..$ xybar: num [1:20000] 6 13 10 4 6 5 7 8 12 12 ...
  ..$ x2ybr: num [1:20000] 10 3 3 4 5 6 6 2 4 1 ...
  ..$ xy2br: num [1:20000] 8 9 7 10 9 6 6 8 8 9 ...
  ..$ x.ege: num [1:20000] 0 2 3 6 1 0 2 1 1 8 ...
  ..$ xegvy: num [1:20000] 8 8 7 10 7 8 8 6 6 1 ...
  ..$ y.ege: num [1:20000] 0 4 3 2 5 9 7 2 1 1 ...
  ..$ yegvx: num [1:20000] 8 10 9 8 10 7 10 7 7 8 ...
 $ in_id : int [1:20000] 18847 18895 2986 1842 3371 11638 4761 6746 16128 2757 ...
 $ out_id: logi NA
 $ id    : tibble [1 × 1] (S3: tbl_df/tbl/data.frame)
  ..$ id: chr "Bootstrap1"
 - attr(*, "class")= chr [1:2] "boot_split" "rsplit"</code></pre>
</div>
</div>
</section>
<section id="the-mystery-of-the-missing-mbs" class="level2">
<h2 class="anchored" data-anchor-id="the-mystery-of-the-missing-mbs">The mystery of the missing MBs</h2>
<p>So, just looking at this structure, it seems like each <code>rsplit</code> contains a complete copy of our original data. But somehow, to borrow the example from the rsample README, creating a 50-times bootstrap sample doesn’t require 50 times as much memory, but instead about 3x:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_size</span>(LetterRecognition)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2.64 MB</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35222</span>)</span>
<span id="cb9-2">boots <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstraps</span>(LetterRecognition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb9-3">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_size</span>(boots)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>6.69 MB</code></pre>
</div>
</div>
<p>Even that top-line result is a little misleading, though, because rsample isn’t copying the data to actually create <code>boots</code>. If we look at the object sizes for both the original data and the resamples together, we can see that <code>boots</code> is only contributing ~4 MB:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_size</span>(LetterRecognition, boots)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>6.69 MB</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_sizes</span>(LetterRecognition, boots)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>* 2.64 MB
* 4.04 MB</code></pre>
</div>
</div>
<p>So: what? How?</p>
</section>
<section id="copying-modifying" class="level2">
<h2 class="anchored" data-anchor-id="copying-modifying">Copying; modifying</h2>
<p>Well, R uses what’s known as <a href="https://adv-r.hadley.nz/names-values.html">copy-on-modify</a> semantics. That means that, when you assign the same data to multiple variables, each of those variables will actually point at the same address in RAM:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">LetterRecognition2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> LetterRecognition</span>
<span id="cb15-2"></span>
<span id="cb15-3">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(LetterRecognition)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "0x5573114c93e0"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(LetterRecognition2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "0x5573114c93e0"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(</span>
<span id="cb19-2">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(LetterRecognition),</span>
<span id="cb19-3">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(LetterRecognition2)</span>
<span id="cb19-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>This also means that <code>LetterRecognition2</code> takes up literally 0 space in your RAM:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_size</span>(LetterRecognition, LetterRecognition2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2.64 MB</code></pre>
</div>
</div>
<p>And that will stay true up until we modify either of these objects. No copy is made, no additional RAM gets used, until one of the objects is modified.</p>
<p>That also means that, right now, <code>LetterRecognition2</code> is another name for the data stored in each of our <code>rsplits</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(</span>
<span id="cb23-2">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(boots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>splits[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data),</span>
<span id="cb23-3">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(LetterRecognition2)</span>
<span id="cb23-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>And if we get rid of <code>LetterRecognition</code>, which both <code>LetterRecognition2</code> and our bootstraps are based off of, those objects will <em>still</em> point at the same address,<sup>5</sup> and our <code>data</code> slot in <code>boots</code> still won’t take up additional space:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(LetterRecognition)</span>
<span id="cb25-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gc</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>          used (Mb) gc trigger (Mb) max used (Mb)
Ncells  849739 45.4    1358681 72.6  1358681 72.6
Vcells 2362850 18.1    8388608 64.0  8384745 64.0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(</span>
<span id="cb27-2">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(boots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>splits[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data),</span>
<span id="cb27-3">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(LetterRecognition2)</span>
<span id="cb27-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_sizes</span>(LetterRecognition2, boots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>splits[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>* 2.64 MB
*     0 B</code></pre>
</div>
</div>
<p>So how does rsample keep its objects so small? By not making extra copies of your data where it doesn’t have to. This is how the entire <code>boots</code> table winds up only adding ~1.5x the space of the original data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_sizes</span>(LetterRecognition2, boots)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>* 2.64 MB
* 4.04 MB</code></pre>
</div>
</div>
<p>And that’s pretty close to as small as this object could get – that’s just the amount of space required to store the indices (in this case, 20,000 indices per repeat, 50 repeats):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_size</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample.int</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>4.00 MB</code></pre>
</div>
</div>
<p>(The 42kb difference is the attributes we’ve attached to each split – things like its class and ID and so on – but that’s not going to be enough memory to be relevant for most applications.)</p>
<p>This is also, as it happens, why <code>out_id</code> is set <code>NA</code> in our bootstrap resamples.<sup>6</sup> Because you can figure out which observations we want to “hold out” for the assessment set based on which ones we’re keeping “in” for analysis, rsample doesn’t store those indices for most of its resampling methods.<sup>7</sup></p>
<p>And one last thought: if you modified <code>LetterRecognition2</code>, <em>then</em> the data in our splits would no longer point at the same address space as the original table. That’s entirely on purpose and desirable, because once you start messing with your original data, your resampling indices are no longer guaranteed to correspond to the original table you used to create them.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">LetterRecognition2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb35-2"></span>
<span id="cb35-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(</span>
<span id="cb35-4">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(boots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>splits[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data),</span>
<span id="cb35-5">  lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_addr</span>(LetterRecognition2)</span>
<span id="cb35-6">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
<p>But, as best as possible, rsample will keep the <code>rset</code> small.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">lobstr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obj_size</span>(boots)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>6.69 MB</code></pre>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Plus, I’ve been writing my candidacy exam for two weeks now, and need an excuse to look at anything else for an hour.↩︎</p></li>
<li id="fn2"><p>For what it’s worth, while I’m an author on rsample, I didn’t write any of the rsample features mentioned in this blog post. I believe the rsample-specific details were all written by Max Kuhn. All the copy-on-modify semantics stuff, however, is just part of R and written over the past few decades by R Core.↩︎</p></li>
<li id="fn3"><p>“Analysis” maps to “training” while “assessment” maps to “testing”. “Analysis” and “assessment” are purposefully used to <a href="https://www.tmwr.org/resampling.html#resampling-methods">avoid confusion over <em>which</em> training and test set are being used</a>.↩︎</p></li>
<li id="fn4"><p>We’ll come back to this.↩︎</p></li>
<li id="fn5"><p>As of <a href="https://stat.ethz.ch/pipermail/r-announce/2020/000653.html">R 4.0</a>, as I understand it.↩︎</p></li>
<li id="fn6"><p>Told ya we’d come back to it.↩︎</p></li>
<li id="fn7"><p>Now the package I maintain, spatialsample, <em>does</em> include <code>out_id</code> on its objects relatively often. Most of the time, this is because the objects were created with a non <code>NULL</code> buffer, and so our hold out set isn’t simply “all of the data that’s not in”; sometimes it’s because I initially <em>always</em> included <code>out_id</code>, and haven’t fixed my code to be more efficient yet. PRs welcome!↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>rsample</category>
  <category>tidymodels</category>
  <guid>https://mm218.dev/posts/2022-10-04-rsample/index.html</guid>
  <pubDate>Tue, 04 Oct 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-10-04-rsample/splash.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>I know what I did last summer</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-08-15-last-summer/index.html</link>
  <description><![CDATA[ 




<p>I’m wrapping up three months as an open-source intern with <a href="https://posit.co/">Posit</a> (née <a href="https://www.rstudio.com/">RStudio</a>). I wanted to write a small post talking a bit about what it was like and what we got done in that timespan. So, well, this post<sup>1</sup>.</p>
<section id="the-job-itself" class="level1">
<h1>The Job Itself</h1>
<p>Let’s not bury the lede: this internship was an absolute blast.</p>
<p>I could not have asked to work with a better group than the tidymodels team, who are all consistently fantastic people. It’s rare to find a group this consistently brilliant, and more importantly also this consistently friendly, inclusive, and welcoming. Working directly with Hannah Frick and Julia Silge was absolutely incredible; I highly recommend it for anyone if the opportunity comes up.</p>
<p>The internship started off with an in-person work week (at the <em>beautiful</em> Boston office<sup>2</sup>), and then more or less wrapped up with the last ever<sup>3</sup> RStudio::conf() (perhaps the best in-person conference experience I’ve had). This was a fantastic way to structure what was otherwise a fully remote position, and I’m extremely appreciative of getting to work with the team both in-person and remotely over the span of the internship.</p>
<p>It was a great few months, I learned a lot – about programming and design, sure, but also about technical communication, working in the open, interacting with an open source community, and more.</p>
<p>And we did some really cool things! Speaking of which…</p>
</section>
<section id="the-things-we-did" class="level1">
<h1>The Things We Did</h1>
<p>Alright, time for some pretty blatant bragging. Sorry. But we did some really, really cool stuff the past few months.</p>
<section id="spatialsample" class="level2">
<h2 class="anchored" data-anchor-id="spatialsample">spatialsample</h2>
<p>The main thrust (and originally, the entire scope) of the internship was writing the <a href="https://spatialsample.tidymodels.org/">spatialsample</a> package for spatial cross-validation. While not an entirely new package (the first version hit CRAN in 2021), by the end of June we had added support for:</p>
<ul>
<li>sf objects (and more correct distance calculations with geographic coordinates)</li>
<li>exclusion buffers around assessment folds</li>
<li>inclusion radii around assessment folds</li>
<li>spatial clustering with more than just k-means clustering</li>
<li>spatially buffered V-fold CV</li>
<li>leave-location-out CV</li>
<li>spatial block CV</li>
<li>automatic plotting</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-08-15-last-summer/autoplot.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">The results of calling <code>autoplot()</code> on a spatial clustering CV object, for the city of Boston.</figcaption>
</figure>
</div>
<p>That meant a pretty huge update to the package, and that version was released <a href="https://www.tidyverse.org/blog/2022/06/spatialsample-0-2-0/">on CRAN as version 0.2.0</a>. A small patch to speed up buffering, work better with simulated data, and make me the official package maintainer as Julia moves to focus more on ModelOps just hit CRAN last Friday.</p>
<p>I also wrote <a href="https://spatialsample.tidymodels.org/articles/buffering.html">a package vignette</a> on spatial buffering, and <a href="https://www.tidymodels.org/learn/work/multi-scale/">an article for tidymodels.org</a> on how to use spatialsample for multi-scale model assessment.</p>
<p>We chose to not release spatialsample 1.0.0 as part of the broader tidymodels 1.0.0 release because the package is still very young – most of its features have only been on CRAN for a month or so, and we want more feedback on what else the package <em>should</em> do and any areas that people think we got wrong. However, I feel really good about where the package is right now, and am really excited to see people use it (and to use it in my own work going forward).</p>
</section>
<section id="rsample" class="level2">
<h2 class="anchored" data-anchor-id="rsample">rsample</h2>
<p>After the spatialsample release, I had the opportunity to start poking around the open issues on the <a href="https://rsample.tidymodels.org/">rsample</a> package. As rsample is a much more established package, it was important to focus on only the changes we could make without breaking people’s code; with that said, we were able to add a few highly-requested features:</p>
<ul>
<li>Improved support for grouped resampling, adding functions for grouped Monte Carlo CV, grouped bootstrap resampling, creating validation sets with groups, and creating initial training/testing splits with groups. This was the most-requested feature still missing from rsample, and it’s a personal point of pride that I was able to implement it (in a way that doesn’t seem awful to maintain).</li>
<li>Added <code>reverse_splits()</code> to “swap” the analysis and assessment sets of an rsplit or rset object.</li>
<li>Added <code>reshuffle_rset()</code> to re-generate an rset, using all the same parameters that were used to create it the first time (but potentially, a different random seed). This was the <em>oldest</em> open issue on rsample, and even though it wasn’t in particularly high demand I was very happy to close both the oldest and most requested issues on the package in a single release.</li>
<li>Standardized the classes and attributes attached to the objects returned by rsample functions.</li>
</ul>
<p>I also added a new <a href="https://rsample.tidymodels.org/dev/articles/Common_Patterns.html">overview vignette</a> covering some of the most commonly used functions in the package, which I think will be a good first point of entry for a lot of users.</p>
<p>All of this hit CRAN as <a href="https://cran.r-project.org/package=rsample">rsample 1.1.0</a> on Monday. I’m particularly excited for the grouped resampling functions to hit CRAN, since I think those will solve a very common use-case for a lot of people working with repeated measures data.</p>
</section>
<section id="waywiser" class="level2">
<h2 class="anchored" data-anchor-id="waywiser">waywiser</h2>
<p>On top of these resampling projects, I’ve also been noodling on a new package in my personal namespace, called <a href="https://mikemahoney218.github.io/waywiser/">waywiser</a>. This is a <a href="https://yardstick.tidymodels.org/">yardstick</a> extension package<sup>4</sup> focused on helping people assess spatial autocorrelation in model residuals.</p>
<p>Version 0.1.0 is inching along to CRAN at the moment, as I clean off a few last new package checks, and should be viewed as mostly experimental – I’m currently figuring out how I can get spatial information from inside of <code>tune::fit_resamples()</code>, and the default neighbor lists and weights matrices will probably be outsourced to <a href="https://sfdep.josiahparry.com/">sfdep</a> in the next version. But it exists!</p>
</section>
</section>
<section id="and-another-thing" class="level1">
<h1>And Another Thing</h1>
<p>I also did a few other (less RStudio related) things over the past few months:</p>
<ul>
<li>Made a <a href="https://github.com/mikemahoney218/quarto-arxiv">Quarto template</a> that imitates the <a href="https://pkgs.rstudio.com/rticles/">rticles</a> arXiv template.<sup>5</sup></li>
<li>Published <a href="https://doi.org/10.1080/15481603.2022.2103069">“Filtering ground noise from LiDAR returns produces inferior models of forest aboveground biomass in heterogenous landscapes”</a> in GIScience and Remote Sensing<sup>6</sup>.</li>
<li>Wrote a book chapter (“AI for Shrubland Identification and Mapping”) based on our <a href="https://arxiv.org/abs/2205.05047">shrubland research</a> for a forthcoming book on AI in Earth science. I’ll share more about that when it becomes more public.</li>
<li>Helped run the virtual side of the <a href="https://2022esipjulymeeting.sched.com/info">ESIP 2022 July Meeting</a>.
<ul>
<li>Also, helped organize a session entitled <a href="https://2022esipjulymeeting.sched.com/event/12etz/ai-for-all-people-how-to-make-ai-useful-for-earth-science-applications">“AI for All People: How to make AI useful for Earth science applications?”</a> at the ESIP July meeting.</li>
<li>Also also, gave a talk (<a href="https://mm218.dev/esip2022">“Building trust in AI outputs: Approaches from NY’s forest carbon monitoring program”</a>) at that session.</li>
</ul></li>
<li>Published a guest blog, <a href="https://www.esipfed.org/merge/student-fellow-blog/trust-in-machine-learning-guest-blog">“Building Trust in Machine Learning Outputs”</a>, on the ESIP website.</li>
<li>Gave a talk <a href="mm218.dev/user2022">“unifir: A unifying API for interacting with Unity from R”</a> at useR! 2022</li>
<li>Helped write a talk, <a href="https://mikemahoney218.github.io/2022-06-20_NAFEW_ground_filtering/slides.html#1">“Filtering ground noise from LiDAR returns produces inferior models of forest aboveground biomass”</a>, for the 2022 North American Forest Ecology Workshop. The talk was given by my fantastic colleague <a href="https://www.lucaskjohnson.com/">Lucas Johnson</a>.</li>
</ul>
<p>It’s been a very fun few months! Here’s to a good back third of the year.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>By the way, the title of this post is a joke about a 25 year old horror film: <a href="https://en.wikipedia.org/wiki/I_Know_What_You_Did_Last_Summer" class="uri">https://en.wikipedia.org/wiki/I_Know_What_You_Did_Last_Summer</a>↩︎</p></li>
<li id="fn2"><p>I was in the middle of moving to Boston at this point, and this work week took place towards the end of May. So I did a very funny thing where I drove from Syracuse to Boston, stayed in a beautiful hotel and went to the office every day, then drove back to Syracuse on Sunday… only to drive back to Boston two days later, move into a slightly less beautiful apartment, and never go to the office again.↩︎</p></li>
<li id="fn3"><p>I feel the need to clarify this is a joke; next year’s conference will be posit::conf() following the company’s name change. I had been joking that Hadley should kick off the announcement with “I do have some major news to share: this will be the last ever RStudio::conf()”, but that would probably have unleashed a purely irresponsible level of panic on Twitter.↩︎</p></li>
<li id="fn4"><p>And “waywiser” is an old name for a surveyor’s wheel, get it?↩︎</p></li>
<li id="fn5"><p>Which is not itself actually affiliated with arXiv at all, but rather <a href="https://github.com/kourgeorge/arxiv-style">a modified version of the NeurIPS template published by an individual researcher</a>. This is confusing; I decided that continuing to refer to it as an “arXiv template” was the least confusing option, but maybe the template should actually be called “preprint template” instead. It’s a very nice template, I like it a lot.↩︎</p></li>
<li id="fn6"><p>This link doesn’t work at the time of publication, but will <em>eventually</em> point to the article once the online version gets published.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Internship</category>
  <category>Quarto</category>
  <guid>https://mm218.dev/posts/2022-08-15-last-summer/index.html</guid>
  <pubDate>Fri, 12 Aug 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-08-15-last-summer/autoplot.png" medium="image" type="image/png" height="89" width="144"/>
</item>
<item>
  <title>Waywiser version 0.1.0 is now on CRAN!</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-08-11-waywiser-010-is-now-on-cran/index.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-08-11-waywiser-010-is-now-on-cran/waywiser.svg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">The waywiser hex sticker logo: a surveyor’s wheel over the word “waywiser”.</figcaption>
</figure>
</div>
<p>I’ve got a new package on CRAN! <a href="https://github.com/mikemahoney218/waywiser">waywiser</a> is a <a href="https://yardstick.tidymodels.org/">yardstick</a> extension package, providing functions for calculating spatial autocorrelation in model residuals in a way that cooperates with <em>most</em> (but not all, see below) of the tidymodels framework.</p>
<p>You can install it from CRAN:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"waywiser"</span>)</span></code></pre></div>
<p>Or the development version from <a href="https://github.com/mikemahoney218/waywiser">the package’s GitHub page</a>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("remotes")</span></span>
<span id="cb2-2">remotes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mikemahoney218/waywiser"</span>)</span></code></pre></div>
<p>You can use the package to estimate the spatial autocorrelation in residuals from any model – just provide spatial data, a vector of your “true” measurements, and a vector of your predicted values:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(waywiser)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data on morality crimes in France:</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(guerry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sfdep"</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ww_global_moran</span>(guerry, crime_pers, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(crime_pers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> literacy, guerry)))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: multiple methods tables found for 'area'</code></pre>
</div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[".metric"],"name":[1],"type":["chr"],"align":["left"]},{"label":[".estimator"],"name":[2],"type":["chr"],"align":["left"]},{"label":[".estimate"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["geometry"],"name":[4],"type":["s_MULTIP"],"align":["right"]}],"data":[{"1":"global_moran_i","2":"standard","3":"0.4115651506187433","4":"<s_MULTIP>"},{"1":"global_moran_pvalue","2":"standard","3":"0.0000000007234758","4":"<s_MULTIP>"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Under the hood, waywiser uses two functions (<code>ww_build_neighbors()</code> and <code>ww_build_weights()</code>) to build sensible, if likely non-ideal neighbor lists and spatial weights for your data. However, waywiser also lets you provide your own weights object to override the automatic calculations, or provide a function to calculate spatial weights based on the input data frame:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ww_build_weights</span>(guerry)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ww_global_moran</span>(</span>
<span id="cb5-4">  guerry, </span>
<span id="cb5-5">  crime_pers, </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(crime_pers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> literacy, guerry)),</span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wt =</span> weights</span>
<span id="cb5-8">)</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[".metric"],"name":[1],"type":["chr"],"align":["left"]},{"label":[".estimator"],"name":[2],"type":["chr"],"align":["left"]},{"label":[".estimate"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["geometry"],"name":[4],"type":["s_MULTIP"],"align":["right"]}],"data":[{"1":"global_moran_i","2":"standard","3":"0.4115651506187433","4":"<s_MULTIP>"},{"1":"global_moran_pvalue","2":"standard","3":"0.0000000007234758","4":"<s_MULTIP>"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Providing our own weights is necessary in order to use the <code>_vec()</code> versions of waywiser functions, which can be helpful for use in dplyr functions:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For the %&gt;% pipe and mutate:</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For visualization:</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb6-5"></span>
<span id="cb6-6">guerry <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(crime_pers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> literacy, .)),</span>
<span id="cb6-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.estimate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ww_local_moran_i_vec</span>(crime_pers, pred, weights)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-9">  sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> .estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient2</span>(</span>
<span id="cb6-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Moran's I"</span>, </span>
<span id="cb6-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#018571"</span>, </span>
<span id="cb6-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, </span>
<span id="cb6-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A6611A"</span></span>
<span id="cb6-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2022-08-11-waywiser-010-is-now-on-cran/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The package currently provides three main indices of autocorrelation – namely, Moran’s I and Geary’s C (both in global and local variants), as well as Getis-Ord’s G and G* (only the local variant).</p>
<p>This first version of the package integrates well with the rest of the tidymodels framework, <em>except</em> for the tune package (due to some difficulty in exposing either the original spatial data or the weights object to waywiser function while tuning a model). As a result, this version doesn’t let you include these functions as metrics to calculate inside of a call to <code>fit_resamples()</code>.</p>
<p>The full list of features and documentation can be found on <a href="https://mikemahoney218.github.io/waywiser/">the package’s website</a>. This has been a really fun package to work on; I’m excited to see it out in public, and will look forward to seeing if anyone else finds it useful!</p>



 ]]></description>
  <category>R</category>
  <category>waywiser</category>
  <category>tidymodels</category>
  <category>R packages</category>
  <category>geospatial data</category>
  <guid>https://mm218.dev/posts/2022-08-11-waywiser-010-is-now-on-cran/index.html</guid>
  <pubDate>Thu, 11 Aug 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Filtering ground noise from LiDAR returns produces inferior models of forest aboveground biomass in heterogenous landscapes</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-08-10-ground-filtering/index.html</link>
  <description><![CDATA[ 




<p>I have a new open-access article, “<a href="https://doi.org/10.1080/15481603.2022.2103069">Filtering ground noise from LiDAR returns produces inferior models of forest aboveground biomass in heterogenous landscapes</a>”, out today in GIScience &amp; Remote Sensing.</p>
<p>A very common pre-processing step, when deriving predictors for machine learning models from LiDAR point clouds, is to filter out “ground returns” based on a simple height threshold (where all returns below a certain level are removed). This practice comes from the early days of LiDAR, where researchers were attempting to measure the heights of individual trees using LiDAR returns, and makes a lot of sense in that context; if a return didn’t hit a tree, it probably can’t tell you much about how tall that tree is. But the process stuck around as we moved from modeling trees to forests, and knowing that a return <em>could</em> reach the ground – that it was able to find a gap in the canopy to reach the ground through – might reflect important characteristics of stand openness and therefore structure.</p>
<p>We show that filtering out “ground returns” from LiDAR based on height thresholds biases the derived predictors, and that bias can make predictive models of forest structure (in this case, AGB) worse. Particularly for models attempting to represent mixed landscape types, where gaps in the canopy are more common, filtering ground returns might remove valuable information and result in your model making worse predictions.</p>
<p>Or as the cliche machine might put it: As we move to focus on seeing forests more than trees, it’s time for us to see these data as signal, not just noise.</p>
<p>This was a very fun project, with an awesome team (Lucas Johnson, Eddie Bevilacqua, and Colin Beier). I’m very excited to see this one in press!</p>



 ]]></description>
  <category>ecology</category>
  <category>papers</category>
  <category>remote sensing</category>
  <category>machine learning</category>
  <guid>https://mm218.dev/posts/2022-08-10-ground-filtering/index.html</guid>
  <pubDate>Wed, 10 Aug 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-08-10-ground-filtering/distributions.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How to use Quarto for Parameterized Reporting</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-08-04-how-to-use-quarto-for-parameterized-reporting/index.html</link>
  <description><![CDATA[ 




<p>There’s a lot of conversations around about <a href="https://quarto.org/">Quarto</a> as a new system for technical communication. And that’s well deserved! Quarto, the successor to the R Markdown system, extends and improves upon its predecessor and produces downright beautiful documents (including this very website).</p>
<p>But as a recovering data analyst, the thing that I’m most excited about with Quarto is its ability to generate reports based on a document template and a handful of parameter values. A whole lot of my professional career has amounted to “report out the same handful of KPIs every day (or month, or quarter), aggregated to each relevant business unit and a handful of combined groups.” R Markdown’s parameterized reporting let me automate that boring stuff and spend my time on more fun (and higher impact) projects, and Quarto supports more or less the same style of templating. As such, this blog post walks through how you can use parameterization to automate your own reporting with Quarto.</p>
<section id="a-simple-script" class="level1">
<h1>A Simple Script</h1>
<p>Let’s say that you have a colleague who’s really into elevators (like, inexplicably interested in elevators). Because of this interest, and because you’re already working on a blog post showing off how cool Quarto is, you decide to use data about elevators in a small example script you’re working on to make them happy.</p>
<p>Well, luckily enough, my colleague Emil Hvitfeldt has <a href="https://github.com/EmilHvitfeldt/elevators/">a package on GitHub with data about elevators</a>. Let’s install it now:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("remotes")</span></span>
<span id="cb1-2">remotes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EmilHvitfeldt/elevators"</span>)</span></code></pre></div>
</div>
<p>This package includes a tibble, <code>elevators</code>, which contains quite a few observations of quite a few variables describing the elevators throughout New York City:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[""],"name":["_rn_"],"type":[""],"align":["left"]},{"label":["device_number"],"name":[1],"type":["chr"],"align":["left"]},{"label":["bin"],"name":[2],"type":["chr"],"align":["left"]},{"label":["tax_block"],"name":[3],"type":["chr"],"align":["left"]},{"label":["tax_lot"],"name":[4],"type":["chr"],"align":["left"]},{"label":["house_number"],"name":[5],"type":["chr"],"align":["left"]},{"label":["street_name"],"name":[6],"type":["chr"],"align":["left"]},{"label":["zip_code"],"name":[7],"type":["chr"],"align":["left"]},{"label":["borough"],"name":[8],"type":["fct"],"align":["left"]},{"label":["device_type"],"name":[9],"type":["chr"],"align":["left"]},{"label":["lastper_insp_date"],"name":[10],"type":["date"],"align":["right"]},{"label":["approval_date"],"name":[11],"type":["date"],"align":["right"]},{"label":["manufacturer"],"name":[12],"type":["chr"],"align":["left"]},{"label":["travel_distance"],"name":[13],"type":["chr"],"align":["left"]},{"label":["speed_fpm"],"name":[14],"type":["dbl"],"align":["right"]},{"label":["capacity_lbs"],"name":[15],"type":["dbl"],"align":["right"]},{"label":["car_buffer_type"],"name":[16],"type":["chr"],"align":["left"]},{"label":["governor_type"],"name":[17],"type":["chr"],"align":["left"]},{"label":["machine_type"],"name":[18],"type":["chr"],"align":["left"]},{"label":["safety_type"],"name":[19],"type":["chr"],"align":["left"]},{"label":["mode_operation"],"name":[20],"type":["chr"],"align":["left"]},{"label":["floor_from"],"name":[21],"type":["chr"],"align":["left"]},{"label":["floor_to"],"name":[22],"type":["chr"],"align":["left"]},{"label":["latitude"],"name":[23],"type":["dbl"],"align":["right"]},{"label":["longitude"],"name":[24],"type":["dbl"],"align":["right"]},{"label":["elevators_per_building"],"name":[25],"type":["int"],"align":["right"]}],"data":[{"1":"1D10028","2":"1024795","3":"1021","4":"26","5":"1614","6":"BROADWAY","7":"10019","8":"Manhattan","9":"Dumbwaiter","10":"2015-09-18","11":"2006-03-07","12":"NA","13":"16'4\"","14":"50","15":"500","16":"Spring","17":"NA","18":"NA","19":"I","20":"A","21":"B","22":"1","23":"40.76088","24":"-73.98391","25":"11","_rn_":"1"},{"1":"1D10094","2":"1041822","3":"1392","4":"25","5":"53","6":"E 77TH ST","7":"10021","8":"Manhattan","9":"Dumbwaiter","10":"2015-08-07","11":"2006-05-15","12":"NA","13":"NA","14":"25","15":"500","16":"NA","17":"NA","18":"OD","19":"NA","20":"P","21":"SB","22":"3","23":"40.77502","24":"-73.96256","25":"2","_rn_":"2"},{"1":"1D10097","2":"1038223","3":"1323","4":"1","5":"201","6":"E 49 ST","7":"10017","8":"Manhattan","9":"Dumbwaiter","10":"2015-04-02","11":"1998-09-21","12":"NA","13":"23","14":"50","15":"500","16":"NA","17":"NA","18":"BD","19":"I","20":"A","21":"B","22":"2","23":"40.75518","24":"-73.97079","25":"1","_rn_":"3"},{"1":"1D10146","2":"1080443","3":"1274","4":"6","5":"40","6":"CENTRAL PARK SOUTH","7":"NA","8":"Manhattan","9":"Dumbwaiter","10":"2014-10-15","11":"2010-08-02","12":"NA","13":"8'","14":"50","15":"500","16":"NA","17":"NA","18":"BD","19":"NA","20":"A","21":"B","22":"1","23":"40.76500","24":"-73.97573","25":"1","_rn_":"4"},{"1":"1D10200","2":"1085777","3":"1074","4":"24","5":"651","6":"TENTH AVENUE","7":"NA","8":"Manhattan","9":"Dumbwaiter","10":"2015-06-15","11":"2001-04-24","12":"NA","13":"24 FT","14":"50","15":"NA","16":"NA","17":"NA","18":"NA","19":"NA","20":"NA","21":"C","22":"G","23":"40.76221","24":"-73.99434","25":"2","_rn_":"5"},{"1":"1D10301","2":"1002075","3":"181","4":"16","5":"179","6":"FRANKLIN STREET","7":"10013","8":"Manhattan","9":"Dumbwaiter","10":"2015-02-25","11":"2002-11-06","12":"NA","13":"9'0","14":"50","15":"500","16":"NA","17":"NA","18":"OD","19":"I","20":"A","21":"BAS","22":"1","23":"40.71918","24":"-74.00962","25":"2","_rn_":"6"},{"1":"1D10302","2":"1010518","3":"606","4":"4","5":"121","6":"WEST 10 STREET","7":"10011","8":"Manhattan","9":"Dumbwaiter","10":"2014-04-14","11":"2003-01-22","12":"NA","13":"12'0\"","14":"50","15":"300","16":"Spring","17":"NA","18":"OD","19":"I","20":"A","21":"B","22":"1","23":"40.73486","24":"-73.99974","25":"1","_rn_":"7"},{"1":"1D10303","2":"1085955","3":"1329","4":"1","5":"915","6":"3 AVENUE","7":"10022","8":"Manhattan","9":"Dumbwaiter","10":"2015-03-26","11":"2002-12-11","12":"NA","13":"23'1\"","14":"50","15":"500","16":"NA","17":"NA","18":"BD","19":"NA","20":"A","21":"C","22":"2","23":"40.75896","24":"-73.96759","25":"1","_rn_":"8"},{"1":"1D10304","2":"1044058","3":"1430","4":"5","5":"220","6":"E. 76 ST","7":"10021","8":"Manhattan","9":"Dumbwaiter","10":"2015-09-09","11":"2002-12-10","12":"NA","13":"49'","14":"50","15":"500","16":"NA","17":"NA","18":"OG","19":"I","20":"A","21":"BMT","22":"4","23":"40.77154","24":"-73.95782","25":"1","_rn_":"9"},{"1":"1D10305","2":"1087468","3":"1951","4":"4","5":"133","6":"MORNINGSIDE AVENUE","7":"NA","8":"Manhattan","9":"Dumbwaiter","10":"2014-11-25","11":"2003-12-01","12":"NA","13":"73-10","14":"100","15":"500","16":"NA","17":"NA","18":"OG","19":"NA","20":"P","21":"C","22":"5","23":"40.81095","24":"-73.95376","25":"5","_rn_":"10"},{"1":"1D10306","2":"1087468","3":"1951","4":"4","5":"133","6":"MORNINGSIDE AVENUE","7":"NA","8":"Manhattan","9":"Dumbwaiter","10":"2014-11-25","11":"2003-12-01","12":"NA","13":"73-10","14":"100","15":"500","16":"NA","17":"NA","18":"OG","19":"NA","20":"A","21":"C","22":"5","23":"40.81095","24":"-73.95376","25":"5","_rn_":"11"},{"1":"1D10308","2":"1041820","3":"1392","4":"12","5":"19","6":"E 77TH ST","7":"10021","8":"Manhattan","9":"Dumbwaiter","10":"2013-06-18","11":"2004-03-25","12":"NA","13":"20\"8\"","14":"50","15":"200","16":"NA","17":"NA","18":"NA","19":"NA","20":"A","21":"B,1","22":"2","23":"40.77542","24":"-73.96348","25":"1","_rn_":"12"},{"1":"1D10309","2":"1003919","3":"304","4":"2","5":"97","6":"BOWERY","7":"10002","8":"Manhattan","9":"Dumbwaiter","10":"2014-04-23","11":"2003-05-05","12":"NA","13":"16'1\"","14":"50","15":"500","16":"NA","17":"NA","18":"OD","19":"I","20":"P","21":"B","22":"2","23":"40.71733","24":"-73.99503","25":"2","_rn_":"13"},{"1":"1D10310","2":"1085024","3":"1041","4":"44","5":"324","6":"WEST   51 STREET","7":"NA","8":"Manhattan","9":"Dumbwaiter","10":"2015-06-09","11":"2003-03-10","12":"NA","13":"9'2'","14":"50","15":"300","16":"Spring","17":"NA","18":"BD","19":"I","20":"C","21":"B","22":"1","23":"40.76320","24":"-73.98689","25":"1","_rn_":"14"},{"1":"1D10311","2":"1001486","3":"136","4":"27","5":"110","6":"CHAMBERS ST","7":"10007","8":"Manhattan","9":"Dumbwaiter","10":"2015-02-19","11":"2003-06-20","12":"NA","13":"24'10","14":"50","15":"500","16":"NA","17":"NA","18":"OD","19":"I","20":"P","21":"B","22":"2","23":"40.71488","24":"-74.00833","25":"1","_rn_":"15"},{"1":"1D10313","2":"1041283","3":"1383","4":"60","5":"16","6":"EAST 69 STREET","7":"10021","8":"Manhattan","9":"Dumbwaiter","10":"2013-06-10","11":"2004-06-29","12":"NA","13":"11","14":"50","15":"500","16":"NA","17":"NA","18":"NA","19":"I","20":"A","21":"1F","22":"2R","23":"40.76985","24":"-73.96744","25":"2","_rn_":"16"},{"1":"1D10314","2":"1046656","3":"1492","4":"146","5":"40","6":"EAST 81 STREET","7":"10028","8":"Manhattan","9":"Dumbwaiter","10":"2012-12-06","11":"2003-12-23","12":"NA","13":"9.75","14":"25","15":"75","16":"NA","17":"NA","18":"OD","19":"NA","20":"A","21":"1","22":"2","23":"40.77718","24":"-73.96068","25":"1","_rn_":"17"},{"1":"1D10315","2":"1001480","3":"136","4":"7503","5":"60","6":"WARREN STREET","7":"10007","8":"Manhattan","9":"Dumbwaiter","10":"2015-02-24","11":"2007-01-09","12":"NA","13":"37.6","14":"50","15":"75","16":"Spring","17":"NA","18":"BG","19":"NA","20":"A","21":"6","22":"9","23":"40.71501","24":"-74.00933","25":"1","_rn_":"18"},{"1":"1D10316","2":"1024656","3":"1013","4":"29","5":"592","6":"SEVENTH AVE","7":"10036","8":"Manhattan","9":"Dumbwaiter","10":"2015-09-16","11":"2003-06-09","12":"NA","13":"23\"0","14":"50","15":"500","16":"NA","17":"NA","18":"OD","19":"NA","20":"A","21":"1MZ","22":"2","23":"40.75586","24":"-73.98757","25":"4","_rn_":"19"},{"1":"1D10323","2":"1053310","3":"1718","4":"159","5":"58","6":"WEST 120 STREET","7":"10027","8":"Manhattan","9":"Dumbwaiter","10":"2014-12-16","11":"2003-08-01","12":"NA","13":"9'6\"","14":"50","15":"3000","16":"Spring","17":"NA","18":"BD","19":"I","20":"C","21":"C","22":"1","23":"40.80388","24":"-73.94674","25":"1","_rn_":"20"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Because all you’re doing is writing a small example script, you just grab a few variables at random and plot them in a pretty simple Quarto document. That <code>.qmd</code> looks like this:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb3-2"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">title:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Cool graphs about elevators"</span></span>
<span id="cb3-3"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">author:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> Mike Mahoney</span></span>
<span id="cb3-4"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">subtitle:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Last generated on:"</span></span>
<span id="cb3-5"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">date:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> today</span></span>
<span id="cb3-6"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">format:</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  html:</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    echo: false</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(elevators)</span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>())</span>
<span id="cb3-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb3-17"></span>
<span id="cb3-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Speed over time</span></span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb3-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb3-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb3-23">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(approval_date, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb3-28"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb3-29"></span>
<span id="cb3-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Speed versus capacity</span></span>
<span id="cb3-31"></span>
<span id="cb3-32"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb3-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb3-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb3-35">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(capacity_lbs, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb3-40"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Where in the world did all my elevators go</span></span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb3-45">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(longitude, latitude)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>()</span>
<span id="cb3-49"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p>(You can see what this looks like when rendered over at <a href="../../junkdrawer/a-simple-script/">this link</a>.)</p>
<p>With your small example all set, you rush off to show it to friends and family before officially publishing it to the web.</p>
</section>
<section id="parameterized-reports" class="level1">
<h1>Parameterized Reports</h1>
<p>Your colleague likes your report! However, as it goes when you show people a graph, they have <em>questions</em>. They want to know: what would these graphs look like for only Manhattan?</p>
<p>This isn’t your first time <a href="https://en.wikipedia.org/wiki/If_You_Give_a_Mouse_a_Cookie">giving a colleague some data</a>, and so you know better than to just scrape the data and email them a number. Instead, you edit your Quarto file so that it could filter to any borough, and make it easy to change the filter based on <a href="https://quarto.org/docs/computations/parameters.html">Quarto parameters</a>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb4-2"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">title:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Cool graphs about elevators"</span></span>
<span id="cb4-3"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">author:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> Mike Mahoney</span></span>
<span id="cb4-4"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">subtitle:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Last generated on: 2023-06-12"</span></span>
<span id="cb4-5"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">date:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> today</span></span>
<span id="cb4-6"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">format:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  html: </span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    echo: false</span></span>
<span id="cb4-9"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">params:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  borough: "NA"</span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(elevators)</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>borough) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>borough <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>) {</span>
<span id="cb4-18">  elevators <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> elevators[elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>borough <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>borough, ]</span>
<span id="cb4-19">}</span>
<span id="cb4-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(elevators) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb4-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No elevators were selected. Did you misspell `borough`?"</span>)</span>
<span id="cb4-22">}</span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb4-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>())</span>
<span id="cb4-26"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb4-27"></span>
<span id="cb4-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Speed over time</span></span>
<span id="cb4-29"></span>
<span id="cb4-30"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb4-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb4-33">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(approval_date, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb4-38"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb4-39"></span>
<span id="cb4-40"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Speed versus capacity</span></span>
<span id="cb4-41"></span>
<span id="cb4-42"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb4-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb4-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb4-45">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(capacity_lbs, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb4-50"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb4-51"></span>
<span id="cb4-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Where in the world did all my elevators go</span></span>
<span id="cb4-53"></span>
<span id="cb4-54"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb4-55">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(longitude, latitude)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>()</span>
<span id="cb4-59"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p>Now, by default, this output looks <a href="../../junkdrawer/parameterized-reports/">the same as the last time</a>. However, when we run <code>quarto render</code> now, we can either pass parameters on the command line, for instance using:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> render elevators.qmd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-P</span> borough:Manhattan</span></code></pre></div>
<p>Or, we can write a YAML file with our parameters (say, <code>params.yml</code>):</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">borough</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Manhattan</span></span></code></pre></div>
<p>And call <code>quarto render</code> via:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> render elevators.qmd <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--execute-params</span> params.yml</span></code></pre></div>
<p>(The results of this approach are at <a href="../../junkdrawer/parameterized-reports/manhattan">this link</a>.)</p>
<p>This will make it easier to re-run your report every time your colleague comes to you with “one last” request.</p>
<p>Or, heck, if they have R installed you can make them run it themselves. You spend an hour bashing out a Shiny app and save it in the same folder as <code>elevators.qmd</code>:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">required_packages <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmarkdown"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"remotes"</span>)</span>
<span id="cb8-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (x <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> required_packages) {</span>
<span id="cb8-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(x)</span>
<span id="cb8-4">}</span>
<span id="cb8-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elevators"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) {</span>
<span id="cb8-6">  remotes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EmilHvitfeldt/elevators"</span>)</span>
<span id="cb8-7">}</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb8-10">elevators <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>elevators</span>
<span id="cb8-11"></span>
<span id="cb8-12">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Self-Service Elevator Analytics"</span>),</span>
<span id="cb8-15"></span>
<span id="cb8-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectizeInput</span>(</span>
<span id="cb8-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"borough"</span>,</span>
<span id="cb8-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Borough:"</span>,</span>
<span id="cb8-19">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>borough)))),</span>
<span id="cb8-20"></span>
<span id="cb8-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(</span>
<span id="cb8-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"render"</span>,</span>
<span id="cb8-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Render!"</span></span>
<span id="cb8-24">    ),</span>
<span id="cb8-25"></span>
<span id="cb8-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"status"</span>)</span>
<span id="cb8-27">)</span>
<span id="cb8-28"></span>
<span id="cb8-29">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb8-30"></span>
<span id="cb8-31">    output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>status <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb8-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>render) {</span>
<span id="cb8-33">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isolate</span>(</span>
<span id="cb8-34">                quarto<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quarto_render</span>(</span>
<span id="cb8-35">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elevators.qmd"</span>,</span>
<span id="cb8-36">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">execute_params =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">borough =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>borough)</span>
<span id="cb8-37">                )</span>
<span id="cb8-38">            )</span>
<span id="cb8-39">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rendering complete at"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>())</span>
<span id="cb8-40">        }</span>
<span id="cb8-41">    })</span>
<span id="cb8-42"></span>
<span id="cb8-43">}</span>
<span id="cb8-44"></span>
<span id="cb8-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ui =</span> ui, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server =</span> server)</span></code></pre></div>
<p>Now your colleague just needs to open the file in RStudio, click the cute little “Run App” button, and then they can answer all elevator questions to their heart’s content. If you set up your Quarto document to generate PDFs, they can even email their reports to other elevator enthusiasts.</p>
</section>
<section id="more-complicated-logic" class="level1">
<h1>More Complicated Logic</h1>
<p>Your app has been a hit with your colleague! In fact, possibly too much of a hit. After a recent <a href="https://github.com/rstudio/rstudio-conf-2022-program">trip</a>, they’ve collected a bunch more data reflecting elevators across Maryland, and are wondering if you’d be able to extend your report to support this new dataset as well.</p>
<p>You have now become appropriately resigned to the fact that you are now “the elevator guy”, and will have weird facts about elevator speeds stored in your brain until the end of time. So you start digging into the Maryland data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>md_elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[""],"name":["_rn_"],"type":[""],"align":["left"]},{"label":["location_name"],"name":[1],"type":["chr"],"align":["left"]},{"label":["location_type"],"name":[2],"type":["chr"],"align":["left"]},{"label":["county"],"name":[3],"type":["chr"],"align":["left"]},{"label":["location_address"],"name":[4],"type":["chr"],"align":["left"]},{"label":["registration_number"],"name":[5],"type":["chr"],"align":["left"]},{"label":["status"],"name":[6],"type":["chr"],"align":["left"]},{"label":["certificate_expiration_date"],"name":[7],"type":["chr"],"align":["left"]},{"label":["equipment_type"],"name":[8],"type":["chr"],"align":["left"]},{"label":["equipment_capacity"],"name":[9],"type":["chr"],"align":["left"]},{"label":["equipment_speed"],"name":[10],"type":["chr"],"align":["left"]},{"label":["equipment_travel"],"name":[11],"type":["chr"],"align":["left"]},{"label":["owner_contact"],"name":[12],"type":["chr"],"align":["left"]},{"label":["owner_contact_2"],"name":[13],"type":["chr"],"align":["left"]},{"label":["inspection_type"],"name":[14],"type":["chr"],"align":["left"]},{"label":["last_inspection_date"],"name":[15],"type":["chr"],"align":["left"]}],"data":[{"1":"111 Cathedral Street","2":"Private","3":"Anne Arundel","4":"111 Cathedral St , Annapolis , MD , 21401-2701 , Anne Arundel","5":"AA1000","6":"Active","7":"2023-03-01","8":"Hydraulic Basement (HB)","9":"1500","10":"100","11":"22 feet 3 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401\", :phoneUnlisted nil, :line2 \"\", :privacyWaiver nil, :cell nil, :line1 \"111 Cathedral St Suite 100\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88adb8d2b5e2d7fc843a\", :name \"Mailing\"}, :email nil, :additionalData {}, :phone \"\", :name \"111 Cathedral Street LLC\", :title \"\", :id \"4564608\", :company \"111 Cathedral Street LLC\"} {:id \"4564609\", :name \"STURSA FAMILY, LTD., PTN.\", :company \"STURSA FAMILY, LTD., PTN.\", :title nil, :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"ANNAPOLIS\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"2525 RIVA ROAD, SUITE 110\", :country nil, :faxUnlisted nil}, :phone \"410-268-8400\", :fax \"410-268-9592\", :email nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21403\", :phoneUnlisted nil, :line2 \"435 4th St\", :privacyWaiver nil, :cell nil, :line1 \"\", :country nil, :faxUnlisted nil}, :fax \"410-268-9592\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :additionalData {}, :phone \"410-268-8400\", :name \"Sandra Friedman\", :title \"Property Manager\", :id \"4978893\", :company \"Stursa Family LP c/o Innovative Properties Inc\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21403\", :phoneUnlisted nil, :line2 \"435 4th St\", :privacyWaiver nil, :cell nil, :line1 \"\", :country nil, :faxUnlisted nil}, :fax \"410-268-9592\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :additionalData {}, :phone \"410-268-8400\", :name \"Sandra Friedman\", :title \"Property Manager\", :id \"4978893\", :company \"Stursa Family LP c/o Innovative Properties Inc\"}]","13":"Clayton Ruttcauslcas Maryland State Education Association Headquarters 410-263-6600","14":"Periodic (Elevator)","15":"2021-09-01","_rn_":"1"},{"1":"Maryland State Education Association Headquarters","2":"Private","3":"Anne Arundel","4":"140 Main St , Annapolis , MD , 21401-2003 , Anne Arundel","5":"AA1001","6":"Active","7":"2022-09-01","8":"Hydraulic Basement (HB)","9":"2500","10":"100","11":"40 feet 0 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401-2003\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"140 Main St\", :country nil, :faxUnlisted nil}, :fax \"410-263-3605\", :contactType nil, :email nil, :additionalData nil, :phone \"410-263-6600\", :name \"Wayne Frees\", :title \"Facilities Supervisor\", :id \"4559607\", :company \"Maryland State Education Association\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"140 MAIN STREET\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"410-263-6600\", :name \"MARYLAND STATE TEACHER ASSOCIATION\", :title \"Wayne Frees\", :id \"4559608\", :company \"MARYLAND STATE TEACHER ASSOCIATION\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401-2003\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"140 Main St\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"410-263-6600\", :name \"Clayton Ruttcauslcas\", :title \"Network Specialist\", :id \"5978925\", :company \"Maryland State Education Association Headquarters\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401-2003\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"140 Main St\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"410-263-6600\", :name \"Clayton Ruttcauslcas\", :title \"Network Specialist\", :id \"5978925\", :company \"Maryland State Education Association Headquarters\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401-2003\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"140 Main St.\", :country nil, :faxUnlisted nil}, :fax \"410-263-3605\", :contactType nil, :email \"nmilline@mseanea.org\", :additionalData nil, :phone \"410-263-6600\", :name \"Neven Milline\", :title \"Facility Supervisor\", :id \"60e603af20241f0036fde6a9\", :company \"Maryland State Education Association Headquarters\"}]","13":"Michael Blouder More Goodies Mall 410-269-0071","14":"Periodic Reinspection (Elevator)","15":"2022-03-18","_rn_":"2"},{"1":"More Goodies Mall","2":"Private","3":"Anne Arundel","4":"112 Main St , Annapolis , MD , 21401-2026 , Anne Arundel","5":"AA1002","6":"Active","7":"2022-10-11","8":"Hydraulic Basement (HB)","9":"2500","10":"125","11":"40 feet 4 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"112 Maine St\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :phone \"410-269-0071\", :name \"Michael Blouder\", :title \"Vice President\", :id \"4560348\", :company \"More Goodies Mall\"}]","13":"Carol Kelly Chase Home Inc 410-263-2723 ck.05103@yahoo.com","14":"Periodic (Elevator)","15":"2022-06-01","_rn_":"3"},{"1":"Chase/Lloyd House","2":"Private","3":"Anne Arundel","4":"22 Maryland Ave , Annapolis , MD , 21401-1628 , Anne Arundel","5":"AA1003","6":"Active","7":"2023-06-01","8":"Hydraulic Basement (HB)","9":"750","10":"30","11":"34 feet 0 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Annapolis\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21401-1628\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"22 Maryland Ave\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email \"ck.05103@yahoo.com\", :additionalData {}, :phone \"410-263-2723  (cell)410-268-1733\", :name \"Carol Kelly\", :title \"Manager\", :id \"4552424\", :company \"Chase Home Inc\"}]","13":"Harry Brocato Raven Power, LLC 410-787-5088 harry.brocato@talenenergy.com","14":"Periodic (Elevator)","15":"2021-09-28","_rn_":"4"},{"1":"Brandon Shores Power Plant","2":"Private","3":"Anne Arundel","4":"2030 Brandon Shores Rd , Baltimore , MD , 21226-1748 , Anne Arundel","5":"AA1004","6":"Active","7":"2022-09-28","8":"Rack & Pinion (R&P)","9":"900","10":"150","11":"750 feet 0 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"2030 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"410-787-6928\", :name \"Brandon Shores Engineering Projects\", :title nil, :id \"4551419\", :company \"Brandon Shores Engineering Projects\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"BALTIMORE\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21202\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"750 E Pratt St\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"410-783-2800\", :name \"EDWARD J. WEDELMEYER\", :title \"E & C SUPERVISOR\", :id \"4553188\", :company \"CONSTELLATION POWER SOURCE GENERATION, INC.\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"2030 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax \"443-213-3439\", :contactType nil, :email nil, :additionalData nil, :phone \"410-787-5088\", :name \"Carnell Williams\", :title \"Principal Engineer\", :id \"4711479\", :company \"Constellation Power Source Generation Inc\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1748\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"2030 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"410-787-5251\", :name \"Mark Kostewik\", :title \"Project Manager\", :id \"5603406\", :company \"Raven Power/Brandon Shores LLC\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Pasadena\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21122-2256\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"8115 Evening Star Dr\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"888-305-3022\", :name \"Creekstone Village\", :title nil, :id \"5605177\", :company \"Creekstone Village\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1748\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"2030 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email \"harry.brocato@talenenergy.com\", :additionalData {}, :phone \"410-787-5088\", :name \"Harry Brocato\", :title \"Engineer Manager\", :id \"5615653\", :company \"Raven Power, LLC\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"2030 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType nil, :email nil, :additionalData nil, :phone \"410-787-5088 (cell)410-971-7346\", :name \"Harry Brocato\", :title \"Engineer Manager\", :id \"5930500\", :company nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"2030 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax \"443-213-3439\", :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :additionalData nil, :phone \"410-787-5088\", :name \"Carnell Williams\", :title \"Principal Engineer\", :id \"4711479\", :company \"Constellation Power Source Generation Inc\"}]","13":"James Hoover Anne Arundel County Governement 410-222-8100","14":"Periodic (Elevator)","15":"2022-05-12","_rn_":"5"},{"1":"Arundel Center South","2":"Public","3":"Anne Arundel","4":"44 Calvert South , Annapolis , MD , 21401-1930 , Anne Arundel","5":"AA1005","6":"Active","7":"2021-12-03","8":"Traction Basement (TB)","9":"2000","10":"200","11":"48 feet 0 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Millersville\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21108-2599\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"8313 Grover Rd\", :country nil, :faxUnlisted nil}, :fax \"410-222-8108\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :phone \"410-222-8100\", :name \"James Hoover\", :title \"Facilities Administrator\", :id \"4549995\", :company \"Anne Arundel County Governement\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Millersville\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21108-2599\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"8313 Grover Rd\", :country nil, :faxUnlisted nil}, :fax \"410-222-8108\", :contactType nil, :email nil, :phone \"410-222-8100\", :name \"Lisa Edwards\", :title \"County Facilities\", :id \"5012916\", :company \"Anne Arundel County Government\"}]","13":"James Hoover Anne Arundel County Governement 410-222-8100","14":"Periodic (Elevator)","15":"2022-05-12","_rn_":"6"},{"1":"Arundel Center South","2":"Public","3":"Anne Arundel","4":"44 Calvert South , Annapolis , MD , 21401-1930 , Anne Arundel","5":"AA1006","6":"Active","7":"2021-12-03","8":"Traction Basement (TB)","9":"2000","10":"200","11":"48 feet 0 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Millersville\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21108-2599\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"8313 Grover Rd\", :country nil, :faxUnlisted nil}, :fax \"410-222-8108\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :phone \"410-222-8100\", :name \"James Hoover\", :title \"Facilities Administrator\", :id \"4549995\", :company \"Anne Arundel County Governement\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Millersville\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21108-2599\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"8313 Grover Rd\", :country nil, :faxUnlisted nil}, :fax \"410-222-8108\", :contactType nil, :email nil, :phone \"410-222-8100\", :name \"Lisa Edwards\", :title \"County Facilities\", :id \"5012916\", :company \"Anne Arundel County Government\"}]","13":"Kelli Rivera UMMS c/o JLL 410-910-7370","14":"Periodic (Elevator)","15":"2022-03-03","_rn_":"7"},{"1":"University of MD Medical System Corp (Shipley's Choice)","2":"Private","3":"Anne Arundel","4":"8601 Veterans Hwy , Millersville , MD , 21108-1547 , Anne Arundel","5":"AA1007","6":"Active","7":"2023-03-03","8":"Hydraulic Basement (HB)","9":"4500","10":"125","11":"12 feet 10 inches","12":"[{:id \"4549995\", :name \"James Hoover\", :company \"Anne Arundel County Governement\", :title \"Facilities Administrator\", :address {:line1 \"8313 Grover Rd\", :city \"Millersville\", :state \"MD\", :zipcode \"21108-2599\"}, :phone \"410-222-8100\", :fax \"410-222-8108\"} {:id \"4565992\", :name \"University of Maryland Medical Center\", :company \"University of Maryland Medical Center\", :address {:line1 \"Attn: Mary Anne Siwinski\", :line2 \"22 S Greene St\", :city \"Baltimore\", :state \"MD\", :zipcode \"21201-1544\"}, :phone \"410-328-8122\", :fax \"410-328-1920\", :email \"maryannesiwinski@umm.edu\"} {:id \"4566004\", :name \"Richie Stever\", :company \"University of Maryland Medical Center\", :title \"Director\", :address {:line1 \"22 S Greene St\", :city \"Baltimore\", :state \"MD\", :zipcode \"21201-1544\"}, :phone \"410-328-3787\", :fax \"410-328-7283\", :email \"rstever@umm.edu\"} {:id \"5012916\", :name \"Lisa Edwards\", :company \"Anne Arundel County Government\", :title \"County Facilities\", :address {:line1 \"8313 Grover Rd\", :city \"Millersville\", :state \"MD\", :zipcode \"21108-2599\"}, :phone \"410-222-8100\", :fax \"410-222-8108\"} {:id \"5106153\", :name \"Laurie Marino\", :company \"Shipley's Choice Medical Park Inc\", :title \"Senior Vice President/PM\", :address {:line1 \"c/o CIB Management LLC DBA Colliers Int'l\", :line2 \"8601 Robert Fulton Dr Suite 200\", :city \"Columbia\", :state \"MD\", :zipcode \"21046-2573\"}, :phone \"410-297-7000\", :fax \"443-543-0191\", :email \"Laurie.Marino@Colliers.com\"} {:id \"5818539\", :contactType nil, :name \"Kelli Rivera\", :company \"UMMS c/o JLL\", :title \"Senior General Manager\", :address {:line1 \"8601 Robert Fulton Dr Suite 220\", :city \"Columbia\", :state \"MD\", :zipcode \"21046-2573\"}, :phone \"410-910-7370  (cell)410-253-6919\"} {:address {:line1 \"c/o CIB Management LLC DBA Colliers Int'l\", :line2 \"8601 Robert Fulton Dr Suite 200\", :city \"Columbia\", :state \"MD\", :zipcode \"21046-2573\"}, :fax \"443-543-0191\", :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email \"Laurie.Marino@Colliers.com\", :phone \"410-297-7000\", :name \"Laurie Marino\", :title \"Senior Vice President/PM\", :id \"5106153\", :company \"Shipley's Choice Medical Park Inc\"}]","13":"H.A. Wagner 410-787-6939","14":"Periodic (Elevator)","15":"2021-08-20","_rn_":"8"},{"1":"H.A. Wagner Power Plant","2":"Private","3":"Anne Arundel","4":"3000 Brandon Shores Rd , Baltimore , MD , 21226-1757 , Anne Arundel","5":"AA1018","6":"Active","7":"2022-08-20","8":"Traction Overhead (TO)","9":"3500","10":"250","11":"122 feet 6 inches","12":"[{:id \"4553188\", :name \"EDWARD J. WEDELMEYER\", :company \"CONSTELLATION POWER SOURCE GENERATION, INC.\", :title \"E & C SUPERVISOR\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"BALTIMORE\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21202\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"750 E Pratt St\", :country nil, :faxUnlisted nil}, :phone \"410-783-2800\", :fax nil, :email nil} {:id \"5007139\", :name \"Steve Waller\", :company \"H A WAGNER POWER PLANT\", :title \"DIRECTOR OF SAFETY\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :phone \"410-787-5324\", :fax nil, :email nil} {:id \"5267168\", :name \"Joyhn Lang\", :company \"H.A. Wagner Power Plant\", :title \"E&C Supervisor\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 \"3000 Brandon Shores Rd\", :privacyWaiver nil, :cell nil, :line1 \"c/o Raven Power LLC\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email \"jlang@raven-power.com\"} {:id \"5268133\", :name \"Raven Power LLC\", :company \"Raven Power LLC\", :title nil, :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5324\", :name \"Steve Waller\", :title \"DIRECTOR OF SAFETY\", :id \"5007139\", :company \"H A WAGNER POWER PLANT\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5515\", :name \"Raven Power LLC\", :title nil, :id \"5268133\", :company \"Raven Power LLC\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"}]","13":"H.A. Wagner 410-787-6939","14":"Periodic (Elevator)","15":"2021-08-20","_rn_":"9"},{"1":"H.A. Wagner Power Plant","2":"Private","3":"Anne Arundel","4":"3000 Brandon Shores Rd , Baltimore , MD , 21226-1757 , Anne Arundel","5":"AA1019","6":"Active","7":"2022-08-20","8":"Traction Overhead (TO)","9":"3500","10":"300","11":"142 feet 6 inches","12":"[{:id \"4553188\", :name \"EDWARD J. WEDELMEYER\", :company \"CONSTELLATION POWER SOURCE GENERATION, INC.\", :title \"E & C SUPERVISOR\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"BALTIMORE\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21202\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"750 E Pratt St\", :country nil, :faxUnlisted nil}, :phone \"410-783-2800\", :fax nil, :email nil} {:id \"5007139\", :name \"Steve Waller\", :company \"H A WAGNER POWER PLANT\", :title \"DIRECTOR OF SAFETY\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :phone \"410-787-5324\", :fax nil, :email nil} {:id \"5267168\", :name \"Joyhn Lang\", :company \"H.A. Wagner Power Plant\", :title \"E&C Supervisor\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 \"3000 Brandon Shores Rd\", :privacyWaiver nil, :cell nil, :line1 \"c/o Raven Power LLC\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email \"jlang@raven-power.com\"} {:id \"5268133\", :name \"Raven Power LLC\", :company \"Raven Power LLC\", :title nil, :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5324\", :name \"Steve Waller\", :title \"DIRECTOR OF SAFETY\", :id \"5007139\", :company \"H A WAGNER POWER PLANT\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5515\", :name \"Raven Power LLC\", :title nil, :id \"5268133\", :company \"Raven Power LLC\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"}]","13":"H.A. Wagner 410-787-6939","14":"Periodic (Elevator)","15":"2022-06-30","_rn_":"10"},{"1":"H.A. Wagner Power Plant","2":"Private","3":"Anne Arundel","4":"3000 Brandon Shores Rd , Baltimore , MD , 21226-1757 , Anne Arundel","5":"AA1022","6":"Active","7":"2022-08-20","8":"Rack & Pinion (R&P)","9":"900","10":"150","11":"137 feet 7 inches","12":"[{:id \"4553188\", :name \"EDWARD J. WEDELMEYER\", :company \"CONSTELLATION POWER SOURCE GENERATION, INC.\", :title \"E & C SUPERVISOR\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"BALTIMORE\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21202\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"750 E Pratt St\", :country nil, :faxUnlisted nil}, :phone \"410-783-2800\", :fax nil, :email nil} {:id \"5007139\", :name \"Steve Waller\", :company \"H A WAGNER POWER PLANT\", :title \"DIRECTOR OF SAFETY\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :phone \"410-787-5324\", :fax nil, :email nil} {:id \"5267168\", :name \"Joyhn Lang\", :company \"H.A. Wagner Power Plant\", :title \"E&C Supervisor\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 \"3000 Brandon Shores Rd\", :privacyWaiver nil, :cell nil, :line1 \"c/o Raven Power LLC\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email \"jlang@raven-power.com\"} {:id \"5268133\", :name \"Raven Power LLC\", :company \"Raven Power LLC\", :title nil, :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5324\", :name \"Steve Waller\", :title \"DIRECTOR OF SAFETY\", :id \"5007139\", :company \"H A WAGNER POWER PLANT\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5515\", :name \"Raven Power LLC\", :title nil, :id \"5268133\", :company \"Raven Power LLC\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"}]","13":"H.A. Wagner 410-787-6939","14":"Periodic (Elevator)","15":"2022-06-29","_rn_":"11"},{"1":"H.A. Wagner Power Plant","2":"Private","3":"Anne Arundel","4":"3000 Brandon Shores Rd , Baltimore , MD , 21226-1757 , Anne Arundel","5":"AA1023","6":"Active","7":"2022-08-20","8":"Rack & Pinion (R&P)","9":"900","10":"150","11":"137 feet 7 inches","12":"[{:id \"4553188\", :name \"EDWARD J. WEDELMEYER\", :company \"CONSTELLATION POWER SOURCE GENERATION, INC.\", :title \"E & C SUPERVISOR\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"BALTIMORE\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21202\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"750 E Pratt St\", :country nil, :faxUnlisted nil}, :phone \"410-783-2800\", :fax nil, :email nil} {:id \"5007139\", :name \"Steve Waller\", :company \"H A WAGNER POWER PLANT\", :title \"DIRECTOR OF SAFETY\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :phone \"410-787-5324\", :fax nil, :email nil} {:id \"5267168\", :name \"Joyhn Lang\", :company \"H.A. Wagner Power Plant\", :title \"E&C Supervisor\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 \"3000 Brandon Shores Rd\", :privacyWaiver nil, :cell nil, :line1 \"c/o Raven Power LLC\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email \"jlang@raven-power.com\"} {:id \"5268133\", :name \"Raven Power LLC\", :company \"Raven Power LLC\", :title nil, :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :phone \"410-787-5515\", :fax nil, :email nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"1005 Brandon Shores Rd 2nd Floor\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5324\", :name \"Steve Waller\", :title \"DIRECTOR OF SAFETY\", :id \"5007139\", :company \"H A WAGNER POWER PLANT\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-5515\", :name \"Raven Power LLC\", :title nil, :id \"5268133\", :company \"Raven Power LLC\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21226-1757\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"3000 Brandon Shores Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-787-6939\", :name \"H.A. Wagner\", :title nil, :id \"5789502\", :company \"H.A. Wagner\"}]","13":"Crystal Webb Anne Arundel County Public Schools Facilities 410-255-2535 clwebb@aacps.org","14":"Periodic (Elevator)","15":"2021-11-19","_rn_":"12"},{"1":"Broadneck Senior High School (AACPS)","2":"Public","3":"Anne Arundel","4":"1265 Green Holly Dr , Annapolis , MD , 21409-4676 , Anne Arundel","5":"AA1024","6":"Active","7":"2022-11-19","8":"Hydraulic Basement (HB)","9":"3500","10":"150","11":"13 feet 4 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Pasadena\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21122-3223\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"9034 Fort Smallwood Rd\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88adb8d2b5e2d7fc843a\", :name \"Mailing\"}, :email \"clwebb@aacps.org\", :phone \"410-255-2535  (cell)443-770-5915\", :name \"Crystal Webb\", :title \"Specialist-Maintenance Planning\", :id \"4549444\", :company \"Anne Arundel County Public Schools Facilities\"} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Pasadena\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21122-3223\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"9034 Fort Smallwood Rd\", :country nil, :faxUnlisted nil}, :fax \"410-437-6947\", :contactType nil, :email \"clwebb@aacps.org\", :phone \"410-255-2535  (cell)443-770-5915\", :name \"Crystal Webb\", :title \"Specialist-Maintenance Planning\", :id \"4550003\", :company \"Anne Arundel County Public Schools\"}]","13":"Edie Resuta Brooklyn Community United Methodist Church 410-789-3688","14":"Periodic (Elevator)","15":"2020-12-08","_rn_":"13"},{"1":"Brooklyn Community United Methodist Church","2":"Private","3":"Anne Arundel","4":"110 Townsend Ave , Baltimore , MD , 21225-3052 , Anne Arundel","5":"AA1025","6":"Active","7":"2021-12-08","8":"Drum Basement (DB)","9":"500","10":"28","11":"12 feet 4 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Baltimore\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21225\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"110 Townsend Ave\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email nil, :additionalData {}, :phone \"410-789-3688  (cell)410-303-3923\", :name \"Edie Resuta\", :title \"Trustee Chair\", :id \"4551571\", :company \"Brooklyn Community United Methodist Church\"}]","13":"JEFFREY MULLER, ESA. PANOLAM INDUSTRIES INTERNATIONAL, INC 800-672-6652","14":"Periodic (Elevator)","15":"2008-04-24","_rn_":"14"},{"1":"NEVAMAR COMPANY, LLC","2":"Private","3":"Anne Arundel","4":"8339 Telegraph Rd , Odenton , MD , 21113-1322 , Anne Arundel","5":"AA1026","6":"Active / Sealed","7":"2010-04-24","8":"Traction Overhead (TO)","9":"8000","10":"50","11":"14 feet 0 inches","12":"[{:id \"4560725\", :contactType nil, :company \"NEVAMAR COMPANY, LLC\", :address {:line1 \"20 PROGRESS DRIVE\", :city \"Shelton\", :state \"CT\", :zipcode \"06484\"}, :phone \"410-519-2165\", :name \"NEVAMAR COMPANY, LLC\"} {:id \"4561352\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :company \"PANOLAM INDUSTRIES INTERNATIONAL, INC\", :address {:line1 \"20 Progress Dr\", :city \"Shelton\", :state \"CT\", :zipcode \"06484\"}, :phone \"800-672-6652\", :name \"PANOLAM INDUSTRIES INTERNATIONAL, INC\"}]","13":"JEFFREY MULLER, ESA. PANOLAM INDUSTRIES INTERNATIONAL, INC 800-672-6652","14":"Periodic (Elevator)","15":"2008-04-24","_rn_":"15"},{"1":"NEVAMAR COMPANY, LLC","2":"Private","3":"Anne Arundel","4":"8339 Telegraph Rd , Odenton , MD , 21113-1322 , Anne Arundel","5":"AA1027","6":"Active / Sealed","7":"2010-04-24","8":"Traction Overhead (TO)","9":"8000","10":"50","11":"47 feet 0 inches","12":"[{:id \"4560725\", :contactType nil, :company \"NEVAMAR COMPANY, LLC\", :address {:line1 \"20 PROGRESS DRIVE\", :city \"Shelton\", :state \"CT\", :zipcode \"06484\"}, :phone \"410-519-2165\", :name \"NEVAMAR COMPANY, LLC\"} {:id \"4561352\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :company \"PANOLAM INDUSTRIES INTERNATIONAL, INC\", :address {:line1 \"20 Progress Dr\", :city \"Shelton\", :state \"CT\", :zipcode \"06484\"}, :phone \"800-672-6652\", :name \"PANOLAM INDUSTRIES INTERNATIONAL, INC\"}]","13":"Dennis Coll Archbishop Spalding High School Inc 410-969-9105 ext 249 colld@archbishopspalding.org","14":"Periodic Reinspection (Elevator)","15":"2021-08-23","_rn_":"16"},{"1":"Archbishop Spalding High School","2":"Private","3":"Anne Arundel","4":"8080 New Cut Rd , Severn , MD , 21144-2301 , Anne Arundel","5":"AA1031","6":"Active","7":"2022-07-01","8":"Drum Basement (DB)","9":"350","10":"30","11":"7 feet 2 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Severn\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21144-2301\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"8080 New Cut Rd\", :country nil, :faxUnlisted nil}, :fax \"410-969-1026\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email \"colld@archbishopspalding.org\", :additionalData nil, :phone \"410-969-9105 ext 249\", :name \"Dennis Coll\", :title \"Facilities Director\", :id \"4550078\", :company \"Archbishop Spalding High School Inc\"}]","13":"Cherie Sampson Shaw Street Development LLC 443-926-5110","14":"Alt/Mod (Elevator)","15":"2022-05-23","_rn_":"17"},{"1":"Shaw Street Development LLC","2":"Private","3":"Anne Arundel","4":"25 Shaw St , Annapolis , MD , 21401-2717 , Anne Arundel","5":"AA1032","6":"Active","7":"2022-01-13","8":"Hydraulic Overhead (HO)","9":"2500","10":"125","11":"20 feet 3 inches","12":"[{:id \"4563552\", :contactType {:id \"609e88adb8d2b5e2d7fc843a\", :name \"Mailing\"}, :name \"Deanna Kauffman\", :company \"Shaw Street Development LLC\", :title \"Executive Administrator\", :address {:line1 \"1750 Forest Dr Suite 205\", :city \"Annapolis\", :state \"MD\", :zipcode \"21401-4211\"}, :phone \"301-261-1202\", :email \"dkauffman@diplomatfreight.com\"} {:address {:line1 \"25 Shaw St 2nd Floor\", :city \"Annapolis\", :state \"MD\", :zipcode \"21401-2717\"}, :fax \"410-263-2572\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :additionalData {}, :phone \"443-926-5110  (cell)443-926-5134\", :name \"Cherie Sampson\", :title \"Facility Manager\", :id \"4563553\", :company \"Shaw Street Development LLC\"}]","13":"Gina Gibson Housing Commission of Anne Arundel County 410-222-6200 ext 2120 gmgibson@hcaac.org","14":"Alt/Mod (Elevator)","15":"2021-05-18","_rn_":"18"},{"1":"Pinewood Village 2","2":"Public","3":"Anne Arundel","4":"7900 Benesch Cir , Glen Burnie , MD , 21060-7928 , Anne Arundel","5":"AA1033","6":"Active","7":"2019-09-17","8":"Hydraulic Basement (HB)","9":"2500","10":"125","11":"31 feet 4 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21061-9401\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"102 Crain Hwy N\", :country nil, :faxUnlisted nil}, :fax \"410-222-6214\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email \"gmgibson@hcaac.org\", :phone \"410-222-6200 ext 2120\", :name \"Gina Gibson\", :title \"Director of Property Mgmt.\", :id \"4557165\", :company \"Housing Commission of Anne Arundel County\"} {:id \"4557166\", :name \"Gina Gibson\", :company \"Housing Commission of Anne Arundel County\", :title \"Director of Property Management\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21061-3504\", :phoneUnlisted nil, :line2 \"P O Box 817\", :privacyWaiver nil, :cell nil, :line1 \"7477 Baltimore Annapolis Blvd, 3rd Floor\", :country nil, :faxUnlisted nil}, :phone \"410-222-6200 x2120\", :fax \"410-222-6214, 410-768-3889\", :email \"gmgibson@hcaac.org\"} {:id \"5964025\", :name \"Gina Gibson\", :company \"Pinewood Village 2\", :title \"Director of Property Management\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21060-7928\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"7900 Benesch Cir\", :country nil, :faxUnlisted nil}, :phone \"410-222-6210\", :fax nil, :email nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21060-7928\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"7900 Benesch Cir\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-222-6210\", :name \"Gina Gibson\", :title \"Director of Property Management\", :id \"5964025\", :company \"Pinewood Village 2\"}]","13":"Gina Gibson Housing Commission of Anne Arundel County 410-222-6200 ext 2120 gmgibson@hcaac.org","14":"Alt/Mod (Elevator)","15":"2021-05-10","_rn_":"19"},{"1":"Pinewood Village 2","2":"Public","3":"Anne Arundel","4":"7900 Benesch Cir , Glen Burnie , MD , 21060-7928 , Anne Arundel","5":"AA1034","6":"Active","7":"2019-09-17","8":"Hydraulic Basement (HB)","9":"2500","10":"125","11":"31 feet 4 inches","12":"[{:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21061-9401\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"102 Crain Hwy N\", :country nil, :faxUnlisted nil}, :fax \"410-222-6214\", :contactType {:id \"609e88bbb8d2b5e2d7fc843b\", :name \"Owner\"}, :email \"gmgibson@hcaac.org\", :phone \"410-222-6200 ext 2120\", :name \"Gina Gibson\", :title \"Director of Property Mgmt.\", :id \"4557165\", :company \"Housing Commission of Anne Arundel County\"} {:id \"4557166\", :name \"Gina Gibson\", :company \"Housing Commission of Anne Arundel County\", :title \"Director of Property Management\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21061-3504\", :phoneUnlisted nil, :line2 \"P O Box 817\", :privacyWaiver nil, :cell nil, :line1 \"7477 Baltimore Annapolis Blvd, 3rd Floor\", :country nil, :faxUnlisted nil}, :phone \"410-222-6200 x2120\", :fax \"410-222-6214, 410-768-3889\", :email \"gmgibson@hcaac.org\"} {:id \"5964025\", :name \"Gina Gibson\", :company \"Pinewood Village 2\", :title \"Director of Property Management\", :address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21060-7928\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"7900 Benesch Cir\", :country nil, :faxUnlisted nil}, :phone \"410-222-6210\", :fax nil, :email nil} {:address {:fax nil, :email nil, :jurisdiction nil, :phone nil, :city \"Glen Burnie\", :county nil, :state \"MD\", :placeOfResidence nil, :zipcode \"21060-7928\", :phoneUnlisted nil, :line2 nil, :privacyWaiver nil, :cell nil, :line1 \"7900 Benesch Cir\", :country nil, :faxUnlisted nil}, :fax nil, :contactType {:id \"609e889fb8d2b5e2d7fc8439\", :name \"Billing\"}, :email nil, :phone \"410-222-6210\", :name \"Gina Gibson\", :title \"Director of Property Management\", :id \"5964025\", :company \"Pinewood Village 2\"}]","13":"Kenny Cresswell Fitzgerald Oldsmobile Cadillac Inc 410-224-3480","14":"TPM (Elevator)","15":"2020-10-05","_rn_":"20"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Now Maryland, being worse than New York, doesn’t give you all the same information that you used for your original report. That means that only one of our graphs will actually render for both states.</p>
<p>Luckily, Quarto lets us selectively render parts of the report using standard <a href="https://quarto.org/docs/computations/r.html#chunk-options">chunk options</a>. By making chunk evaluation conditional on the state being described, we can make our single report work for both states.</p>
<p>With some tweaking, we can edit our <code>.qmd</code> so it works for both states:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb10-2"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">title:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Cool graphs about elevators"</span></span>
<span id="cb10-3"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">author:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> Mike Mahoney</span></span>
<span id="cb10-4"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">subtitle:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Last generated on: 2023-06-12"</span></span>
<span id="cb10-5"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">date:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> today</span></span>
<span id="cb10-6"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">format:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  html: </span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    echo: false</span></span>
<span id="cb10-9"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">params:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  region: "NA"</span></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  state: "NY"</span></span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb10-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(elevators)</span>
<span id="cb10-17"></span>
<span id="cb10-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb10-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>())</span>
<span id="cb10-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb10-21"></span>
<span id="cb10-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb10-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb10-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>state <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MD"</span>) {</span>
<span id="cb10-26">  elevators <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> md_elevators</span>
<span id="cb10-27">  </span>
<span id="cb10-28">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>) {</span>
<span id="cb10-29">    elevators <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> elevators[elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>county <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region, ]</span>
<span id="cb10-30">  }</span>
<span id="cb10-31">  </span>
<span id="cb10-32">  elevators <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> elevators[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equipment_capacity"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equipment_speed"</span>)]</span>
<span id="cb10-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(elevators) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"capacity_lbs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"speed_fpm"</span>)</span>
<span id="cb10-34">  elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>capacity_lbs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>capacity_lbs)</span>
<span id="cb10-35">  elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>speed_fpm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>speed_fpm)</span>
<span id="cb10-36">  </span>
<span id="cb10-37">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb10-38">  </span>
<span id="cb10-39">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>) {</span>
<span id="cb10-40">    elevators <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> elevators[elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>borough <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region, ]</span>
<span id="cb10-41">  }</span>
<span id="cb10-42">  </span>
<span id="cb10-43">}</span>
<span id="cb10-44"></span>
<span id="cb10-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(elevators) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb10-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No elevators were selected. Did you misspell `region`?"</span>)</span>
<span id="cb10-47">}</span>
<span id="cb10-48"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb10-49"></span>
<span id="cb10-50"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb10-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| results: asis</span></span>
<span id="cb10-53"></span>
<span id="cb10-54"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"## Speed over time"</span>)</span>
<span id="cb10-55"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb10-56"></span>
<span id="cb10-57"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb10-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb10-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb10-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| results: asis</span></span>
<span id="cb10-62">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(approval_date, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-65">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb10-67"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb10-68"></span>
<span id="cb10-69"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Speed versus capacity</span></span>
<span id="cb10-70"></span>
<span id="cb10-71"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb10-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb10-74">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(capacity_lbs, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-76">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-78">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb10-79"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb10-80"></span>
<span id="cb10-81"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb10-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| results: asis</span></span>
<span id="cb10-84"></span>
<span id="cb10-85"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"## Where in the world did all my elevators go"</span>)</span>
<span id="cb10-86"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb10-87"></span>
<span id="cb10-88"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb10-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb10-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb10-92"></span>
<span id="cb10-93">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-94">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(latitude, longitude)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-95">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>()</span>
<span id="cb10-97"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p>Our New York report looks the same as ever, while the Maryland report <a href="../../junkdrawer/more-complicated-logic/">has a little less content</a>. As it deserves.</p>
</section>
<section id="parameterized-sql" class="level1">
<h1>Parameterized SQL</h1>
<p>But why stop there? Everyone loves your report. You’re crowned elevator king. You’ve made your peace with knowing you’ll never do anything but elevators again.</p>
<p>In order to make your life a little bit easier, you’ve loaded your elevator data into a database, so you don’t need to keep track of the individual tables:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DBI)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RSQLite)</span>
<span id="cb11-3">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(RSQLite<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SQLite</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elevators.db"</span>)</span>
<span id="cb11-4">DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbWriteTable</span>(</span>
<span id="cb11-5">  con, </span>
<span id="cb11-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ny_elevators"</span>, </span>
<span id="cb11-7">  elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>elevators, </span>
<span id="cb11-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">overwrite =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-9">)</span>
<span id="cb11-10">DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbWriteTable</span>(</span>
<span id="cb11-11">  con, </span>
<span id="cb11-12">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"md_elevators"</span>, </span>
<span id="cb11-13">  elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>md_elevators, </span>
<span id="cb11-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">overwrite =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-15">)</span>
<span id="cb11-16">DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(con)</span></code></pre></div>
</div>
<p>This will make it easier to incorporate additional data into your report, as new elevators are constructed and your colleague visits new states. It’s easy enough to change your report over so that it reads from the database:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb12-2"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">title:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Cool graphs about elevators"</span></span>
<span id="cb12-3"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">author:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> Mike Mahoney</span></span>
<span id="cb12-4"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">subtitle:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> "Last generated on: 2023-06-12"</span></span>
<span id="cb12-5"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">date:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> today</span></span>
<span id="cb12-6"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">format:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  html: </span></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    echo: false</span></span>
<span id="cb12-9"><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">params:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  region: "NA"</span></span>
<span id="cb12-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  state: "MD"</span></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb12-13"></span>
<span id="cb12-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb12-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(elevators)</span>
<span id="cb12-17"></span>
<span id="cb12-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb12-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>())</span>
<span id="cb12-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb12-21"></span>
<span id="cb12-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb12-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb12-25">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(RSQLite<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SQLite</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elevators.db"</span>)</span>
<span id="cb12-26">query <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT </span></span>
<span id="cb12-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ?capacity_column AS capacity_lbs, </span></span>
<span id="cb12-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ?speed_column    AS speed_fpm,</span></span>
<span id="cb12-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ?approval_date   AS approval_date,</span></span>
<span id="cb12-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ?latitude        AS latitude, </span></span>
<span id="cb12-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ?longitude       AS longitude</span></span>
<span id="cb12-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  FROM ?table"</span></span>
<span id="cb12-33"></span>
<span id="cb12-34"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>state <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NY"</span>) {</span>
<span id="cb12-35">  query_args <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb12-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">capacity_column =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"capacity_lbs"</span>),</span>
<span id="cb12-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed_column =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"speed_fpm"</span>),</span>
<span id="cb12-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">approval_date =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"approval_date"</span>),</span>
<span id="cb12-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latitude =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude"</span>),</span>
<span id="cb12-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longitude =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude"</span>),</span>
<span id="cb12-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region_column =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"borough"</span>),</span>
<span id="cb12-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region</span>
<span id="cb12-43">  )</span>
<span id="cb12-44">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb12-45">  query_args <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb12-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">capacity_column =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equipment_capacity"</span>),</span>
<span id="cb12-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed_column =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equipment_speed"</span>),</span>
<span id="cb12-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">approval_date =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-49">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latitude =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-50">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longitude =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region_column =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"county"</span>),</span>
<span id="cb12-52">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">region =</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region</span>
<span id="cb12-53">  )</span>
<span id="cb12-54">}</span>
<span id="cb12-55"></span>
<span id="cb12-56"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> params<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>region <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>) {</span>
<span id="cb12-57">  query <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(query, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  WHERE </span></span>
<span id="cb12-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ?region_column == ?region"</span>)</span>
<span id="cb12-60">} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb12-61">  query_args <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(query_args, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb12-62">}</span>
<span id="cb12-63">  </span>
<span id="cb12-64">query <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqlInterpolate</span>(</span>
<span id="cb12-65">  con, </span>
<span id="cb12-66">  query, </span>
<span id="cb12-67">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">table =</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbQuoteIdentifier</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"md_elevators"</span>),</span>
<span id="cb12-68">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.dots =</span> query_args</span>
<span id="cb12-69">)</span>
<span id="cb12-70">elevators <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbGetQuery</span>(con, query)</span>
<span id="cb12-71">elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>capacity_lbs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>capacity_lbs)</span>
<span id="cb12-72">elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>speed_fpm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(elevators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>speed_fpm)</span>
<span id="cb12-73">DBI<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(con)</span>
<span id="cb12-74"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb12-75"></span>
<span id="cb12-76"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb12-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| results: asis</span></span>
<span id="cb12-79"></span>
<span id="cb12-80"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"## Speed over time"</span>)</span>
<span id="cb12-81"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb12-82"></span>
<span id="cb12-83"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb12-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb12-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb12-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| results: asis</span></span>
<span id="cb12-88">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(approval_date, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-90">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-91">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-92">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb12-93"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb12-94"></span>
<span id="cb12-95"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Speed versus capacity</span></span>
<span id="cb12-96"></span>
<span id="cb12-97"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-98"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb12-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb12-100">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-101">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(capacity_lbs, speed_fpm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-102">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-103">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-104">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>()</span>
<span id="cb12-105"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb12-106"></span>
<span id="cb12-107"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-108"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb12-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| results: asis</span></span>
<span id="cb12-110"></span>
<span id="cb12-111"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"## Where in the world did all my elevators go"</span>)</span>
<span id="cb12-112"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb12-113"></span>
<span id="cb12-114"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| message: false</span></span>
<span id="cb12-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| warning: false</span></span>
<span id="cb12-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: !expr params$state == "NY"</span></span>
<span id="cb12-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| results: asis</span></span>
<span id="cb12-119"></span>
<span id="cb12-120">elevators <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-121">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(latitude, longitude)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-122">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-123">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>()</span>
<span id="cb12-124"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p>Note that I’m using <code>DBI::sqlInterpolate()</code> and <code>DBI::dbQuoteIdentifier()</code>, to make sure we’re protecting our database from SQL injection attacks. And for this toy example, I’m hard-coding the database connection in. If your organization has a smart way to manage credentials, you’ll probably want to plug into that system (and should <em>definitely</em> not be storing passwords as plaintext in the file).</p>
<p>And to step out of the bit for a minute, there’s no reason that your Quarto document actually needs to generate a meaningful report. Sure, automatically updating a website (or emailing a PDF) is nice, but Quarto documents are able to run SQL queries, write out files, and do any other task you can do with any of the languages supported by knitr or jupyter. This makes it really easy to write powerful scripts that your colleagues can use to access and understand whatever data you’re working with.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>Tutorials</category>
  <category>Quarto</category>
  <guid>https://mm218.dev/posts/2022-08-04-how-to-use-quarto-for-parameterized-reporting/index.html</guid>
  <pubDate>Fri, 05 Aug 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-08-04-how-to-use-quarto-for-parameterized-reporting/elevator.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Progress, Purpose, Process</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-02-18-progress-purpose-process/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="cell-output-display">
<p><img src="https://mm218.dev/posts/2022-02-18-progress-purpose-process/pano.jpg" class="img-fluid" width="3059"></p>
</div>
</div>
<p>Today is my birthday, so please forgive me one of the most self-indulgent things I will ever write.</p>
<p>Two years ago I was living in Boston, working in tech, and a good bit bored. I was recognizing that I had spent most of the past year focusing on goals I had because they were the obvious next step, not because they were building me a life I wanted to live. I had lost a sense of agency over the future.</p>
<p>Luckily, at the time, I had just come across this podcast called “Cortex”. Over the holiday season, the hosts had discussed how they structure their goals around a “yearly theme” – not New Years’ Resolutions, not specific targets that you either achieve or fail at, but a broad concept that they use to inform their decisions over the course of the year. The point is to gently nudge your life in the direction you want it to go. <a href="https://www.youtube.com/watch?v=NVGuFdX5guE">Here’s a video with more information about this</a>; I recommend it.</p>
<p>So I decided that 23 would be my year of Progress; that I’d try and make a habit of making decisions that helped build momentum and kept me moving forward. I quit my job, started a PhD, moved states, and started building the personal and professional networks I rely on today. It wasn’t all perfect – about a month in there was a global pandemic I really wish I could have done something to prevent – but it nudged my life’s trajectory in a direction I’ve been happy with.</p>
<p>So when 24 came and it was time to change my theme, I decided to make it the year of Purpose. The year of Progress had involved saying yes to every opportunity that came my way; with Purpose, I wanted to make sure that I was being intentional with how I spent my time and making explicit decisions about where I’d invest my energy. I’m still not great at it, but I’ve gotten better at saying no when needed. I spent time improving my organization and time management to help me efficiently work through the things I said yes to. And I made a point of learning to consciously decide when to take time off, when to disconnect, and when to purposefully relax, so that I can now make those decisions without worrying about all the things I “should” be doing instead.</p>
<p>Now it’s 25, and it’s time for a new theme. I think my plan is for the year of Process: I like where I am with my life right now, and I like how I spend my time. But I could be better and more careful about how I approach both of those things. I’m going to try to get better with details, to improve my memory around small things.</p>
<p>I told you this would be indulgent. I know this sounds froofy. But it’s worked for me for two years now and I’m betting on round three. And I’m looking forward to seeing where this year takes me.</p>



 ]]></description>
  <guid>https://mm218.dev/posts/2022-02-18-progress-purpose-process/index.html</guid>
  <pubDate>Fri, 18 Feb 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-02-18-progress-purpose-process/pano.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>terrainr: An R package for creating immersive virtual environments</title>
  <dc:creator>Mike Mahoney</dc:creator>
  <link>https://mm218.dev/posts/2022-01-13-terrainr-an-r-package-for-creating-immersive-virtual-environments/index.html</link>
  <description><![CDATA[ 




<p>I’ve got a <a href="https://joss.theoj.org/papers/10.21105/joss.04060">new paper out at the Journal of Open Source Science</a>, documenting the <a href="https://www.mm218.dev/posts/2020/10/">“terrainr” package</a> I’ve been developing since late 2020. JOSS is a fantastic journal and is entirely open-source, so that first link should work for everyone.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://mm218.dev/posts/2022-01-13-terrainr-an-r-package-for-creating-immersive-virtual-environments/fig1.png" class="img-fluid figure-img" width="1571"></p>
<figcaption class="figure-caption">Left: Where typical geodata-to-IVE workflows leave you. Right: Where terrainr gets you.</figcaption>
</figure>
</div>
</div>
</div>
<p>The JOSS workflow is absolutely fascinating. I made a <a href="https://github.com/ropensci/terrainr/tree/paper">git branch in the terrainr repo</a> with the files needed to generate the paper, then (through a web form) opened a <a href="https://github.com/openjournals/joss-reviews/issues/4055">pre-review issue on GitHub</a>. The editors used that issue to assign a handling editor, then moved things over to <a href="https://github.com/openjournals/joss-reviews/issues/4060">a review issue</a>, where the paper was processed and prepared for submission via an <a href="https://github.com/openjournals/joss-papers/pull/2885">automatically generated PR</a>. The whole thing was incredibly efficient, and also entirely transparent – the logs of the paper processing workflow will be available until GitHub finally shuts down, a refreshing change compared to standard peer review.</p>
<p>The paper itself is a general overview of the terrainr package, trying to be a new enough contribution that it’s not just repeating the package documentation but not adding enough to spin off into <a href="https://www.mm218.dev/posts/2021-06-14-interactive-landscape-simulations-for-visual-resource-assessment/">an entirely separate research project</a>. It’s also very short – a nice feature of JOSS papers – so rather than summarize here I’ll just suggest you <a href="https://www.mm218.dev/papers/terrainr_2022.pdf">read it yourself</a>.</p>
<hr>
<script src="https://utteranc.es/client.js" repo="mikemahoney218/mm218.dev" issue-term="url" label="comment" theme="github-light" crossorigin="anonymous" async="">
</script>



 ]]></description>
  <guid>https://mm218.dev/posts/2022-01-13-terrainr-an-r-package-for-creating-immersive-virtual-environments/index.html</guid>
  <pubDate>Fri, 14 Jan 2022 00:00:00 GMT</pubDate>
  <media:content url="https://mm218.dev/posts/2022-01-13-terrainr-an-r-package-for-creating-immersive-virtual-environments/fig1.png" medium="image" type="image/png" height="51" width="144"/>
</item>
</channel>
</rss>
