{
  "hash": "6580788b5bb432a08bd0909a2e1465dd",
  "result": {
    "markdown": "---\ntitle: \"terrainr 0.3.0 is out today\"\ndescription: |\n  New version, who this?\ncategories: [\"R\", \"Data science\", \"terrainr\"]\nauthor:\n  - name: Mike Mahoney\n    url: {}\n    orcid_id: \"0000-0003-2402-304X\"\ndate: 02-17-2021\noutput:\n  distill::distill_article:\n    self_contained: false\n    toc: true\n    includes: \n      after_body: \"../../../utterances.html\"\n---\n\n\n[terrainr](https://mikemahoney218.github.io/terrainr/) is \n[in review with rOpenSci](https://github.com/ropensci/software-review/issues/416) \nand the first review just came back! I've been working through the comments over\nthe past week or so, and today that work has culminated in the release of \nterrainr version 0.3.0.\n\nThis is a big release with a handful of breaking changes, so I felt like I \nshould give a brief overview of the biggest user-facing changes.\n\n## Breaking Changes\n\n### Object Classes Are Dead; Long Live Object Classes\n\nThe single largest change is that \n*terrainr specific classes are no longer exported*, and users shouldn't need to \nworry about getting data into or out of those formats anymore. Instead, use \nany `sf` or `Raster` object in their place. For instance, workflows that used to \nlook like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Doesn't run:\nlibrary(terrainr)\nsimulated_data <-  data.frame(id = seq(1, 100, 1),\n                              lat = runif(100, 44.04905, 44.17609), \n                              lng = runif(100, -74.01188, -73.83493))\n\nbbox <- get_bbox(lat = simulated_data$lat, lng = simulated_data$lng) \n\noutput_tiles <- get_tiles(bbox = bbox,\n                          services = c(\"elevation\", \"ortho\"),\n                          resolution = 90)\n```\n:::\n\n\nNow look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terrainr)\nsimulated_data <-  data.frame(id = seq(1, 100, 1),\n                              lat = runif(100, 44.04905, 44.17609), \n                              lng = runif(100, -74.01188, -73.83493))\n\nsimulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\"))\nsimulated_data <- sf::st_set_crs(simulated_data, 4326)\n\noutput_tiles <- get_tiles(data = simulated_data,\n                          services = c(\"elevation\", \"ortho\"),\n                          resolution = 90)\n```\n:::\n\n\nAs part of this change, `get_bbox`, `get_coordinate_bbox`, and all class \ncreation and export functions are gone now. Use sf (or Raster*) objects in their\nplace instead.\n\n### New Names, Who This?\n\n`get_tiles` now uses the `services` argument to name its output list:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(output_tiles)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"elevation\" \"ortho\"    \n```\n:::\n:::\n\n\nThis means that if you request the service `elevation` you can retrieve your \ntiles using the name `elevation`. If you request the same endpoint with \nmultiple names, `get_tiles` will use whatever name was first in the vector.\n\n### Fewer Utilities, More Useful\n\nUtility functions `calc_haversine_distance`, `convert_distance`, \n`point_from_distance`, `rad_to_deg`, and `deg_to_rad` have been removed (or \nremoved from exports). For unit conversions, check out the \n[units](cran.r-project.org/package=units) package. This shouldn't impact the \nmain uses of the package, but is still worth flagging. \n\n## Show Me What You Got\n\nterrainr 0.3.0 adds a ggplot2 geom, `geom_spatial_rgb`, for plotting 3 band RGB\nrasters:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot() + \n  geom_spatial_rgb(data = output_tiles[[\"ortho\"]],\n                   # Required aesthetics r/g/b specify color bands:\n                   aes(x = x, y = y, r = red, g = green, b = blue)) + \n  coord_sf(crs = 4326)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nNote that above we just passed the file path to our raster; we can also pass a \nRasterStack:\n\n\n::: {.cell}\n\n```{.r .cell-code}\northo <- raster::stack(output_tiles[[\"ortho\"]])\n\nggplot() + \n  geom_spatial_rgb(data = ortho,\n                   aes(x = x, y = y, r = red, g = green, b = blue)) + \n  coord_sf(crs = 4326)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nOr a data.frame: \n\n\n::: {.cell}\n\n```{.r .cell-code}\northo_df <- raster::as.data.frame(ortho, xy = TRUE)\nnames(ortho_df) <- c(\"x\", \"y\", \"red\", \"green\", \"blue\")\n\nggplot() + \n  geom_spatial_rgb(data = ortho,\n                   aes(x = x, y = y, r = red, g = green, b = blue)) + \n  coord_sf(crs = 4326)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nNote that each step here gives you a little more control over the output image \n-- for instance, if your raster bands aren't in RGB order (or you have more than\nRGBA bands), you'll need to provide a data.frame to get a true color image. \n\nYou can then use these basemaps like most other ggplot geoms:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_spatial_rgb(data = ortho_df,\n                   aes(x = x, y = y, r = red, g = green, b = blue)) + \n  geom_sf(data = simulated_data) + \n  coord_sf(crs = 4326)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## New Docs, Who This?\n\nThose are just a few of the changes in 0.3.0; you can find a longer list in the\nNEWS file. \n\nOne thing not mentioned in the\n[NEWS](https://mikemahoney218.github.io/terrainr/news/index.html) file, though, \nis that this version of terrainr included a complete rewrite of the \ndocumentation. The docs were mostly written while the package was being \nconceptually developed, and as a result gave a bit too much emphasis to some \nideas while completely ignoring others. So I've rewritten all of the \ndocumentation that lives on the \n[terrainr website](https://mikemahoney218.github.io/terrainr/) -- let me know\nwhat you think about the new versions (or if you catch anything I've missed!).\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}